concrete recipehelp_eng of recipehelp = TDM_eng, Integers_eng ** open Utils_eng, Prelude in {

lin

top = (mkdef "start view");
up = (mkverb "back" "back" "back");
step3 = ss (("step three"));
step2 = ss (("step two"));
step1 = ss (("step one"));
step_to_choose = ss "which step";
step_to_choose_sys_answer individual = answer (individual.s) individual.s;
step_to_choose_sortal_usr_answer answer = answer;
step_to_choose_propositional_usr_answer answer = answer;
step_user_answer answer = answer;
step_individual individual = individual;
go_to_step = ss (("go to step"));
go_to_step_resolve_ynq_1 = resolve_ynq go_to_step;
go_to_step_user_question_2 step_to_choose = ss ("go to " ++ step_to_choose.s);
ask_go_to_step = ss (("go to a step"));
go_to_step_sys_answer_0 = answer (("ok _" ++ CAPIT ++ BIND ++ "s" ++ CAPIT ++ BIND ++ "t" ++ CAPIT ++ BIND ++ "r0_"));
go_to_step_sys_answer_1 = answer (("ok _" ++ CAPIT ++ BIND ++ "s" ++ CAPIT ++ BIND ++ "t" ++ CAPIT ++ BIND ++ "r1_"));
go_to_step_sys_answer_2 = answer (("ok _" ++ CAPIT ++ BIND ++ "s" ++ CAPIT ++ BIND ++ "t" ++ CAPIT ++ BIND ++ "r2_"));
go_to_step_sys_answer_3 = answer (("ok _" ++ CAPIT ++ BIND ++ "s" ++ CAPIT ++ BIND ++ "t" ++ CAPIT ++ BIND ++ "r3_"));
go_to_step_sys_answer_4 = answer (("ok _" ++ CAPIT ++ BIND ++ "s" ++ CAPIT ++ BIND ++ "t" ++ CAPIT ++ BIND ++ "r4_"));
go_to_step_sys_answer_5 = answer (("ok _" ++ CAPIT ++ BIND ++ "s" ++ CAPIT ++ BIND ++ "t" ++ CAPIT ++ BIND ++ "r5_"));
go_to_step_sys_answer_6 = answer (("ok _" ++ CAPIT ++ BIND ++ "s" ++ CAPIT ++ BIND ++ "t" ++ CAPIT ++ BIND ++ "r6_"));
go_to_step_sys_answer_7 = answer (("ok _" ++ CAPIT ++ BIND ++ "s" ++ CAPIT ++ BIND ++ "t" ++ CAPIT ++ BIND ++ "r7_"));
go_to_step_sys_answer_8 = answer (("ok _" ++ CAPIT ++ BIND ++ "s" ++ CAPIT ++ BIND ++ "t" ++ CAPIT ++ BIND ++ "r8_"));
go_to_step_sys_answer_9 = answer (("ok _" ++ CAPIT ++ BIND ++ "s" ++ CAPIT ++ BIND ++ "t" ++ CAPIT ++ BIND ++ "r9_"));
go_to_step_sortal_usr_answer answer = answer;
go_to_step_propositional_usr_answer answer = answer;
go_to_next = ss (("done"|"next step"|"then what?"));
go_to_next_resolve_ynq_3 = resolve_ynq go_to_next;
go_to_next_resolve_ynq_4 = resolve_ynq go_to_next;
go_to_next_resolve_ynq_5 = resolve_ynq go_to_next;
go_to_next_user_question_6 step_to_choose = ss ("go to " ++ step_to_choose.s);
ask_go_to_next = ss (("go to a step"));
go_to_next_sys_answer_0 = answer ("_STR0_");
go_to_next_sys_answer_1 = answer ("_STR1_");
go_to_next_sys_answer_2 = answer ("_STR2_");
go_to_next_sys_answer_3 = answer ("_STR3_");
go_to_next_sys_answer_4 = answer ("_STR4_");
go_to_next_sys_answer_5 = answer ("_STR5_");
go_to_next_sys_answer_6 = answer ("_STR6_");
go_to_next_sys_answer_7 = answer ("_STR7_");
go_to_next_sys_answer_8 = answer ("_STR8_");
go_to_next_sys_answer_9 = answer ("_STR9_");
go_to_next_sortal_usr_answer answer = answer;
go_to_next_propositional_usr_answer answer = answer;
unknown_string unknown = unknown;
mkUnknown string = string;
}

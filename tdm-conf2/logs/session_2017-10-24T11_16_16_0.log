2017-10-24 11:16:16,138 - session_2017-10-24T11_16_16_0 - DEBUG - Backend()
2017-10-24 11:16:16,138 - session_2017-10-24T11_16_16_0 - DEBUG - Backend.initialize()
2017-10-24 11:16:16,168 - session_2017-10-24T11_16_16_0 - DEBUG - Backend.add_module(DmeModule, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7fefe5e66e50>>, False])
2017-10-24 11:16:16,168 - session_2017-10-24T11_16_16_0 - DEBUG - Backend.add_module(GenerateModule, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7fefe5e66e50>>, 'eng'])
2017-10-24 11:16:16,168 - session_2017-10-24T11_16_16_0 - DEBUG - Backend.add_module(DeviceManager, args=[])
2017-10-24 11:16:16,168 - session_2017-10-24T11_16_16_0 - DEBUG - Backend.add_module(CogloadModule, args=[])
2017-10-24 11:16:16,168 - session_2017-10-24T11_16_16_0 - INFO - TurnManager.enter_state(IDLE, __init__) (previous state was None)
2017-10-24 11:16:16,168 - session_2017-10-24T11_16_16_0 - DEBUG - Backend.add_module(GuiBackend, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7fefe5e66e50>>, True, 'disabled'])
2017-10-24 11:16:16,168 - session_2017-10-24T11_16_16_0 - DEBUG - Backend.add_module(IndependentGuiBackend, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7fefe5e66e50>>])
2017-10-24 11:16:16,169 - session_2017-10-24T11_16_16_0 - DEBUG - Backend.add_module(InterpretModule, args=[<bound method Backend.get_device_manager of <tdm.backend.Backend object at 0x7fefe5e66e50>>, <bound method Backend.get_tis of <tdm.backend.Backend object at 0x7fefe5e66e50>>, 'eng', False, True])
2017-10-24 11:16:16,169 - session_2017-10-24T11_16_16_0 - DEBUG - Backend initialized
2017-10-24 11:16:16,169 - session_2017-10-24T11_16_16_0 - DEBUG - Backend started in directory '/home/gusmatssar/recipedialogue/tdm'
2017-10-24 11:16:16,169 - session_2017-10-24T11_16_16_0 - DEBUG - Backend uses TDM version '5.0.0'
2017-10-24 11:16:16,169 - session_2017-10-24T11_16_16_0 - DEBUG - Backend uses backend config {u'active_ddd': u'recipehelp', u'ddds': [u'recipehelp'], u'asr': u'none', u'use_recognition_profile': False, u'use_word_list_correction': False, u'supported_languages': [u'eng'], u'repeat_questions': False}
2017-10-24 11:16:16,169 - session_2017-10-24T11_16_16_0 - DEBUG - Backend uses language 'eng'
2017-10-24 11:16:16,169 - session_2017-10-24T11_16_16_0 - DEBUG - running module InterpretModule
2017-10-24 11:16:16,169 - session_2017-10-24T11_16_16_0 - DEBUG - running module DmeModule
2017-10-24 11:16:16,171 - session_2017-10-24T11_16_16_0 - DEBUG - running module DeviceManager
2017-10-24 11:16:16,171 - session_2017-10-24T11_16_16_0 - DEBUG - running module GenerateModule
2017-10-24 11:16:16,171 - session_2017-10-24T11_16_16_0 - DEBUG - running module IndependentGuiBackend
2017-10-24 11:16:16,171 - session_2017-10-24T11_16_16_0 - DEBUG - running module GuiBackend
2017-10-24 11:16:16,171 - session_2017-10-24T11_16_16_0 - DEBUG - running module CogloadModule
2017-10-24 11:16:16,172 - session_2017-10-24T11_16_16_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:16:16,172 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:16:16,172 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(REGISTER_BACKEND, None, sender=Backend, reason=None))
2017-10-24 11:16:16,173 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(REGISTER_BACKEND, None, sender=Backend, reason=None)
2017-10-24 11:16:16,174 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "Backend", "_reason": null, "event_type": "REGISTER_BACKEND"}
2017-10-24 11:16:16,174 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:16,174 - session_2017-10-24T11_16_16_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:16:16,207 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend received event {"content": null, "_sender": "Frontend", "_reason": null, "event_type": "FRONTEND_READY"}
2017-10-24 11:16:16,207 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:16:16,207 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(FRONTEND_READY, None, sender=Frontend, reason=None))
2017-10-24 11:16:16,209 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(FRONTEND_READY, None, sender=Frontend, reason=None)
2017-10-24 11:16:16,209 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(BACKEND_READY, None, sender=Backend, reason=None))
2017-10-24 11:16:16,209 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(BACKEND_READY, None, sender=Backend, reason=None)
2017-10-24 11:16:16,209 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "Backend", "_reason": null, "event_type": "BACKEND_READY"}
2017-10-24 11:16:16,210 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:16,210 - session_2017-10-24T11_16_16_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:16:16,212 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend received event {"content": null, "_sender": "Frontend", "_reason": null, "event_type": "START"}
2017-10-24 11:16:16,212 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:16:16,213 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(START, None, sender=Frontend, reason=None))
2017-10-24 11:16:16,213 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:16:16,213 - session_2017-10-24T11_16_16_0 - DEBUG - InterpretModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:16:16,213 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:16:16,213 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 11:16:16,213 - session_2017-10-24T11_16_16_0 - INFO - running ISU module: update (Event(START, None, sender=Frontend, reason=None))
2017-10-24 11:16:16,214 - session_2017-10-24T11_16_16_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fefe5e66fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fefe418b1d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836576.21
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(START, None, sender=Frontend, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: None
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([do(top)])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: None
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:16:16,214 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:16:16,214 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:16:16,215 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:16:16,217 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:16,217 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:16:16,217 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:16:16,220 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:16,220 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:16:16,220 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:16:16,220 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:16:16,220 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:16:16,220 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:16:16,220 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:16:16,220 - session_2017-10-24T11_16_16_0 - INFO - BEGIN integrate_moves
2017-10-24 11:16:16,220 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:16:16,220 - session_2017-10-24T11_16_16_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:16:16,221 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:16:16,221 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrate
2017-10-24 11:16:16,221 - session_2017-10-24T11_16_16_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:16:16,221 - session_2017-10-24T11_16_16_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:16:16,221 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:16,221 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_action
2017-10-24 11:16:16,221 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:16,221 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:16:16,221 - session_2017-10-24T11_16_16_0 - INFO - breaking out of accommodate
2017-10-24 11:16:16,221 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:16,222 - session_2017-10-24T11_16_16_0 - INFO - END integrate_moves
2017-10-24 11:16:16,222 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:16,222 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:16,224 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([do(top)])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:16:16,224 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:16,227 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:16:16,227 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:16,227 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:16,227 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:16,227 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:16:16,227 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:16,227 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:16,228 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:16,228 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:16,228 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:16:16,228 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:16:16,228 - session_2017-10-24T11_16_16_0 - INFO - running ISU module: select
2017-10-24 11:16:16,229 - session_2017-10-24T11_16_16_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fefe5e66fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fefe418b1d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836576.21
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(START, None, sender=Frontend, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: None
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: None
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:16:16,229 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:16:16,233 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.goals: stackset([])
+ tis.private.tmp.sys.goals: stackset([perform(top)])
?                                      ++++++++++++
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 11:16:16,233 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_action
2017-10-24 11:16:16,236 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.goal(X))])
?                                                                  +++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:16:16,236 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:16:16,238 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
?                                       +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.goal(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:16:16,238 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_move
2017-10-24 11:16:16,241 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
?                                                              +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:16:16,241 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:16:16,241 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_move
2017-10-24 11:16:16,241 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:16:16,243 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:16,243 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:16:16,243 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:16:16,245 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: None
?                       ^^^^
+ tis.timeout.duration: 5.0
?                       ^^^
-- END TIS changes --
2017-10-24 11:16:16,246 - session_2017-10-24T11_16_16_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:16:16,246 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None))
2017-10-24 11:16:16,246 - session_2017-10-24T11_16_16_0 - DEBUG - DeviceManager handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:16:16,246 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:16:16,246 - session_2017-10-24T11_16_16_0 - DEBUG - IndependentGuiBackend handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:16:16,246 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:16:16,246 - session_2017-10-24T11_16_16_0 - DEBUG - CogloadModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:16:16,247 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None))
2017-10-24 11:16:16,247 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 11:16:16,247 - session_2017-10-24T11_16_16_0 - DEBUG - IndependentGuiBackend handles Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 11:16:16,247 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend handles Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 11:16:16,247 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": {"ddd_name": "recipehelp", "language_code": "eng"}, "_sender": "DmeModule", "_reason": null, "event_type": "SET_DDD"}
2017-10-24 11:16:16,248 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:16,248 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:16:16,248 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:16:16,248 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:16:16,249 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:16,249 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None)))
2017-10-24 11:16:16,250 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None))
2017-10-24 11:16:16,250 - session_2017-10-24T11_16_16_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:16:16,251 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:16,251 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:16,252 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:16,253 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 11:16:16,253 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 11:16:16,253 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:16:16,253 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:16:16,253 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 11:16:16,254 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 11:16:16,254 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:16:16,254 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 11:16:16,255 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:16:16,255 - session_2017-10-24T11_16_16_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:16,257 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:16,257 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:16:16,257 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:16:16,258 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 11:16:16,258 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 11:16:16,258 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:16:16,258 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:16:16,258 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend generated message []
2017-10-24 11:16:16,258 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:16:16,258 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend posted event
2017-10-24 11:16:16,259 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 11:16:16,259 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:16:16,259 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:16:16,259 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:16,259 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 11:16:16,260 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:16:16,260 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:16:16,261 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:16,261 - session_2017-10-24T11_16_16_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:16:16,321 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend received event {"content": ["", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:16:16,321 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:16:16,322 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 11:16:16,322 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 11:16:16,322 - session_2017-10-24T11_16_16_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:16:16,322 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:16:16,322 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:16:16,322 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:16:16,323 - session_2017-10-24T11_16_16_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 11:16:16,323 - session_2017-10-24T11_16_16_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fefe5e66fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fefe418b1d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836576.32
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:16:16,324 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:16:16,324 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:16:16,324 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:16:16,326 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: None
?                        ^^^^
+ tis.shared.lu.speaker: SYS
?                        ^^^
-- END TIS changes --
2017-10-24 11:16:16,326 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:16:16,327 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:16:16,329 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:16,329 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:16:16,329 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:16:16,329 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:16:16,329 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:16:16,329 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:16:16,329 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:16:16,329 - session_2017-10-24T11_16_16_0 - INFO - BEGIN integrate_moves
2017-10-24 11:16:16,330 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:16:16,330 - session_2017-10-24T11_16_16_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:16:16,330 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:16:16,330 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrate
2017-10-24 11:16:16,334 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:16:16,334 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:16:16,334 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:16,334 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:16:16,334 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:16,334 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrate
2017-10-24 11:16:16,337 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 11:16:16,337 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:16:16,337 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:16,337 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:16:16,337 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:16,338 - session_2017-10-24T11_16_16_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:16:16,338 - session_2017-10-24T11_16_16_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:16:16,338 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:16,338 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_action
2017-10-24 11:16:16,338 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:16,338 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:16:16,338 - session_2017-10-24T11_16_16_0 - INFO - breaking out of accommodate
2017-10-24 11:16:16,338 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:16,338 - session_2017-10-24T11_16_16_0 - INFO - END integrate_moves
2017-10-24 11:16:16,338 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:16,339 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:16,339 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:16:16,339 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:16,339 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:16,339 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:16,340 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:16,340 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:16:16,342 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:16,342 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:16:16,342 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:16:16,342 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:16:16,342 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:16:16,343 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:16:16,343 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:16,343 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:16:16,344 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:16:16,344 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:16:16,344 - session_2017-10-24T11_16_16_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:16:43,895 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to a step"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:16:43,895 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:16:43,896 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None))
2017-10-24 11:16:43,896 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 11:16:43,896 - session_2017-10-24T11_16_16_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 11:16:43,896 - session_2017-10-24T11_16_16_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to a step"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:16:43,896 - session_2017-10-24T11_16_16_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:16:43,902 - session_2017-10-24T11_16_16_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 11:16:43,902 - session_2017-10-24T11_16_16_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])} for DDD 'recipehelp'
2017-10-24 11:16:43,902 - session_2017-10-24T11_16_16_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
2017-10-24 11:16:43,902 - session_2017-10-24T11_16_16_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:16:43,903 - session_2017-10-24T11_16_16_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AskMove": {"_type": "ask", "_ddd_name": "recipehelp", "_content": {"445f2b7f7189027ce75dac332c96dde0.WhQuestion": {"_type": "WHQ", "_content": {"24b0f339529d53d987534676834bafa7.LambdaAbstractedPredicateProposition": {"_ontology_name": "RecipehelpOntology", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.BuiltinSort": {"_dynamic": false, "_name": "string"}}, "name": "go_to_step", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to a step", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to a step"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to a step", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:16:43,903 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 11:16:43,903 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None))
2017-10-24 11:16:43,903 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:16:43,903 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:16:43,903 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:16:43,903 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 11:16:43,904 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:43,904 - session_2017-10-24T11_16_16_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 11:16:43,904 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:16:43,905 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:16:43,905 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:16:43,906 - session_2017-10-24T11_16_16_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:16:43,907 - session_2017-10-24T11_16_16_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fefe5e66fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fefe418b1d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836603.91
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:16:43,907 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:16:43,910 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
-- END TIS changes --
2017-10-24 11:16:43,911 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:16:43,914 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                 ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                 ^
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
?                                                                                                                                ^
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
?                                                                                                                                ^
-- END TIS changes --
2017-10-24 11:16:43,915 - session_2017-10-24T11_16_16_0 - INFO - hypotheses reranking had no effect
2017-10-24 11:16:43,915 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:16:43,919 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
?                                 -----------------------------------------------              ^^                                       ^^                              ^
+ tis.latest_moves: OpenQueue([#, Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')])
?                                               ^^^^^^^^                                      + ^                              ^                 +++++++++++++++++++++++++++
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 11:16:43,919 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:16:43,923 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:16:43,923 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:16:43,924 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:16:43,926 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:43,926 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:16:43,926 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:16:43,930 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([])
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
- tis.private.tmp.usr.plan: Stack([])
+ tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
- tis.private.tmp.usr.qud: stackset([])
+ tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                    ++++++++++
-- END TIS changes --
2017-10-24 11:16:43,931 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:16:43,931 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:16:43,931 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:16:43,931 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:16:43,932 - session_2017-10-24T11_16_16_0 - INFO - BEGIN integrate_moves
2017-10-24 11:16:43,932 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
2017-10-24 11:16:43,932 - session_2017-10-24T11_16_16_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:16:43,932 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
2017-10-24 11:16:43,932 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrate
2017-10-24 11:16:43,936 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: integrateUsrAsk
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
- tis.private.nim: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
- tis.shared.qud: stackset([?X.goal(X)])
+ tis.shared.qud: stackset([?X.go_to_step(X), ?X.goal(X)])
?                                ++++++++++++++++++
-- END TIS changes --
2017-10-24 11:16:43,936 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:16:43,936 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:43,940 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: downdateISSUES2
-- BEGIN TIS changes --
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                                                        --------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 11:16:43,940 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:16:43,940 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:43,944 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: findIssuePlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                                                   - ^ ^ -----------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^ ^^
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 11:16:43,944 - session_2017-10-24T11_16_16_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:16:43,944 - session_2017-10-24T11_16_16_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:16:43,944 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:43,944 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_action
2017-10-24 11:16:43,944 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:43,944 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:16:43,945 - session_2017-10-24T11_16_16_0 - INFO - breaking out of accommodate
2017-10-24 11:16:43,945 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:43,945 - session_2017-10-24T11_16_16_0 - INFO - END integrate_moves
2017-10-24 11:16:43,945 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:43,945 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:43,946 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:16:43,948 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.go_to_step(X), ?X.goal(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:16:43,948 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:43,948 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:43,949 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:43,949 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:43,949 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:16:43,949 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None)
2017-10-24 11:16:43,949 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:16:43,950 - session_2017-10-24T11_16_16_0 - INFO - running ISU module: select
2017-10-24 11:16:43,951 - session_2017-10-24T11_16_16_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fefe5e66fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fefe418b1d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836603.91
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:16:43,951 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:16:43,955 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                ++++++++++++++++++++++++++++++++
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                                      +++++++++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
+ tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 11:16:43,956 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_action
2017-10-24 11:16:43,959 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                                                                                  +++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:16:43,959 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:16:43,962 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
-- END TIS changes --
2017-10-24 11:16:43,962 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_move
2017-10-24 11:16:43,962 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:16:43,965 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.step_to_choose(X))])
-- END TIS changes --
2017-10-24 11:16:43,965 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_move
2017-10-24 11:16:43,968 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
?                                                                                    +++++++++++++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.step_to_choose(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:16:43,968 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:16:43,969 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_move
2017-10-24 11:16:43,969 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:16:43,971 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:43,971 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:16:43,971 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:16:43,974 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:43,975 - session_2017-10-24T11_16_16_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')])
2017-10-24 11:16:43,975 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:16:43,975 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None))
2017-10-24 11:16:43,975 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None)
2017-10-24 11:16:43,975 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to a step", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 11:16:43,976 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:43,976 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:16:43,976 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:16:43,976 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:16:43,977 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:43,977 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)))
2017-10-24 11:16:43,978 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:16:43,978 - session_2017-10-24T11_16_16_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:16:43,978 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:43,978 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:43,980 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:43,980 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={})
2017-10-24 11:16:43,980 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 11:16:43,980 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 11:16:43,980 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 11:16:43,980 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:16:43,980 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 11:16:43,980 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 11:16:43,981 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 11:16:43,981 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 11:16:43,981 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 11:16:43,981 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 11:16:43,981 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule: Move Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp') generated as u'Which step?'
2017-10-24 11:16:43,982 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None)
2017-10-24 11:16:43,983 - session_2017-10-24T11_16_16_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:43,985 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:43,985 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:16:43,985 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')])
2017-10-24 11:16:43,985 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={})
2017-10-24 11:16:43,985 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 11:16:43,985 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 11:16:43,986 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 11:16:43,986 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:16:43,986 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 11:16:43,986 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend generated message []
2017-10-24 11:16:43,986 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:16:43,986 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend posted event
2017-10-24 11:16:43,987 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None))
2017-10-24 11:16:43,987 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None)
2017-10-24 11:16:43,987 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "", "Which step?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:16:43,987 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:43,987 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 11:16:43,988 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:16:43,988 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:16:43,988 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:43,988 - session_2017-10-24T11_16_16_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:16:44,010 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend received event {"content": ["", "", "Which step?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:16:44,011 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:16:44,011 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, , Which step?], sender=TextOutputComponent, reason=None))
2017-10-24 11:16:44,011 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, , Which step?], sender=TextOutputComponent, reason=None)
2017-10-24 11:16:44,011 - session_2017-10-24T11_16_16_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:16:44,011 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 11:16:44,011 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 11:16:44,011 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 11:16:44,012 - session_2017-10-24T11_16_16_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None))
2017-10-24 11:16:44,013 - session_2017-10-24T11_16_16_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fefe5e66fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fefe418b1d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836604.01
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:16:44,013 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:16:44,013 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:16:44,013 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:16:44,019 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
?            ^^
- tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:16:44,019 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:16:44,019 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:16:44,022 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:44,023 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:16:44,023 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:16:44,023 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:16:44,023 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:16:44,023 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:16:44,023 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:16:44,023 - session_2017-10-24T11_16_16_0 - INFO - BEGIN integrate_moves
2017-10-24 11:16:44,023 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:16:44,023 - session_2017-10-24T11_16_16_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:16:44,023 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:16:44,024 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrate
2017-10-24 11:16:44,028 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:16:44,028 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:16:44,028 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:44,028 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:16:44,028 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:44,028 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrate
2017-10-24 11:16:44,033 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
?                                                                       +++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:16:44,033 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:16:44,033 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:44,034 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:16:44,034 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:44,034 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrate
2017-10-24 11:16:44,037 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.step_to_choose(X)])
-- END TIS changes --
2017-10-24 11:16:44,037 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:16:44,037 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:44,037 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:16:44,038 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:44,038 - session_2017-10-24T11_16_16_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:16:44,038 - session_2017-10-24T11_16_16_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:16:44,038 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:44,038 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_action
2017-10-24 11:16:44,038 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:44,038 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:16:44,038 - session_2017-10-24T11_16_16_0 - INFO - breaking out of accommodate
2017-10-24 11:16:44,038 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:44,038 - session_2017-10-24T11_16_16_0 - INFO - END integrate_moves
2017-10-24 11:16:44,038 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:44,039 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:44,039 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:16:44,039 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:44,039 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:44,040 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:44,040 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:44,040 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:16:44,042 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:44,042 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:16:44,042 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:16:44,043 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:16:44,043 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:16:44,043 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:16:44,044 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:44,044 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:16:44,044 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:16:44,045 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:16:44,045 - session_2017-10-24T11_16_16_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:16:48,631 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "step one"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:16:48,631 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:16:48,632 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None))
2017-10-24 11:16:48,632 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 11:16:48,632 - session_2017-10-24T11_16_16_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 11:16:48,632 - session_2017-10-24T11_16_16_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "step one"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:16:48,632 - session_2017-10-24T11_16_16_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:16:48,634 - session_2017-10-24T11_16_16_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 11:16:48,634 - session_2017-10-24T11_16_16_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])} for DDD 'recipehelp'
2017-10-24 11:16:48,634 - session_2017-10-24T11_16_16_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
2017-10-24 11:16:48,634 - session_2017-10-24T11_16_16_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:16:48,635 - session_2017-10-24T11_16_16_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "step one"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "step one", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.CustomSort": {"_ontology_name": "RecipehelpOntology", "_dynamic": false, "_name": "step"}}, "value": "step1"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "step one", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:16:48,635 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 11:16:48,635 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None))
2017-10-24 11:16:48,635 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:16:48,635 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:16:48,635 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:16:48,635 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 11:16:48,636 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:48,636 - session_2017-10-24T11_16_16_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 11:16:48,636 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:16:48,637 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:16:48,637 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:16:48,637 - session_2017-10-24T11_16_16_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:16:48,638 - session_2017-10-24T11_16_16_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fefe5e66fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fefe418b1d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836608.64
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.step_to_choose(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:16:48,638 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:16:48,642 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
-- END TIS changes --
2017-10-24 11:16:48,642 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:16:48,646 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
- tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
-- END TIS changes --
2017-10-24 11:16:48,650 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^^
-- END TIS changes --
2017-10-24 11:16:48,651 - session_2017-10-24T11_16_16_0 - INFO - hypotheses reranking had no effect
2017-10-24 11:16:48,651 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:16:48,654 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')])
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 11:16:48,654 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:16:48,658 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
-- END TIS changes --
2017-10-24 11:16:48,658 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:16:48,658 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:16:48,661 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:48,661 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:16:48,661 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:16:48,666 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                                        ^^
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                                                      +++++++++++++++++++++++++++++++  ^^^^^^^^
- tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
+ tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
- tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                       ^ ^^
+ tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
?                                       ^^^^^^ ^^^^^^^
-- END TIS changes --
2017-10-24 11:16:48,666 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:16:48,667 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:16:48,667 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:16:48,667 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:16:48,667 - session_2017-10-24T11_16_16_0 - INFO - BEGIN integrate_moves
2017-10-24 11:16:48,668 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
2017-10-24 11:16:48,668 - session_2017-10-24T11_16_16_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:16:48,668 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
2017-10-24 11:16:48,668 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrate
2017-10-24 11:16:48,672 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {step_to_choose(step1)}
- tis.shared.com: {}
+ tis.shared.com: {step_to_choose(step1)}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
-- END TIS changes --
2017-10-24 11:16:48,672 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:16:48,672 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:48,677 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {step_to_choose(step1)}
+ tis.shared.com: {step_to_choose(step1), resolved(?X.step_to_choose(X))}
- tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ------------------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 11:16:48,677 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:16:48,680 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
?                          -------------------------------
+ tis.private.plan: Stack([device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 11:16:48,680 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:48,680 - session_2017-10-24T11_16_16_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:16:48,681 - session_2017-10-24T11_16_16_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:16:48,681 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:48,681 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_action
2017-10-24 11:16:48,681 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:48,681 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:16:48,681 - session_2017-10-24T11_16_16_0 - INFO - breaking out of accommodate
2017-10-24 11:16:48,681 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:48,681 - session_2017-10-24T11_16_16_0 - INFO - END integrate_moves
2017-10-24 11:16:48,681 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:48,684 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {}
+ tis.private.bel: {go_to_step("chose a step")}
- tis.private.plan: Stack([device_query(?X.go_to_step(X)), forget(step_to_choose)])
?                          --------------------------------
+ tis.private.plan: Stack([forget(step_to_choose)])
-- END TIS changes --
2017-10-24 11:16:48,685 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:48,685 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:48,688 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(step_to_choose)])
+ tis.private.plan: Stack([])
- tis.shared.com: {step_to_choose(step1), resolved(?X.step_to_choose(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 11:16:48,688 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:48,688 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:48,688 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:48,688 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:16:48,691 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.step_to_choose(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:16:48,692 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:48,692 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:48,692 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:48,692 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:48,692 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:16:48,692 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 11:16:48,692 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None)
2017-10-24 11:16:48,693 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 11:16:48,693 - session_2017-10-24T11_16_16_0 - INFO - running ISU module: select
2017-10-24 11:16:48,694 - session_2017-10-24T11_16_16_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fefe5e66fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fefe418b1d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836608.64
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')])
tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.bel: {go_to_step("chose a step")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:16:48,694 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:16:48,697 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                         ---------------------------------
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.bel: {go_to_step("chose a step")}
- tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 11:16:48,698 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_action
2017-10-24 11:16:48,700 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                                                 +++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:16:48,700 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:16:48,703 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
-- END TIS changes --
2017-10-24 11:16:48,703 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_move
2017-10-24 11:16:48,706 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose a step")))])
- tis.private.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:16:48,706 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:16:48,706 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_move
2017-10-24 11:16:48,706 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:16:48,709 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:48,709 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:16:48,709 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:16:48,712 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 11:16:48,712 - session_2017-10-24T11_16_16_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')])
2017-10-24 11:16:48,712 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:16:48,712 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None))
2017-10-24 11:16:48,712 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 11:16:48,713 - session_2017-10-24T11_16_16_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 11:16:48,713 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None))
2017-10-24 11:16:48,713 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None)
2017-10-24 11:16:48,713 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": "step one", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 11:16:48,714 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:48,714 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None))
2017-10-24 11:16:48,714 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 11:16:48,714 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "go_to_step", "grammar_entry": null, "value": "chose a step"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:16:48,715 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:48,716 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)))
2017-10-24 11:16:48,716 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:16:48,716 - session_2017-10-24T11_16_16_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:16:48,717 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:48,717 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:48,718 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose a step")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:48,718 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp'), facts={go_to_step("chose a step")})
2017-10-24 11:16:48,718 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')
2017-10-24 11:16:48,719 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')
2017-10-24 11:16:48,719 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule: Move Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp') generated as u'Ok chose a step.'
2017-10-24 11:16:48,719 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose a step.], sender=GenerateModule, reason=None)
2017-10-24 11:16:48,720 - session_2017-10-24T11_16_16_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose a step")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:48,721 - session_2017-10-24T11_16_16_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok chose a step.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:16:48,722 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose a step")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:48,722 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:16:48,723 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')])
2017-10-24 11:16:48,723 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp'), facts={go_to_step("chose a step")})
2017-10-24 11:16:48,723 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')
2017-10-24 11:16:48,724 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.Popup instance at 0x7fefe412e758>]
2017-10-24 11:16:48,724 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7fefe412e758>], sender=GuiBackend, reason=None)
2017-10-24 11:16:48,724 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend posted event
2017-10-24 11:16:48,724 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose a step.], sender=GenerateModule, reason=None))
2017-10-24 11:16:48,724 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose a step.], sender=GenerateModule, reason=None)
2017-10-24 11:16:48,724 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok chose a step."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:16:48,725 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:48,725 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok chose a step.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:16:48,725 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok chose a step.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:16:48,725 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok chose a step."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:16:48,726 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:48,727 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7fefe412e758>], sender=GuiBackend, reason=None))
2017-10-24 11:16:48,727 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7fefe412e758>], sender=GuiBackend, reason=None)
2017-10-24 11:16:48,727 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok chose a step."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:16:48,728 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:48,728 - session_2017-10-24T11_16_16_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:16:48,745 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok chose a step."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:16:48,746 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:16:48,746 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok chose a step.], sender=TextOutputComponent, reason=None))
2017-10-24 11:16:48,746 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok chose a step.], sender=TextOutputComponent, reason=None)
2017-10-24 11:16:48,746 - session_2017-10-24T11_16_16_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:16:48,746 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
2017-10-24 11:16:48,746 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
2017-10-24 11:16:48,747 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
2017-10-24 11:16:48,747 - session_2017-10-24T11_16_16_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None))
2017-10-24 11:16:48,749 - session_2017-10-24T11_16_16_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fefe5e66fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fefe418b1d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836608.75
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose a step")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {go_to_step("chose a step")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose a step")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:16:48,749 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:16:48,749 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:16:48,749 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:16:48,754 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
?            ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:16:48,755 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:16:48,755 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:16:48,757 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:48,758 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:16:48,758 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:16:48,758 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:16:48,758 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:16:48,758 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:16:48,758 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:16:48,758 - session_2017-10-24T11_16_16_0 - INFO - BEGIN integrate_moves
2017-10-24 11:16:48,758 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:16:48,758 - session_2017-10-24T11_16_16_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:16:48,758 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:16:48,759 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrate
2017-10-24 11:16:48,761 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {go_to_step("chose a step")}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:16:48,762 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:16:48,762 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:48,765 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {go_to_step("chose a step")}
+ tis.shared.com: {go_to_step("chose a step"), resolved(?X.go_to_step(X))}
?                                            ++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                             ---------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 11:16:48,765 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:16:48,765 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:48,765 - session_2017-10-24T11_16_16_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:16:48,765 - session_2017-10-24T11_16_16_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:16:48,765 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:48,766 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_action
2017-10-24 11:16:48,766 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:48,766 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:16:48,766 - session_2017-10-24T11_16_16_0 - INFO - breaking out of accommodate
2017-10-24 11:16:48,766 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:48,766 - session_2017-10-24T11_16_16_0 - INFO - END integrate_moves
2017-10-24 11:16:48,766 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:48,766 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:48,766 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:16:48,766 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:48,767 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:48,767 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:48,767 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:48,767 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:16:48,769 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 11:16:48,770 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 11:16:48,770 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:16:48,770 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None))
2017-10-24 11:16:48,770 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 11:16:48,770 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "go_to_step", "grammar_entry": null, "value": "chose a step"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:16:48,771 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:48,771 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 11:16:48,771 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:16:48,772 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:16:48,772 - session_2017-10-24T11_16_16_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7fefe41a1758>:1.0
2017-10-24 11:16:48,772 - session_2017-10-24T11_16_16_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:16:49,772 - session_2017-10-24T11_16_16_0 - DEBUG - Timeout fired
2017-10-24 11:16:49,772 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:16:49,772 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:16:49,773 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:16:49,773 - session_2017-10-24T11_16_16_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:16:49,774 - session_2017-10-24T11_16_16_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fefe5e66fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fefe418b1d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836609.77
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose a step")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {go_to_step("chose a step")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose a step")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {go_to_step("chose a step"), resolved(?X.go_to_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:16:49,774 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:16:49,774 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:16:49,776 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:16:49,777 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:16:49,781 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
-- END TIS changes --
2017-10-24 11:16:49,781 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:16:49,781 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:16:49,784 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:49,784 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:16:49,784 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:16:49,784 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:16:49,784 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:16:49,784 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:16:49,784 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:16:49,784 - session_2017-10-24T11_16_16_0 - INFO - BEGIN integrate_moves
2017-10-24 11:16:49,784 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:16:49,784 - session_2017-10-24T11_16_16_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:16:49,784 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:16:49,785 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrate
2017-10-24 11:16:49,785 - session_2017-10-24T11_16_16_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:16:49,785 - session_2017-10-24T11_16_16_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:16:49,785 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:49,785 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_action
2017-10-24 11:16:49,785 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:49,785 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:16:49,785 - session_2017-10-24T11_16_16_0 - INFO - breaking out of accommodate
2017-10-24 11:16:49,785 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:49,785 - session_2017-10-24T11_16_16_0 - INFO - END integrate_moves
2017-10-24 11:16:49,786 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:49,788 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:16:49,789 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:49,789 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:49,791 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {go_to_step("chose a step")}
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {go_to_step("chose a step"), resolved(?X.go_to_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 11:16:49,791 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:49,791 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:49,792 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:49,792 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:16:49,792 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:49,792 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:49,792 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:49,792 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:49,792 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:16:49,793 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:16:49,793 - session_2017-10-24T11_16_16_0 - INFO - running ISU module: select
2017-10-24 11:16:49,794 - session_2017-10-24T11_16_16_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fefe5e66fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fefe418b1d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836609.77
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose a step")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:16:49,794 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:16:49,798 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^  ^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                +++ ^^^^ +++ ^^^^^^^
- tis.private.tmp.sys.bel: {go_to_step("chose a step")}
+ tis.private.tmp.sys.bel: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                                      ---------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 11:16:49,798 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_action
2017-10-24 11:16:49,800 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:16:49,801 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:16:49,803 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:16:49,803 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_move
2017-10-24 11:16:49,806 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:16:49,806 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:16:49,806 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_move
2017-10-24 11:16:49,807 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:16:49,809 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:49,809 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:16:49,809 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:16:49,811 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 11:16:49,811 - session_2017-10-24T11_16_16_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:16:49,812 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:16:56,919 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "tell me what to do"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:16:56,919 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:16:56,920 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None))
2017-10-24 11:16:56,920 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:16:56,920 - session_2017-10-24T11_16_16_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:16:56,921 - session_2017-10-24T11_16_16_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "tell me what to do"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:16:56,921 - session_2017-10-24T11_16_16_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:16:56,922 - session_2017-10-24T11_16_16_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 11:16:56,922 - session_2017-10-24T11_16_16_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])} for DDD 'recipehelp'
2017-10-24 11:16:56,923 - session_2017-10-24T11_16_16_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
2017-10-24 11:16:56,923 - session_2017-10-24T11_16_16_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:16:56,923 - session_2017-10-24T11_16_16_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AskMove": {"_type": "ask", "_ddd_name": "recipehelp", "_content": {"445f2b7f7189027ce75dac332c96dde0.WhQuestion": {"_type": "WHQ", "_content": {"24b0f339529d53d987534676834bafa7.LambdaAbstractedPredicateProposition": {"_ontology_name": "RecipehelpOntology", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.BuiltinSort": {"_dynamic": false, "_name": "string"}}, "name": "say_step", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "tell me what to do", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "tell me what to do"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "tell me what to do", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:16:56,923 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:16:56,923 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:16:56,924 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:16:56,924 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:16:56,924 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:56,924 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 11:16:56,925 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:16:56,925 - session_2017-10-24T11_16_16_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:16:56,926 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:56,926 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:56,927 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:56,927 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:16:56,927 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:16:56,927 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:16:56,927 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:16:56,928 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 11:16:56,928 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 11:16:56,928 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:16:56,929 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 11:16:56,929 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:16:56,929 - session_2017-10-24T11_16_16_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:56,931 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:56,931 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:16:56,932 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:16:56,932 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:16:56,932 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:16:56,932 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:16:56,932 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:16:56,932 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fefe41a1d88>]
2017-10-24 11:16:56,932 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fefe41a1d88>], sender=GuiBackend, reason=None)
2017-10-24 11:16:56,933 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend posted event
2017-10-24 11:16:56,933 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None))
2017-10-24 11:16:56,933 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:16:56,933 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:16:56,933 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:16:56,933 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 11:16:56,934 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:56,934 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 11:16:56,934 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:16:56,934 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:16:56,935 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:56,935 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fefe41a1d88>], sender=GuiBackend, reason=None))
2017-10-24 11:16:56,935 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fefe41a1d88>], sender=GuiBackend, reason=None)
2017-10-24 11:16:56,935 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:16:56,936 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:56,936 - session_2017-10-24T11_16_16_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:16:56,953 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:16:56,953 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:16:56,954 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 11:16:56,954 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 11:16:56,954 - session_2017-10-24T11_16_16_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:16:56,954 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:16:56,954 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:16:56,954 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:16:56,955 - session_2017-10-24T11_16_16_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 11:16:56,956 - session_2017-10-24T11_16_16_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fefe5e66fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fefe418b1d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836616.95
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:16:56,956 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:16:56,956 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:16:56,956 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:16:56,960 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:16:56,960 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:16:56,960 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:16:56,963 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:56,963 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:16:56,963 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:16:56,963 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:16:56,963 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:16:56,963 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:16:56,963 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:16:56,963 - session_2017-10-24T11_16_16_0 - INFO - BEGIN integrate_moves
2017-10-24 11:16:56,963 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:16:56,963 - session_2017-10-24T11_16_16_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:16:56,964 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:16:56,964 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrate
2017-10-24 11:16:56,967 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:16:56,967 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:16:56,967 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:56,967 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:16:56,967 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:56,968 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrate
2017-10-24 11:16:56,971 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 11:16:56,971 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:16:56,971 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:56,972 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:16:56,972 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:56,972 - session_2017-10-24T11_16_16_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:16:56,972 - session_2017-10-24T11_16_16_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:16:56,972 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:56,972 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_action
2017-10-24 11:16:56,972 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:56,972 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:16:56,972 - session_2017-10-24T11_16_16_0 - INFO - breaking out of accommodate
2017-10-24 11:16:56,972 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:56,972 - session_2017-10-24T11_16_16_0 - INFO - END integrate_moves
2017-10-24 11:16:56,973 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:56,973 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:56,973 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:16:56,973 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:56,973 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:56,973 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:56,973 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:56,974 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:16:56,976 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 11:16:56,976 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:16:56,976 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:16:56,976 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:16:56,976 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:16:56,976 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:16:56,977 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:56,977 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:16:56,977 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:16:56,978 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:16:56,978 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:16:56,978 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:16:56,979 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:16:56,979 - session_2017-10-24T11_16_16_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:16:56,980 - session_2017-10-24T11_16_16_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fefe5e66fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fefe418b1d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836616.98
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:16:56,980 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:16:56,983 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
-- END TIS changes --
2017-10-24 11:16:56,983 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:16:56,987 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
?                                                                                                                              ^
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
?                                                                                                                              ^
-- END TIS changes --
2017-10-24 11:16:56,987 - session_2017-10-24T11_16_16_0 - INFO - hypotheses reranking had no effect
2017-10-24 11:16:56,988 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:16:56,993 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 11:16:56,993 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:16:57,000 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:16:57,000 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:16:57,001 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:16:57,003 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:57,004 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:16:57,004 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:16:57,009 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                                                      -------------------------------  ^^^^^^^^
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                                        ^^
- tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
+ tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
- tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
?                                       ^^^^^^ ^^^^^^^
+ tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                       ^ ^^
-- END TIS changes --
2017-10-24 11:16:57,009 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:16:57,009 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:16:57,009 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:16:57,009 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:16:57,009 - session_2017-10-24T11_16_16_0 - INFO - BEGIN integrate_moves
2017-10-24 11:16:57,009 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
2017-10-24 11:16:57,010 - session_2017-10-24T11_16_16_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:16:57,010 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
2017-10-24 11:16:57,010 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrate
2017-10-24 11:16:57,013 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: integrateUsrAsk
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
- tis.private.nim: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
- tis.shared.qud: stackset([?X.goal(X)])
+ tis.shared.qud: stackset([?X.say_step(X), ?X.goal(X)])
?                              ++++++++++++++++
-- END TIS changes --
2017-10-24 11:16:57,013 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:16:57,013 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:57,016 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: downdateISSUES2
-- BEGIN TIS changes --
- tis.shared.goals: stackset([resolve(?X.say_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                                                      --------------------------
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 11:16:57,016 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:16:57,016 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:57,020 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: findIssuePlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                                                 -------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.plan: Stack([findout(?X.goal(X))])
?                          ^ ^^^ ^    ^^ ^
+ tis.private.plan: Stack([device_query(?X.say_step(X))])
?                          ^^^ ^^^^ ^^^    ^ ^^^^^^
-- END TIS changes --
2017-10-24 11:16:57,021 - session_2017-10-24T11_16_16_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:16:57,021 - session_2017-10-24T11_16_16_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:16:57,021 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:57,021 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_action
2017-10-24 11:16:57,021 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:57,021 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:16:57,022 - session_2017-10-24T11_16_16_0 - INFO - breaking out of accommodate
2017-10-24 11:16:57,022 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:57,022 - session_2017-10-24T11_16_16_0 - INFO - END integrate_moves
2017-10-24 11:16:57,022 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:57,024 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {}
+ tis.private.bel: {say_step("0")}
?                   +++++++++++++
- tis.private.plan: Stack([device_query(?X.say_step(X))])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 11:16:57,024 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:57,025 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:57,025 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:57,025 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:16:57,027 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.say_step(X), ?X.goal(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:16:57,027 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:57,028 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:57,028 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:57,028 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:57,028 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:16:57,028 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None)
2017-10-24 11:16:57,028 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:16:57,028 - session_2017-10-24T11_16_16_0 - INFO - running ISU module: select
2017-10-24 11:16:57,029 - session_2017-10-24T11_16_16_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fefe5e66fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fefe418b1d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836616.98
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:16:57,029 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:16:57,034 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                --- ^ --------------
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^^^
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.bel: {say_step("0")}
?                           +++++++++++++
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      +++++++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 11:16:57,034 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_action
2017-10-24 11:16:57,036 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                                                 +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:16:57,037 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:16:57,040 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
-- END TIS changes --
2017-10-24 11:16:57,040 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_move
2017-10-24 11:16:57,043 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                         ---     ---- ^^^ ^^
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
?                                               ^^^^^^^^^^^^^ ^^^^^^
- tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:16:57,043 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:16:57,043 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_move
2017-10-24 11:16:57,043 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:16:57,045 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:57,045 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:16:57,045 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:16:57,048 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 11:16:57,048 - session_2017-10-24T11_16_16_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')])
2017-10-24 11:16:57,048 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:16:57,049 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None))
2017-10-24 11:16:57,049 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None)
2017-10-24 11:16:57,049 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": "tell me what to do", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 11:16:57,049 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:57,049 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None))
2017-10-24 11:16:57,050 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:16:57,050 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "0"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:16:57,051 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:57,051 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)))
2017-10-24 11:16:57,052 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:16:57,052 - session_2017-10-24T11_16_16_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:16:57,052 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:57,053 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:57,054 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:57,054 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("0")), ddd_name=u'recipehelp'), facts={say_step("0")})
2017-10-24 11:16:57,054 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:16:57,054 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:16:57,055 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule: Move Move(answer(say_step("0")), ddd_name=u'recipehelp') generated as u'Ok 0.'
2017-10-24 11:16:57,055 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None)
2017-10-24 11:16:57,056 - session_2017-10-24T11_16_16_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:57,057 - session_2017-10-24T11_16_16_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:16:57,058 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:16:57,058 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:16:57,058 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')])
2017-10-24 11:16:57,058 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("0")), ddd_name=u'recipehelp'), facts={say_step("0")})
2017-10-24 11:16:57,059 - session_2017-10-24T11_16_16_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:16:57,060 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.Popup instance at 0x7fefe41a1368>]
2017-10-24 11:16:57,060 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7fefe41a1368>], sender=GuiBackend, reason=None)
2017-10-24 11:16:57,060 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend posted event
2017-10-24 11:16:57,060 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None))
2017-10-24 11:16:57,060 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None)
2017-10-24 11:16:57,060 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok 0."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:16:57,061 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:57,061 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:16:57,061 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:16:57,061 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok 0."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:16:57,062 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:57,062 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7fefe41a1368>], sender=GuiBackend, reason=None))
2017-10-24 11:16:57,062 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7fefe41a1368>], sender=GuiBackend, reason=None)
2017-10-24 11:16:57,063 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok 0."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:16:57,063 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:57,064 - session_2017-10-24T11_16_16_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:16:57,075 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok 0."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:16:57,076 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:16:57,076 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok 0.], sender=TextOutputComponent, reason=None))
2017-10-24 11:16:57,076 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok 0.], sender=TextOutputComponent, reason=None)
2017-10-24 11:16:57,077 - session_2017-10-24T11_16_16_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:16:57,077 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:16:57,077 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:16:57,077 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:16:57,078 - session_2017-10-24T11_16_16_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None))
2017-10-24 11:16:57,079 - session_2017-10-24T11_16_16_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fefe5e66fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fefe418b1d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836617.08
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:16:57,079 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:16:57,079 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:16:57,079 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:16:57,086 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
?            ^^
- tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:16:57,086 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:16:57,086 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:16:57,088 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:57,088 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:16:57,088 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:16:57,089 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:16:57,089 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:16:57,089 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:16:57,089 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:16:57,089 - session_2017-10-24T11_16_16_0 - INFO - BEGIN integrate_moves
2017-10-24 11:16:57,089 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:16:57,089 - session_2017-10-24T11_16_16_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:16:57,089 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:16:57,089 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrate
2017-10-24 11:16:57,093 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {say_step("0")}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:16:57,093 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:16:57,093 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:57,096 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {say_step("0")}
+ tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
- tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             -------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 11:16:57,096 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:16:57,097 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:57,097 - session_2017-10-24T11_16_16_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:16:57,097 - session_2017-10-24T11_16_16_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:16:57,097 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:57,097 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_action
2017-10-24 11:16:57,097 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:57,097 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:16:57,097 - session_2017-10-24T11_16_16_0 - INFO - breaking out of accommodate
2017-10-24 11:16:57,097 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:57,097 - session_2017-10-24T11_16_16_0 - INFO - END integrate_moves
2017-10-24 11:16:57,097 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:57,098 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:57,098 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:16:57,098 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:57,098 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:57,098 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:57,099 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:57,099 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:16:57,102 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 11:16:57,102 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:16:57,102 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:16:57,102 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None))
2017-10-24 11:16:57,102 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:16:57,102 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "0"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:16:57,103 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:16:57,103 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 11:16:57,103 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:16:57,103 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:16:57,104 - session_2017-10-24T11_16_16_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7fefe418c878>:1.0
2017-10-24 11:16:57,104 - session_2017-10-24T11_16_16_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:16:58,104 - session_2017-10-24T11_16_16_0 - DEBUG - Timeout fired
2017-10-24 11:16:58,104 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:16:58,104 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:16:58,104 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:16:58,104 - session_2017-10-24T11_16_16_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:16:58,105 - session_2017-10-24T11_16_16_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fefe5e66fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fefe418b1d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836618.1
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:16:58,105 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:16:58,106 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:16:58,108 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:16:58,108 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:16:58,112 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
-- END TIS changes --
2017-10-24 11:16:58,112 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:16:58,112 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:16:58,114 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:58,114 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:16:58,114 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:16:58,114 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:16:58,114 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:16:58,114 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:16:58,114 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:16:58,114 - session_2017-10-24T11_16_16_0 - INFO - BEGIN integrate_moves
2017-10-24 11:16:58,115 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:16:58,115 - session_2017-10-24T11_16_16_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:16:58,115 - session_2017-10-24T11_16_16_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:16:58,115 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:integrate
2017-10-24 11:16:58,115 - session_2017-10-24T11_16_16_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:16:58,115 - session_2017-10-24T11_16_16_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:16:58,115 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:58,115 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_action
2017-10-24 11:16:58,116 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:58,116 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:16:58,116 - session_2017-10-24T11_16_16_0 - INFO - breaking out of accommodate
2017-10-24 11:16:58,116 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:16:58,116 - session_2017-10-24T11_16_16_0 - INFO - END integrate_moves
2017-10-24 11:16:58,116 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:58,119 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:16:58,119 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:58,119 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:58,122 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {say_step("0")}
?                   -------------
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 11:16:58,122 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:58,123 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:58,123 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:58,123 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:16:58,123 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:16:58,123 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:16:58,124 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:16:58,124 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:16:58,124 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:16:58,124 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:16:58,124 - session_2017-10-24T11_16_16_0 - INFO - running ISU module: select
2017-10-24 11:16:58,125 - session_2017-10-24T11_16_16_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fefe5e66fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fefe418b1d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836618.1
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:16:58,125 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:16:58,130 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^  ^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                +++ ^^^^ +++ ^^^^^^^
- tis.private.tmp.sys.bel: {say_step("0")}
?                           -------------
+ tis.private.tmp.sys.bel: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      -------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 11:16:58,130 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_action
2017-10-24 11:16:58,132 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:16:58,132 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:16:58,135 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:16:58,135 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_move
2017-10-24 11:16:58,138 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:16:58,138 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:16:58,138 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:select_move
2017-10-24 11:16:58,138 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:16:58,140 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:16:58,140 - session_2017-10-24T11_16_16_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:16:58,140 - session_2017-10-24T11_16_16_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:16:58,142 - session_2017-10-24T11_16_16_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 11:16:58,143 - session_2017-10-24T11_16_16_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:16:58,143 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:18:50,899 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:18:50,900 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(STOP, None, sender=Backend, reason=None))
2017-10-24 11:18:50,900 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:18:50,900 - session_2017-10-24T11_16_16_0 - DEBUG - InterpretModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:18:50,901 - session_2017-10-24T11_16_16_0 - DEBUG - InterpretModule posts Event(STOPPED, None, sender=InterpretModule, reason=None)
2017-10-24 11:18:50,901 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:18:50,901 - session_2017-10-24T11_16_16_0 - DEBUG - DmeModule posts Event(STOPPED, None, sender=DmeModule, reason=None)
2017-10-24 11:18:50,901 - session_2017-10-24T11_16_16_0 - DEBUG - DeviceManager handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:18:50,902 - session_2017-10-24T11_16_16_0 - DEBUG - DeviceManager posts Event(STOPPED, None, sender=DeviceManager, reason=None)
2017-10-24 11:18:50,902 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:18:50,902 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule posts Event(STOPPED, None, sender=GenerateModule, reason=None)
2017-10-24 11:18:50,902 - session_2017-10-24T11_16_16_0 - DEBUG - IndependentGuiBackend handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:18:50,902 - session_2017-10-24T11_16_16_0 - DEBUG - IndependentGuiBackend posts Event(STOPPED, None, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:18:50,902 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:18:50,902 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend posts Event(STOPPED, None, sender=GuiBackend, reason=None)
2017-10-24 11:18:50,902 - session_2017-10-24T11_16_16_0 - DEBUG - CogloadModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:18:50,903 - session_2017-10-24T11_16_16_0 - DEBUG - CogloadModule posts Event(STOPPED, None, sender=CogloadModule, reason=None)
2017-10-24 11:18:50,903 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:18:50,903 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:18:50,903 - session_2017-10-24T11_16_16_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:18:50,903 - session_2017-10-24T11_16_16_0 - DEBUG - Sent.
2017-10-24 11:18:50,904 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 11:18:50,904 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:18:50,904 - session_2017-10-24T11_16_16_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:18:50,904 - session_2017-10-24T11_16_16_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:18:50,904 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:18:50,905 - session_2017-10-24T11_16_16_0 - DEBUG - GenerateModule ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:18:50,906 - session_2017-10-24T11_16_16_0 - DEBUG - IndependentGuiBackend ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:18:50,907 - session_2017-10-24T11_16_16_0 - DEBUG - GuiBackend ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:18:50,907 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=InterpretModule, reason=None))
2017-10-24 11:18:50,907 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=InterpretModule, reason=None)
2017-10-24 11:18:50,907 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=DmeModule, reason=None))
2017-10-24 11:18:50,907 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=DmeModule, reason=None)
2017-10-24 11:18:50,908 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=DeviceManager, reason=None))
2017-10-24 11:18:50,908 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=DeviceManager, reason=None)
2017-10-24 11:18:50,908 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=GenerateModule, reason=None))
2017-10-24 11:18:50,908 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=GenerateModule, reason=None)
2017-10-24 11:18:50,908 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:18:50,908 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:18:50,908 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=GuiBackend, reason=None))
2017-10-24 11:18:50,908 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=GuiBackend, reason=None)
2017-10-24 11:18:50,908 - session_2017-10-24T11_16_16_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=CogloadModule, reason=None))
2017-10-24 11:18:50,908 - session_2017-10-24T11_16_16_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=CogloadModule, reason=None)

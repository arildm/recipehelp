2017-10-24 11:15:00,250 - session_2017-10-24T11_15_00_0 - DEBUG - Backend()
2017-10-24 11:15:00,251 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.initialize()
2017-10-24 11:15:00,292 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.add_module(DmeModule, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7fc0c218df10>>, False])
2017-10-24 11:15:00,292 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.add_module(GenerateModule, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7fc0c218df10>>, 'eng'])
2017-10-24 11:15:00,292 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.add_module(DeviceManager, args=[])
2017-10-24 11:15:00,292 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.add_module(CogloadModule, args=[])
2017-10-24 11:15:00,293 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, __init__) (previous state was None)
2017-10-24 11:15:00,293 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.add_module(GuiBackend, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7fc0c218df10>>, True, 'disabled'])
2017-10-24 11:15:00,293 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.add_module(IndependentGuiBackend, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7fc0c218df10>>])
2017-10-24 11:15:00,293 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.add_module(InterpretModule, args=[<bound method Backend.get_device_manager of <tdm.backend.Backend object at 0x7fc0c218df10>>, <bound method Backend.get_tis of <tdm.backend.Backend object at 0x7fc0c218df10>>, 'eng', False, True])
2017-10-24 11:15:00,293 - session_2017-10-24T11_15_00_0 - DEBUG - Backend initialized
2017-10-24 11:15:00,293 - session_2017-10-24T11_15_00_0 - DEBUG - Backend started in directory '/home/gusmatssar/recipedialogue/tdm'
2017-10-24 11:15:00,293 - session_2017-10-24T11_15_00_0 - DEBUG - Backend uses TDM version '5.0.0'
2017-10-24 11:15:00,293 - session_2017-10-24T11_15_00_0 - DEBUG - Backend uses backend config {u'active_ddd': u'recipehelp', u'ddds': [u'recipehelp'], u'asr': u'none', u'use_recognition_profile': False, u'use_word_list_correction': False, u'supported_languages': [u'eng'], u'repeat_questions': False}
2017-10-24 11:15:00,293 - session_2017-10-24T11_15_00_0 - DEBUG - Backend uses language 'eng'
2017-10-24 11:15:00,293 - session_2017-10-24T11_15_00_0 - DEBUG - running module InterpretModule
2017-10-24 11:15:00,293 - session_2017-10-24T11_15_00_0 - DEBUG - running module DmeModule
2017-10-24 11:15:00,295 - session_2017-10-24T11_15_00_0 - DEBUG - running module DeviceManager
2017-10-24 11:15:00,295 - session_2017-10-24T11_15_00_0 - DEBUG - running module GenerateModule
2017-10-24 11:15:00,295 - session_2017-10-24T11_15_00_0 - DEBUG - running module IndependentGuiBackend
2017-10-24 11:15:00,296 - session_2017-10-24T11_15_00_0 - DEBUG - running module GuiBackend
2017-10-24 11:15:00,296 - session_2017-10-24T11_15_00_0 - DEBUG - running module CogloadModule
2017-10-24 11:15:00,296 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:00,296 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:00,298 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(REGISTER_BACKEND, None, sender=Backend, reason=None))
2017-10-24 11:15:00,298 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(REGISTER_BACKEND, None, sender=Backend, reason=None)
2017-10-24 11:15:00,298 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "Backend", "_reason": null, "event_type": "REGISTER_BACKEND"}
2017-10-24 11:15:00,299 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:00,299 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:00,326 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": null, "_sender": "Frontend", "_reason": null, "event_type": "FRONTEND_READY"}
2017-10-24 11:15:00,327 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:00,327 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FRONTEND_READY, None, sender=Frontend, reason=None))
2017-10-24 11:15:00,328 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FRONTEND_READY, None, sender=Frontend, reason=None)
2017-10-24 11:15:00,328 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(BACKEND_READY, None, sender=Backend, reason=None))
2017-10-24 11:15:00,329 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(BACKEND_READY, None, sender=Backend, reason=None)
2017-10-24 11:15:00,329 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "Backend", "_reason": null, "event_type": "BACKEND_READY"}
2017-10-24 11:15:00,329 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:00,330 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:00,335 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": null, "_sender": "Frontend", "_reason": null, "event_type": "START"}
2017-10-24 11:15:00,335 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:00,336 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(START, None, sender=Frontend, reason=None))
2017-10-24 11:15:00,336 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:15:00,336 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:15:00,336 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:15:00,336 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 11:15:00,344 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(START, None, sender=Frontend, reason=None))
2017-10-24 11:15:00,346 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836500.34
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(START, None, sender=Frontend, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: None
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([do(top)])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: None
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:00,346 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:00,346 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:00,346 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:00,348 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:00,348 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:00,348 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:00,350 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:00,350 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:00,355 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:00,355 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:00,355 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:00,355 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:00,356 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:00,356 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:00,356 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:15:00,362 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:00,362 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:15:00,362 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:00,369 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:00,369 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:00,369 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:00,369 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:00,369 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:00,369 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:00,375 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:00,375 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:00,375 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:00,375 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:00,378 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:00,381 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([do(top)])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:15:00,381 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:00,383 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:15:00,383 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:00,383 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:00,383 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:00,384 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:00,384 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:00,384 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:00,384 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:00,384 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:00,384 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:00,384 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:00,384 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:00,385 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836500.34
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(START, None, sender=Frontend, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: None
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: None
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:00,385 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:00,388 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.goals: stackset([])
+ tis.private.tmp.sys.goals: stackset([perform(top)])
?                                      ++++++++++++
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:00,394 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:00,397 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.goal(X))])
?                                                                  +++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:00,397 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:00,400 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
?                                       +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.goal(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:15:00,400 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:00,409 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
?                                                              +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:00,409 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:00,410 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:00,410 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:15:00,412 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:00,412 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:15:00,412 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:15:00,414 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: None
?                       ^^^^
+ tis.timeout.duration: 5.0
?                       ^^^
-- END TIS changes --
2017-10-24 11:15:00,414 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:15:00,414 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None))
2017-10-24 11:15:00,415 - session_2017-10-24T11_15_00_0 - DEBUG - DeviceManager handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:15:00,415 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:15:00,415 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:15:00,415 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:15:00,415 - session_2017-10-24T11_15_00_0 - DEBUG - CogloadModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:15:00,415 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None))
2017-10-24 11:15:00,415 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 11:15:00,415 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 11:15:00,416 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 11:15:00,416 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"ddd_name": "recipehelp", "language_code": "eng"}, "_sender": "DmeModule", "_reason": null, "event_type": "SET_DDD"}
2017-10-24 11:15:00,416 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:00,417 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:00,417 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:00,417 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:00,419 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:00,419 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None)))
2017-10-24 11:15:00,420 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None))
2017-10-24 11:15:00,420 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:00,420 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:00,420 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:00,421 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:00,421 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 11:15:00,421 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 11:15:00,421 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:15:00,421 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:00,422 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 11:15:00,422 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 11:15:00,422 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:00,423 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 11:15:00,423 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:15:00,424 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:00,425 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:00,425 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:15:00,425 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:15:00,426 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 11:15:00,426 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 11:15:00,426 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:15:00,426 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:00,426 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend generated message []
2017-10-24 11:15:00,426 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:15:00,426 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posted event
2017-10-24 11:15:00,427 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 11:15:00,427 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:15:00,427 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:15:00,427 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:00,427 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 11:15:00,428 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:15:00,428 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:15:00,428 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:00,429 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:00,469 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": ["", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:15:00,469 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:00,469 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 11:15:00,469 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 11:15:00,469 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:15:00,469 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:00,469 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:00,469 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:00,470 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 11:15:00,471 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836500.47
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:00,471 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:00,471 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:00,471 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:00,474 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: None
?                        ^^^^
+ tis.shared.lu.speaker: SYS
?                        ^^^
-- END TIS changes --
2017-10-24 11:15:00,474 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:00,474 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:00,476 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:00,476 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:00,476 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:00,477 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:00,477 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:00,477 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:00,477 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:00,477 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:00,477 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:00,477 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:00,477 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:00,477 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:00,480 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:15:00,481 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:00,481 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:00,481 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:00,481 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:00,481 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:00,484 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 11:15:00,484 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:00,484 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:00,484 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:00,484 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:00,484 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:00,484 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:00,484 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:00,485 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:00,485 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:00,485 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:00,485 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:00,485 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:00,485 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:00,485 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:00,485 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:00,485 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:00,486 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:00,486 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:00,486 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:00,486 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:00,486 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:00,491 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:00,491 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:00,491 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:00,491 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:00,491 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:00,491 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:00,492 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:00,493 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:15:00,493 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:00,494 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:00,494 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:04,090 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": ""}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:15:04,091 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:04,091 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: }], sender=TextInputComponent, reason=None))
2017-10-24 11:15:04,091 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: }], sender=TextInputComponent, reason=None)
2017-10-24 11:15:04,091 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: }], sender=TextInputComponent, reason=None)
2017-10-24 11:15:04,091 - session_2017-10-24T11_15_00_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": ""}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:15:04,091 - session_2017-10-24T11_15_00_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:15:04,097 - session_2017-10-24T11_15_00_0 - DEBUG - ExactInterpreter: Found no valid exact interpretations, returning an empty result.
2017-10-24 11:15:04,097 - session_2017-10-24T11_15_00_0 - DEBUG - Result from 'ExactInterpreter': []
2017-10-24 11:15:04,097 - session_2017-10-24T11_15_00_0 - DEBUG - Starting 'RobustInterpreter'
2017-10-24 11:15:04,097 - session_2017-10-24T11_15_00_0 - DEBUG - DddInterpreter.interpret_partially: timeout=1.99436211586
2017-10-24 11:15:04,098 - session_2017-10-24T11_15_00_0 - DEBUG - robust grammatical interpretations: []
2017-10-24 11:15:04,099 - session_2017-10-24T11_15_00_0 - DEBUG - _remove_literals(): Got no valid interpretations of partial utterances
2017-10-24 11:15:04,100 - session_2017-10-24T11_15_00_0 - DEBUG - RobustInterpreter: Partial interpretation failed.
2017-10-24 11:15:04,100 - session_2017-10-24T11_15_00_0 - DEBUG - RobustInterpreter: use_word_list_correction disabled, skipping interpretation with word correction
2017-10-24 11:15:04,100 - session_2017-10-24T11_15_00_0 - DEBUG - RobustInterpreter: Found no robust interpretations, returning an empty result.
2017-10-24 11:15:04,100 - session_2017-10-24T11_15_00_0 - DEBUG - Result from 'RobustInterpreter': []
2017-10-24 11:15:04,100 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {}, sender=InterpretModule, reason=None)
2017-10-24 11:15:04,100 - session_2017-10-24T11_15_00_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:15:04,100 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: }], sender=TextInputComponent, reason=None)
2017-10-24 11:15:04,100 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {}, sender=InterpretModule, reason=None))
2017-10-24 11:15:04,101 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {}, sender=InterpretModule, reason=None)
2017-10-24 11:15:04,101 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:15:04,101 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:15:04,101 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 11:15:04,102 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:04,102 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 11:15:04,103 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 11:15:04,103 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 11:15:04,103 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 11:15:04,103 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 11:15:04,105 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836504.1
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:04,105 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:04,105 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:04,107 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:04,107 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:04,111 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:15:04,111 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:04,111 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:04,113 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:04,113 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:04,113 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:04,113 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:04,114 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:04,114 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:04,114 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:04,114 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:04,114 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:15:04,114 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:04,114 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:15:04,114 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:04,114 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:04,114 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:04,114 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:04,114 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:04,115 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:04,115 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:04,115 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:04,115 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:04,115 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:04,115 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:04,116 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:04,116 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:04,119 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.goal(X)])
?                           ----------
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:15:04,120 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:04,121 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:04,121 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:04,122 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:04,122 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:04,122 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:04,122 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:04,123 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836504.1
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:04,123 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:04,126 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                      ++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:04,126 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:04,129 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: reraiseIssue
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise)), raise(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:15:04,130 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:04,132 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmSemNeg
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)])
-- END TIS changes --
2017-10-24 11:15:04,133 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:04,133 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:04,136 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise)])
?                                                                                      ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise)), raise(?X.goal(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, raise(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:15:04,136 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:04,139 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))])
?                                                                                                            +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, raise(?X.goal(X))])
?                                 -------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:04,139 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:04,139 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:04,139 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:15:04,142 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:04,142 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:15:04,142 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:15:04,144 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:04,145 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:15:04,145 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 11:15:04,145 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:04,145 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:04,145 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:04,146 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:04,146 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None)))
2017-10-24 11:15:04,147 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 11:15:04,147 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:04,147 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:04,147 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:04,148 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:04,149 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:per*pos:""), facts={})
2017-10-24 11:15:04,149 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:per*pos:"")
2017-10-24 11:15:04,149 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:sem*neg), facts={})
2017-10-24 11:15:04,149 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:sem*neg)
2017-10-24 11:15:04,149 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise), facts={})
2017-10-24 11:15:04,149 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise)
2017-10-24 11:15:04,149 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:15:04,149 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:04,149 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:per*pos:"")
2017-10-24 11:15:04,150 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:per*pos:"") generated as u'I heard you say.'
2017-10-24 11:15:04,150 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:sem*neg)
2017-10-24 11:15:04,150 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:sem*neg) generated as u"I don't understand."
2017-10-24 11:15:04,150 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise)
2017-10-24 11:15:04,150 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise) generated as u'So,'
2017-10-24 11:15:04,151 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:04,151 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 11:15:04,151 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say., I don't understand., So,, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:15:04,152 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:04,154 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:04,154 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:15:04,154 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:15:04,154 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:per*pos:""), facts={})
2017-10-24 11:15:04,154 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:per*pos:"")
2017-10-24 11:15:04,155 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:sem*neg), facts={})
2017-10-24 11:15:04,155 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:sem*neg)
2017-10-24 11:15:04,155 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise), facts={})
2017-10-24 11:15:04,155 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise)
2017-10-24 11:15:04,155 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:15:04,155 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:04,155 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend generated message []
2017-10-24 11:15:04,155 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:15:04,156 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posted event
2017-10-24 11:15:04,156 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say., I don't understand., So,, What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 11:15:04,156 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say., I don't understand., So,, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:15:04,156 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["I heard you say.", "I don't understand.", "So,", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:15:04,157 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:04,157 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 11:15:04,157 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:15:04,157 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:15:04,159 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:04,159 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:04,164 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": ["I heard you say.", "I don't understand.", "So,", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:15:04,164 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:04,164 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [I heard you say., I don't understand., So,, What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 11:15:04,164 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [I heard you say., I don't understand., So,, What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 11:15:04,164 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:15:04,164 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [I heard you say., I don't understand., So,, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:04,165 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [I heard you say., I don't understand., So,, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:04,165 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [I heard you say., I don't understand., So,, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:04,165 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [I heard you say., I don't understand., So,, What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 11:15:04,166 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836504.17
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [I heard you say., I don't understand., So,, What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:04,166 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:04,167 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:04,167 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:04,171 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
- tis.sys_turns: 0
?                ^
+ tis.sys_turns: 1
?                ^
-- END TIS changes --
2017-10-24 11:15:04,171 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:04,171 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:04,173 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:04,173 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:04,173 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:04,174 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:04,174 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:04,174 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:04,174 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:04,174 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:04,174 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:04,174 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:04,174 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:04,174 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:04,178 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                                         ^^^ ^^^^^^                                       ----------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                                         ^^^ ^^^
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:15:04,178 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:04,178 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:04,178 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:04,178 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:04,179 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:04,183 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
?                                                                          ++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:04,184 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:04,184 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:04,184 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:04,184 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:04,184 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:04,188 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0)}
?                                                                                                                        ++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:04,188 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:04,188 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:04,188 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:04,188 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:04,188 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:04,191 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?                                                                                                                                                                      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 11:15:04,191 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:04,191 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:04,192 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:04,192 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:04,192 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:04,192 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:04,192 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:04,192 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:04,192 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:04,192 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:04,192 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:04,192 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:04,192 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:04,193 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:04,193 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:04,193 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:04,193 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:04,193 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:04,193 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:04,193 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:04,194 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:04,196 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:04,196 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:04,196 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [I heard you say., I don't understand., So,, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:04,196 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:04,196 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:04,196 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:04,197 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:04,197 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [I heard you say., I don't understand., So,, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:15:04,197 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [I heard you say., I don't understand., So,, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:04,198 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [I heard you say., I don't understand., So,, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:04,198 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:09,709 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "tell me what to do"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:15:09,709 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:09,710 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None))
2017-10-24 11:15:09,710 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:09,710 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:09,710 - session_2017-10-24T11_15_00_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "tell me what to do"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:15:09,710 - session_2017-10-24T11_15_00_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:15:09,712 - session_2017-10-24T11_15_00_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 11:15:09,712 - session_2017-10-24T11_15_00_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])} for DDD 'recipehelp'
2017-10-24 11:15:09,712 - session_2017-10-24T11_15_00_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
2017-10-24 11:15:09,712 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:15:09,713 - session_2017-10-24T11_15_00_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AskMove": {"_type": "ask", "_ddd_name": "recipehelp", "_content": {"445f2b7f7189027ce75dac332c96dde0.WhQuestion": {"_type": "WHQ", "_content": {"24b0f339529d53d987534676834bafa7.LambdaAbstractedPredicateProposition": {"_ontology_name": "RecipehelpOntology", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.BuiltinSort": {"_dynamic": false, "_name": "string"}}, "name": "say_step", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "tell me what to do", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "tell me what to do"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "tell me what to do", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:15:09,713 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:09,713 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None))
2017-10-24 11:15:09,713 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:15:09,714 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:15:09,714 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:15:09,714 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 11:15:09,714 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:09,714 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 11:15:09,715 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:15:09,715 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:15:09,716 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:15:09,716 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:15:09,717 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836509.72
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 1
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:09,718 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:09,721 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
-- END TIS changes --
2017-10-24 11:15:09,722 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:09,727 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
?                                                                                                                              ^
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
?                                                                                                                              ^
-- END TIS changes --
2017-10-24 11:15:09,728 - session_2017-10-24T11_15_00_0 - INFO - hypotheses reranking had no effect
2017-10-24 11:15:09,728 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:09,732 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 11:15:09,732 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:09,739 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
- tis.sys_turns: 1
?                ^
+ tis.sys_turns: 0
?                ^
-- END TIS changes --
2017-10-24 11:15:09,739 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:09,739 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:09,741 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:09,741 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:09,741 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:09,755 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([])
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
- tis.private.tmp.usr.plan: Stack([])
+ tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
- tis.private.tmp.usr.qud: stackset([])
+ tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                    ++++++++++
-- END TIS changes --
2017-10-24 11:15:09,755 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:09,755 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:09,756 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:09,756 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:09,756 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:09,756 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
2017-10-24 11:15:09,756 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:09,756 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
2017-10-24 11:15:09,756 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:09,759 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateUsrAsk
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
- tis.private.nim: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
- tis.shared.qud: stackset([?X.goal(X)])
+ tis.shared.qud: stackset([?X.say_step(X), ?X.goal(X)])
?                              ++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:09,760 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:09,760 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:09,763 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdateISSUES2
-- BEGIN TIS changes --
- tis.shared.goals: stackset([resolve(?X.say_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                                                      --------------------------
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 11:15:09,763 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:09,763 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:09,767 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: findIssuePlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                                                 -------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.plan: Stack([findout(?X.goal(X))])
?                          ^ ^^^ ^    ^^ ^
+ tis.private.plan: Stack([device_query(?X.say_step(X))])
?                          ^^^ ^^^^ ^^^    ^ ^^^^^^
-- END TIS changes --
2017-10-24 11:15:09,767 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:09,767 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:09,767 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:09,767 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:09,768 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:09,768 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:09,768 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:09,768 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:09,768 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:09,768 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:09,771 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {}
+ tis.private.bel: {say_step("0")}
?                   +++++++++++++
- tis.private.plan: Stack([device_query(?X.say_step(X))])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 11:15:09,771 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:09,771 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:09,771 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:09,771 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:09,774 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.say_step(X), ?X.goal(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:15:09,774 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:09,774 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:09,774 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:09,774 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:09,775 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:09,775 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None)
2017-10-24 11:15:09,775 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:15:09,775 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:09,776 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836509.72
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.pm: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:09,776 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:09,780 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.bel: {say_step("0")}
?                           +++++++++++++
- tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                             -----    ^^ ^
+ tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                                 ^ ^^^^^^
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 11:15:09,780 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:09,783 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                                                 +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:09,783 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:09,786 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
-- END TIS changes --
2017-10-24 11:15:09,786 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:09,789 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                         ---     ---- ^^^ ^^
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
?                                               ^^^^^^^^^^^^^ ^^^^^^
- tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:09,789 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:09,790 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:09,790 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:15:09,792 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:09,792 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:15:09,792 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:15:09,795 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 11:15:09,795 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')])
2017-10-24 11:15:09,795 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:15:09,795 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None))
2017-10-24 11:15:09,795 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None)
2017-10-24 11:15:09,795 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": "tell me what to do", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 11:15:09,796 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:09,796 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None))
2017-10-24 11:15:09,797 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:15:09,797 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "0"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:09,798 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:09,798 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)))
2017-10-24 11:15:09,799 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:15:09,799 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:09,799 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:09,799 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:09,800 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:09,801 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("0")), ddd_name=u'recipehelp'), facts={say_step("0")})
2017-10-24 11:15:09,801 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:15:09,801 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:15:09,801 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move Move(answer(say_step("0")), ddd_name=u'recipehelp') generated as u'Ok 0.'
2017-10-24 11:15:09,801 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None)
2017-10-24 11:15:09,802 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:09,804 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:09,805 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:09,805 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:15:09,805 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')])
2017-10-24 11:15:09,805 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("0")), ddd_name=u'recipehelp'), facts={say_step("0")})
2017-10-24 11:15:09,806 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:15:09,807 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.Popup instance at 0x7fc0c022be18>]
2017-10-24 11:15:09,807 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7fc0c022be18>], sender=GuiBackend, reason=None)
2017-10-24 11:15:09,807 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posted event
2017-10-24 11:15:09,807 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None))
2017-10-24 11:15:09,807 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None)
2017-10-24 11:15:09,807 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok 0."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:15:09,808 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:09,808 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:15:09,808 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:09,808 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok 0."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:15:09,809 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:09,809 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7fc0c022be18>], sender=GuiBackend, reason=None))
2017-10-24 11:15:09,809 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7fc0c022be18>], sender=GuiBackend, reason=None)
2017-10-24 11:15:09,810 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok 0."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:15:09,810 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:09,810 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:09,822 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok 0."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:15:09,823 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:09,823 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok 0.], sender=TextOutputComponent, reason=None))
2017-10-24 11:15:09,823 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok 0.], sender=TextOutputComponent, reason=None)
2017-10-24 11:15:09,823 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:15:09,823 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:15:09,823 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:15:09,823 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:15:09,824 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None))
2017-10-24 11:15:09,825 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836509.82
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.pm: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:09,825 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:09,826 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:09,826 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:09,832 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
?            ^^
- tis.shared.pm: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:09,832 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:09,832 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:09,835 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:09,835 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:09,835 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:09,835 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:09,835 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:09,835 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:09,835 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:09,835 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:09,835 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:09,835 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:09,835 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:09,836 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:09,839 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {say_step("0")}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:09,840 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:09,840 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:09,843 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {say_step("0")}
+ tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
- tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             -------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 11:15:09,843 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:09,843 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:09,843 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:09,843 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:09,844 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:09,844 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:09,844 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:09,844 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:09,844 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:09,844 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:09,844 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:09,844 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:09,844 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:09,844 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:09,845 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:09,845 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:09,845 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:09,845 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:09,845 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:09,847 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 11:15:09,848 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:15:09,848 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:15:09,848 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None))
2017-10-24 11:15:09,848 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:15:09,848 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "0"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:09,849 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:09,849 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 11:15:09,849 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:15:09,850 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:15:09,851 - session_2017-10-24T11_15_00_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7fc0c029d3b0>:1.0
2017-10-24 11:15:09,851 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:10,851 - session_2017-10-24T11_15_00_0 - DEBUG - Timeout fired
2017-10-24 11:15:10,851 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:15:10,851 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:15:10,851 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:15:10,852 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:15:10,853 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836510.85
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:10,853 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:10,853 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:10,855 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:10,855 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:10,859 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
-- END TIS changes --
2017-10-24 11:15:10,859 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:10,859 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:10,861 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:10,862 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:10,862 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:10,862 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:10,862 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:10,862 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:10,862 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:10,862 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:10,862 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:15:10,863 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:10,863 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:15:10,863 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:10,863 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:10,863 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:10,863 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:10,863 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:10,863 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:10,863 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:10,863 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:10,864 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:10,864 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:10,864 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:10,866 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:15:10,867 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:10,867 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:10,870 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {say_step("0")}
?                   -------------
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 11:15:10,870 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:10,870 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:10,870 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:10,871 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:10,871 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:10,871 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:10,871 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:10,871 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:10,871 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:10,871 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:10,871 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:10,872 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836510.85
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:10,872 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:10,877 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^  ^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                +++ ^^^^ +++ ^^^^^^^
- tis.private.tmp.sys.bel: {say_step("0")}
?                           -------------
+ tis.private.tmp.sys.bel: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      -------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:10,877 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:10,880 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:10,880 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:10,882 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:15:10,882 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:10,885 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:10,885 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:10,886 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:10,886 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:15:10,888 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:10,888 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:15:10,888 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:15:10,890 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 11:15:10,890 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:15:10,891 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:15:14,521 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:15:14,521 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:14,521 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 11:15:14,521 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:14,521 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:14,521 - session_2017-10-24T11_15_00_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:15:14,522 - session_2017-10-24T11_15_00_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:15:14,523 - session_2017-10-24T11_15_00_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 11:15:14,523 - session_2017-10-24T11_15_00_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 11:15:14,523 - session_2017-10-24T11_15_00_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 11:15:14,524 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:15:14,524 - session_2017-10-24T11_15_00_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:15:14,524 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:14,524 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:14,524 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:14,525 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:14,525 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:14,526 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 11:15:14,526 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:15:14,527 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:14,527 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:14,527 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:14,528 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:14,528 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:15:14,528 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:15:14,528 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:15:14,528 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:14,529 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 11:15:14,529 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 11:15:14,529 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:14,530 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 11:15:14,530 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:15:14,531 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:14,533 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:14,534 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:15:14,534 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:15:14,535 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:15:14,535 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:15:14,535 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:15:14,535 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:14,536 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c0272830>]
2017-10-24 11:15:14,536 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c0272830>], sender=GuiBackend, reason=None)
2017-10-24 11:15:14,536 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posted event
2017-10-24 11:15:14,536 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 11:15:14,536 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:15:14,536 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:15:14,536 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:15:14,537 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 11:15:14,537 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:14,537 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 11:15:14,537 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:15:14,537 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:15:14,539 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:14,539 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c0272830>], sender=GuiBackend, reason=None))
2017-10-24 11:15:14,539 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c0272830>], sender=GuiBackend, reason=None)
2017-10-24 11:15:14,540 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:15:14,540 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:14,540 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:14,545 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:15:14,546 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:14,546 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 11:15:14,546 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 11:15:14,546 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:15:14,546 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:14,546 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:14,546 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:14,547 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 11:15:14,548 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836514.55
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:14,548 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:14,548 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:14,549 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:14,553 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:15:14,553 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:14,553 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:14,556 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:14,556 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:14,556 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:14,556 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:14,556 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:14,556 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:14,556 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:14,556 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:14,556 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:14,556 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:14,556 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:14,557 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:14,560 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:15:14,560 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:14,561 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:14,561 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:14,561 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:14,561 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:14,564 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 11:15:14,565 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:14,565 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:14,565 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:14,565 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:14,565 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:14,565 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:14,565 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:14,565 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:14,565 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:14,566 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:14,566 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:14,566 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:14,566 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:14,566 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:14,566 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:14,566 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:14,566 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:14,567 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:14,567 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:14,567 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:14,567 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:14,569 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 11:15:14,569 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:14,569 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:14,570 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:14,570 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:14,570 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:14,570 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:14,570 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:15:14,571 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:14,571 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:14,572 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:15:14,572 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:15:14,572 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:15:14,573 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:15:14,574 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836514.57
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:14,574 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:14,577 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 11:15:14,577 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:14,582 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
- tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                              ^
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                              ^
-- END TIS changes --
2017-10-24 11:15:14,582 - session_2017-10-24T11_15_00_0 - INFO - hypotheses reranking had no effect
2017-10-24 11:15:14,582 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:14,588 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 11:15:14,588 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:14,595 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:15:14,595 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:14,595 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:14,598 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:14,598 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:14,598 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:14,601 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:14,601 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:14,601 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:14,602 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:14,602 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:14,602 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:14,602 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
2017-10-24 11:15:14,602 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:14,602 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
2017-10-24 11:15:14,602 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:14,606 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateUsrRequest
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
?                          ++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 11:15:14,606 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:14,606 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:14,609 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdateISSUES3
-- BEGIN TIS changes --
- tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                                                  --------------------------
+ tis.shared.goals: stackset([perform(go_to_next), perform(top)])
-- END TIS changes --
2017-10-24 11:15:14,609 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:14,609 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:14,612 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
+ tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
-- END TIS changes --
2017-10-24 11:15:14,612 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:14,612 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:14,612 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:14,613 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:14,613 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:14,613 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:14,613 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:14,613 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:14,613 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:14,614 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:14,616 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.bel: {}
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 11:15:14,616 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:14,617 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:14,617 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:14,617 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:14,619 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.goal(X)])
?                           ----------
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:15:14,619 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:14,620 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:14,620 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:14,620 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:14,620 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:14,620 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 11:15:14,620 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:14,620 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:14,621 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836514.57
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:14,621 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:14,625 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                              +++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 11:15:14,625 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:14,629 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
-- END TIS changes --
2017-10-24 11:15:14,629 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:14,632 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:14,632 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:14,632 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:14,632 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:15:14,634 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:14,634 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:15:14,634 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:15:14,637 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 11:15:14,637 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 11:15:14,637 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:15:14,637 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 11:15:14,638 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 11:15:14,638 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 11:15:14,638 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:14,638 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:14,638 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:14,638 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:14,639 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:14,640 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 11:15:14,640 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:15:14,640 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:14,641 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:14,641 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:14,642 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:14,642 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 11:15:14,642 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 11:15:14,642 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 11:15:14,642 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 11:15:14,642 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 11:15:14,643 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 11:15:14,643 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 11:15:14,643 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp') generated as u'Went to next'
2017-10-24 11:15:14,643 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None)
2017-10-24 11:15:14,644 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:14,645 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:14,646 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:14,646 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:15:14,647 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 11:15:14,647 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 11:15:14,647 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 11:15:14,647 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 11:15:14,647 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 11:15:14,648 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7fc0c0296a70>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c027e680>]
2017-10-24 11:15:14,648 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7fc0c0296a70>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c027e680>], sender=GuiBackend, reason=None)
2017-10-24 11:15:14,648 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posted event
2017-10-24 11:15:14,648 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None))
2017-10-24 11:15:14,648 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None)
2017-10-24 11:15:14,648 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Went to next"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:15:14,649 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:14,649 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:15:14,650 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:14,650 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Went to next"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:15:14,650 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:14,651 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7fc0c0296a70>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c027e680>], sender=GuiBackend, reason=None))
2017-10-24 11:15:14,651 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7fc0c0296a70>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c027e680>], sender=GuiBackend, reason=None)
2017-10-24 11:15:14,651 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "go_to_next", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Went to next"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:15:14,652 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:14,653 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:14,665 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Went to next"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:15:14,667 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:14,667 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Went to next], sender=TextOutputComponent, reason=None))
2017-10-24 11:15:14,667 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Went to next], sender=TextOutputComponent, reason=None)
2017-10-24 11:15:14,667 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:15:14,667 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 11:15:14,667 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 11:15:14,667 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 11:15:14,668 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 11:15:14,669 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836514.67
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:14,669 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:14,669 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:14,669 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:14,675 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:14,675 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:14,675 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:14,678 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 11:15:14,678 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:14,678 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:14,678 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:14,678 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:14,678 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:14,678 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:14,678 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:14,678 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:14,678 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:14,678 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:14,679 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:14,683 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:15:14,684 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:14,684 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:14,684 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:14,684 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:14,684 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:14,687 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {device_activity_terminated(go_to_next)}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:14,687 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:14,687 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:14,690 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
- tis.shared.goals: stackset([perform(go_to_next), perform(top)])
?                                     ---------------------
+ tis.shared.goals: stackset([perform(top)])
- tis.shared.previous_goal: None
?                           ^
+ tis.shared.previous_goal: perform(go_to_next)
?                           ^^^^ +++++++++  +++
-- END TIS changes --
2017-10-24 11:15:14,690 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:14,690 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:14,690 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:14,690 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:14,690 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:14,690 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:14,690 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:14,690 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:14,691 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:14,691 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:14,691 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:14,691 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:14,695 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
?                          ^ ^^^^^ ^^^^^^                -
+ tis.private.plan: Stack([device_query(?X.say_step(X))])
?                          ^^^^^^^^ ^ ^
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:14,695 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:14,695 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:14,698 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step(" Step one: Chop onions and garlic.")}
?                                                                                                              ++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([device_query(?X.say_step(X))])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 11:15:14,698 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:14,698 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:14,699 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:14,699 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:14,699 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:14,699 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:14,699 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:14,699 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:14,699 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:14,702 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 11:15:14,702 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value:  Step one: Chop onions and garlic.}], sender=DmeModule, reason=None)
2017-10-24 11:15:14,702 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:14,703 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836514.67
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step(" Step one: Chop onions and garlic.")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next)}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:14,703 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:14,710 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step(" Step one: Chop onions and garlic.")}
?                                                                                                                      ++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.tmp.sys.com: {}
+ tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
- tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                       ------ ^^^^^^^^^^
+ tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      ++++++++++++++++++  ^^
-- END TIS changes --
2017-10-24 11:15:14,710 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:14,714 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), respond(?X.say_step(X))])
?                                                                  +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:14,714 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:14,717 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), respond(?X.say_step(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
-- END TIS changes --
2017-10-24 11:15:14,717 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:14,720 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))])
- tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:14,720 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:14,720 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:14,720 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:15:14,723 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:14,723 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:15:14,723 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:15:14,725 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:14,726 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')])
2017-10-24 11:15:14,726 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step(" Step one: Chop onions and garlic.")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 11:15:14,726 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value:  Step one: Chop onions and garlic.}], sender=DmeModule, reason=None))
2017-10-24 11:15:14,726 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value:  Step one: Chop onions and garlic.}], sender=DmeModule, reason=None)
2017-10-24 11:15:14,726 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": " Step one: Chop onions and garlic."}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:14,728 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:14,728 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step(" Step one: Chop onions and garlic.")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)))
2017-10-24 11:15:14,729 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step(" Step one: Chop onions and garlic.")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 11:15:14,729 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:14,729 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step(" Step one: Chop onions and garlic.")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:14,729 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step(" Step one: Chop onions and garlic.")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:14,731 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step(" Step one: Chop onions and garlic.")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:14,731 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step(" Step one: Chop onions and garlic.")})
2017-10-24 11:15:14,731 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')
2017-10-24 11:15:14,731 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')
2017-10-24 11:15:14,731 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp') generated as u'Ok  Step one: Chop onions and garlic..'
2017-10-24 11:15:14,732 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok  Step one: Chop onions and garlic..], sender=GenerateModule, reason=None)
2017-10-24 11:15:14,733 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step(" Step one: Chop onions and garlic.")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:14,734 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok  Step one: Chop onions and garlic..}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:14,735 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step(" Step one: Chop onions and garlic.")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:14,735 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:15:14,735 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')])
2017-10-24 11:15:14,735 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step(" Step one: Chop onions and garlic.")})
2017-10-24 11:15:14,735 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')
2017-10-24 11:15:14,736 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c022b2d8>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c022ba70>]
2017-10-24 11:15:14,736 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c022b2d8>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c022ba70>], sender=GuiBackend, reason=None)
2017-10-24 11:15:14,736 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posted event
2017-10-24 11:15:14,736 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok  Step one: Chop onions and garlic..], sender=GenerateModule, reason=None))
2017-10-24 11:15:14,737 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok  Step one: Chop onions and garlic..], sender=GenerateModule, reason=None)
2017-10-24 11:15:14,737 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok  Step one: Chop onions and garlic.."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:15:14,737 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:14,737 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok  Step one: Chop onions and garlic..}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:15:14,737 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok  Step one: Chop onions and garlic..}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:14,738 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok  Step one: Chop onions and garlic.."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:15:14,739 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:14,739 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c022b2d8>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c022ba70>], sender=GuiBackend, reason=None))
2017-10-24 11:15:14,739 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c022b2d8>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c022ba70>], sender=GuiBackend, reason=None)
2017-10-24 11:15:14,739 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok  Step one: Chop onions and garlic.."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:15:14,740 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:14,740 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:14,783 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok  Step one: Chop onions and garlic.."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:15:14,783 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:14,783 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok  Step one: Chop onions and garlic..], sender=TextOutputComponent, reason=None))
2017-10-24 11:15:14,783 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok  Step one: Chop onions and garlic..], sender=TextOutputComponent, reason=None)
2017-10-24 11:15:14,784 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:15:14,784 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok  Step one: Chop onions and garlic..], sender=TurnManager, reason=None)
2017-10-24 11:15:14,784 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok  Step one: Chop onions and garlic..], sender=TurnManager, reason=None)
2017-10-24 11:15:14,784 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok  Step one: Chop onions and garlic..], sender=TurnManager, reason=None)
2017-10-24 11:15:14,785 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok  Step one: Chop onions and garlic..], sender=TurnManager, reason=None))
2017-10-24 11:15:14,786 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836514.79
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok  Step one: Chop onions and garlic..], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step(" Step one: Chop onions and garlic.")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step(" Step one: Chop onions and garlic.")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next)}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:14,786 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:14,786 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:14,786 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:14,791 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 11:15:14,791 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:14,791 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:14,794 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:14,794 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:14,794 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:14,795 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:14,795 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:14,795 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:14,795 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:14,795 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:14,795 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:14,795 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:14,795 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:14,795 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:14,798 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {device_activity_terminated(go_to_next)}
+ tis.shared.com: {device_activity_terminated(go_to_next), say_step(" Step one: Chop onions and garlic.")}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:14,798 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:14,798 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:14,802 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), say_step(" Step one: Chop onions and garlic.")}
+ tis.shared.com: {device_activity_terminated(go_to_next), say_step(" Step one: Chop onions and garlic."), resolved(?X.say_step(X))}
?                                                                                                        ++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             -------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 11:15:14,802 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:14,802 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:14,802 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:14,802 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:14,802 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:14,802 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:14,802 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:14,802 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:14,802 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:14,802 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:14,803 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:14,803 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:14,803 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:14,803 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:14,803 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:14,803 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:14,803 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:14,804 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:14,804 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:14,806 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:14,806 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value:  Step one: Chop onions and garlic.}], sender=DmeModule, reason=None)
2017-10-24 11:15:14,806 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok  Step one: Chop onions and garlic..], latest_moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:15:14,806 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value:  Step one: Chop onions and garlic.}], sender=DmeModule, reason=None))
2017-10-24 11:15:14,806 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value:  Step one: Chop onions and garlic.}], sender=DmeModule, reason=None)
2017-10-24 11:15:14,807 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": " Step one: Chop onions and garlic."}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:14,807 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:14,807 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok  Step one: Chop onions and garlic..], latest_moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 11:15:14,808 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok  Step one: Chop onions and garlic..], latest_moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:15:14,808 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok  Step one: Chop onions and garlic..], latest_moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:15:14,808 - session_2017-10-24T11_15_00_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7fc0c022b320>:1.0
2017-10-24 11:15:14,808 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:15,808 - session_2017-10-24T11_15_00_0 - DEBUG - Timeout fired
2017-10-24 11:15:15,809 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:15:15,809 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:15:15,809 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:15:15,809 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:15:15,810 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836515.81
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step(" Step one: Chop onions and garlic.")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step(" Step one: Chop onions and garlic.")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next), say_step(" Step one: Chop onions and garlic."), resolved(?X.say_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:15,810 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:15,810 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:15,813 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:15,813 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:15,817 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:15,817 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:15,817 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:15,819 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:15,820 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:15,820 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:15,820 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:15,820 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:15,820 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:15,821 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:15,821 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:15,821 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:15:15,821 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:15,821 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:15:15,821 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:15,821 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:15,821 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:15,821 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:15,821 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:15,821 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:15,821 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:15,822 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:15,822 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:15,822 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:15,822 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:15,825 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:15:15,825 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:15,826 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:15,828 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step(" Step one: Chop onions and garlic.")}
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {device_activity_terminated(go_to_next), say_step(" Step one: Chop onions and garlic."), resolved(?X.say_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 11:15:15,828 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:15,828 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:15,829 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:15,829 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:15,829 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:15,829 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:15,829 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:15,829 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:15,829 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:15,829 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:15,830 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:15,830 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836515.81
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step(" Step one: Chop onions and garlic.")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:15,831 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:15,835 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
?                                                                ^ ^^ ^^^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                ^^^^^^^^^^^^ ^^^^^ ^
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step(" Step one: Chop onions and garlic.")}
- tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
+ tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.com: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      -------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:15,835 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:15,838 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:15,838 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:15,841 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:15:15,841 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:15,843 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:15,843 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:15,844 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:15,844 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:15:15,846 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:15,846 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:15:15,846 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:15:15,848 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 11:15:15,848 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:15:15,849 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:15:20,953 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:15:20,954 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:20,954 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: next}], sender=TextInputComponent, reason=None))
2017-10-24 11:15:20,954 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: next}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:20,954 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: next}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:20,955 - session_2017-10-24T11_15_00_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:15:20,955 - session_2017-10-24T11_15_00_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:15:20,956 - session_2017-10-24T11_15_00_0 - DEBUG - ExactInterpreter: Found no valid exact interpretations, returning an empty result.
2017-10-24 11:15:20,956 - session_2017-10-24T11_15_00_0 - DEBUG - Result from 'ExactInterpreter': []
2017-10-24 11:15:20,956 - session_2017-10-24T11_15_00_0 - DEBUG - Starting 'RobustInterpreter'
2017-10-24 11:15:20,956 - session_2017-10-24T11_15_00_0 - DEBUG - DddInterpreter.interpret_partially: timeout=1.99852991104
2017-10-24 11:15:20,958 - session_2017-10-24T11_15_00_0 - DEBUG - robust grammatical interpretations: []
2017-10-24 11:15:20,959 - session_2017-10-24T11_15_00_0 - DEBUG - _remove_literals(): Got no valid interpretations of partial utterances
2017-10-24 11:15:20,959 - session_2017-10-24T11_15_00_0 - DEBUG - RobustInterpreter: Partial interpretation failed.
2017-10-24 11:15:20,959 - session_2017-10-24T11_15_00_0 - DEBUG - RobustInterpreter: use_word_list_correction disabled, skipping interpretation with word correction
2017-10-24 11:15:20,960 - session_2017-10-24T11_15_00_0 - DEBUG - RobustInterpreter: Found no robust interpretations, returning an empty result.
2017-10-24 11:15:20,960 - session_2017-10-24T11_15_00_0 - DEBUG - Result from 'RobustInterpreter': []
2017-10-24 11:15:20,960 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {}, sender=InterpretModule, reason=None)
2017-10-24 11:15:20,960 - session_2017-10-24T11_15_00_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:15:20,960 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: next}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:20,960 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:20,960 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:20,960 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:20,961 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:20,962 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 11:15:20,962 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:15:20,962 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:20,962 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:20,962 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:20,964 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:20,964 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:15:20,964 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:15:20,964 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:15:20,964 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:20,964 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 11:15:20,965 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 11:15:20,965 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:20,965 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 11:15:20,965 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:15:20,966 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:20,968 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:20,968 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:15:20,968 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:15:20,968 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:15:20,968 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:15:20,968 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:15:20,968 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:20,969 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c0252bd8>]
2017-10-24 11:15:20,969 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c0252bd8>], sender=GuiBackend, reason=None)
2017-10-24 11:15:20,969 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posted event
2017-10-24 11:15:20,969 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {}, sender=InterpretModule, reason=None))
2017-10-24 11:15:20,969 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {}, sender=InterpretModule, reason=None)
2017-10-24 11:15:20,969 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:15:20,969 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:15:20,970 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 11:15:20,970 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:20,970 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 11:15:20,970 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:15:20,971 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:15:20,971 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:20,971 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c0252bd8>], sender=GuiBackend, reason=None))
2017-10-24 11:15:20,972 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c0252bd8>], sender=GuiBackend, reason=None)
2017-10-24 11:15:20,972 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:15:20,973 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:20,973 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:20,991 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:15:20,992 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:20,992 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 11:15:20,992 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 11:15:20,992 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:15:20,992 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:20,992 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:20,992 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:20,993 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 11:15:20,994 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836520.99
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:20,994 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:20,994 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:20,994 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:20,998 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:15:20,998 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:20,998 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:21,000 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:21,000 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:21,000 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:21,000 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:21,000 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:21,000 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:21,001 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:21,001 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:21,001 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:21,001 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:21,002 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:21,002 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:21,005 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:15:21,005 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:21,005 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:21,006 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:21,006 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:21,006 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:21,009 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 11:15:21,009 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:21,009 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:21,009 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:21,009 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:21,009 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:21,009 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:21,009 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:21,009 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:21,009 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:21,010 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:21,010 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:21,010 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:21,010 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:21,010 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:21,010 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:21,010 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:21,010 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:21,011 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:21,011 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:21,011 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:21,011 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:21,013 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 11:15:21,013 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:21,014 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:21,014 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:21,014 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:21,014 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:21,014 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:21,014 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:15:21,016 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:21,016 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:21,016 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 11:15:21,016 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 11:15:21,017 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 11:15:21,017 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 11:15:21,018 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836521.02
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:21,018 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:21,018 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:21,020 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:21,020 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:21,025 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:15:21,025 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:21,025 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:21,027 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:21,028 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:21,028 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:21,028 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:21,028 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:21,028 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:21,029 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:21,029 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:21,029 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:15:21,029 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:21,029 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:15:21,029 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:21,029 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:21,029 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:21,029 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:21,030 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:21,030 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:21,030 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:21,030 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:21,030 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:21,030 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:21,030 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:21,031 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:21,031 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:21,033 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.goal(X)])
?                           ----------
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:15:21,033 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:21,034 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:21,034 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:21,034 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:21,034 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:21,034 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:21,034 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:21,035 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836521.02
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:21,035 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:21,039 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                      ++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:21,039 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:21,041 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmSemNeg
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)])
-- END TIS changes --
2017-10-24 11:15:21,042 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)])
2017-10-24 11:15:21,042 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 11:15:21,042 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:21,042 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:21,042 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:21,043 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:21,043 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None)))
2017-10-24 11:15:21,043 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 11:15:21,043 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:21,044 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:21,044 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:21,045 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:21,045 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:per*pos:"next"), facts={})
2017-10-24 11:15:21,045 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:per*pos:"next")
2017-10-24 11:15:21,045 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:sem*neg), facts={})
2017-10-24 11:15:21,045 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:sem*neg)
2017-10-24 11:15:21,045 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:per*pos:"next")
2017-10-24 11:15:21,045 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:per*pos:"next") generated as u'I heard you say next.'
2017-10-24 11:15:21,046 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:sem*neg)
2017-10-24 11:15:21,046 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:sem*neg) generated as u"I don't understand."
2017-10-24 11:15:21,046 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say next., I don't understand.], sender=GenerateModule, reason=None)
2017-10-24 11:15:21,047 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:21,048 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:21,049 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:15:21,049 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)])
2017-10-24 11:15:21,049 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:per*pos:"next"), facts={})
2017-10-24 11:15:21,049 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:per*pos:"next")
2017-10-24 11:15:21,049 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:sem*neg), facts={})
2017-10-24 11:15:21,049 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:sem*neg)
2017-10-24 11:15:21,049 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend generated message []
2017-10-24 11:15:21,050 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:15:21,050 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posted event
2017-10-24 11:15:21,050 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say next., I don't understand.], sender=GenerateModule, reason=None))
2017-10-24 11:15:21,050 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say next., I don't understand.], sender=GenerateModule, reason=None)
2017-10-24 11:15:21,050 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["I heard you say next.", "I don't understand."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:15:21,051 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:21,051 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 11:15:21,051 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:15:21,051 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:15:21,052 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:21,052 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:21,068 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": ["I heard you say next.", "I don't understand."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:15:21,068 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:21,068 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [I heard you say next., I don't understand.], sender=TextOutputComponent, reason=None))
2017-10-24 11:15:21,068 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [I heard you say next., I don't understand.], sender=TextOutputComponent, reason=None)
2017-10-24 11:15:21,068 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:15:21,068 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [I heard you say next., I don't understand.], sender=TurnManager, reason=None)
2017-10-24 11:15:21,069 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [I heard you say next., I don't understand.], sender=TurnManager, reason=None)
2017-10-24 11:15:21,069 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [I heard you say next., I don't understand.], sender=TurnManager, reason=None)
2017-10-24 11:15:21,069 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [I heard you say next., I don't understand.], sender=TurnManager, reason=None))
2017-10-24 11:15:21,070 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836521.07
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [I heard you say next., I don't understand.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:21,070 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:21,070 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:21,071 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:21,073 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:15:21,073 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:21,074 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:21,076 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:21,076 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:21,076 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:21,076 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:21,076 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:21,076 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:21,077 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:21,077 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:21,077 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
2017-10-24 11:15:21,077 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:21,077 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
2017-10-24 11:15:21,077 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:21,080 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
+ tis.private.nim: OpenQueue([ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:15:21,080 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:21,080 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:21,080 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:21,080 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:21,080 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:21,083 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
?                                                                              ++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:21,083 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:21,083 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:21,084 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:21,084 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:21,084 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:21,084 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:21,084 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:21,084 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:21,084 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:21,084 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:21,085 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:21,085 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:21,085 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:21,085 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:21,085 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:21,085 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:21,085 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:21,085 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:21,086 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:21,086 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:21,086 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:21,088 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:21,088 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:21,088 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [I heard you say next., I don't understand.], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:21,088 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:21,088 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:21,089 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:21,089 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:21,090 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [I heard you say next., I don't understand.], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:15:21,090 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [I heard you say next., I don't understand.], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:21,090 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [I heard you say next., I don't understand.], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:21,090 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:23,023 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "done"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:15:23,023 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:23,023 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: done}], sender=TextInputComponent, reason=None))
2017-10-24 11:15:23,023 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: done}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:23,024 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: done}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:23,024 - session_2017-10-24T11_15_00_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "done"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:15:23,024 - session_2017-10-24T11_15_00_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:15:23,025 - session_2017-10-24T11_15_00_0 - DEBUG - ExactInterpreter: Found no valid exact interpretations, returning an empty result.
2017-10-24 11:15:23,025 - session_2017-10-24T11_15_00_0 - DEBUG - Result from 'ExactInterpreter': []
2017-10-24 11:15:23,025 - session_2017-10-24T11_15_00_0 - DEBUG - Starting 'RobustInterpreter'
2017-10-24 11:15:23,025 - session_2017-10-24T11_15_00_0 - DEBUG - DddInterpreter.interpret_partially: timeout=1.99873304367
2017-10-24 11:15:23,027 - session_2017-10-24T11_15_00_0 - DEBUG - robust grammatical interpretations: []
2017-10-24 11:15:23,028 - session_2017-10-24T11_15_00_0 - DEBUG - _remove_literals(): Got no valid interpretations of partial utterances
2017-10-24 11:15:23,028 - session_2017-10-24T11_15_00_0 - DEBUG - RobustInterpreter: Partial interpretation failed.
2017-10-24 11:15:23,028 - session_2017-10-24T11_15_00_0 - DEBUG - RobustInterpreter: use_word_list_correction disabled, skipping interpretation with word correction
2017-10-24 11:15:23,028 - session_2017-10-24T11_15_00_0 - DEBUG - RobustInterpreter: Found no robust interpretations, returning an empty result.
2017-10-24 11:15:23,029 - session_2017-10-24T11_15_00_0 - DEBUG - Result from 'RobustInterpreter': []
2017-10-24 11:15:23,029 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {}, sender=InterpretModule, reason=None)
2017-10-24 11:15:23,029 - session_2017-10-24T11_15_00_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:15:23,029 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: done}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:23,029 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {}, sender=InterpretModule, reason=None))
2017-10-24 11:15:23,029 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {}, sender=InterpretModule, reason=None)
2017-10-24 11:15:23,029 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:15:23,029 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:15:23,029 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 11:15:23,030 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:23,030 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 11:15:23,030 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 11:15:23,030 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 11:15:23,030 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 11:15:23,031 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 11:15:23,032 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836523.03
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: done
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:23,032 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:23,032 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:23,035 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:23,035 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:23,038 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:15:23,038 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:23,039 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:23,041 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:23,041 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:23,041 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:23,041 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:23,041 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:23,041 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:23,041 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:23,041 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:23,041 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:15:23,041 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:23,041 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:15:23,042 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:23,042 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:23,042 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:23,042 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:23,042 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:23,042 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:23,042 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:23,042 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:23,042 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:23,043 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:23,043 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:23,043 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:23,043 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:23,043 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:23,044 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:23,044 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:23,044 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:23,044 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:23,044 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:23,044 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:23,045 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836523.03
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: done
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:23,045 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:23,048 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:23,048 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:23,050 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmSemNeg
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)])
-- END TIS changes --
2017-10-24 11:15:23,050 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)])
2017-10-24 11:15:23,050 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 11:15:23,051 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:23,051 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:23,051 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:23,051 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:23,052 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None)))
2017-10-24 11:15:23,052 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 11:15:23,052 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:23,052 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:23,052 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:23,053 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:23,053 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:per*pos:"done"), facts={})
2017-10-24 11:15:23,053 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:per*pos:"done")
2017-10-24 11:15:23,054 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:sem*neg), facts={})
2017-10-24 11:15:23,054 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:sem*neg)
2017-10-24 11:15:23,054 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:per*pos:"done")
2017-10-24 11:15:23,054 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:per*pos:"done") generated as u'I heard you say done.'
2017-10-24 11:15:23,054 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:sem*neg)
2017-10-24 11:15:23,054 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:sem*neg) generated as u"I don't understand."
2017-10-24 11:15:23,055 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say done., I don't understand.], sender=GenerateModule, reason=None)
2017-10-24 11:15:23,055 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:23,057 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:23,057 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:15:23,057 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)])
2017-10-24 11:15:23,057 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:per*pos:"done"), facts={})
2017-10-24 11:15:23,057 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:per*pos:"done")
2017-10-24 11:15:23,057 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:sem*neg), facts={})
2017-10-24 11:15:23,057 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:sem*neg)
2017-10-24 11:15:23,058 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend generated message []
2017-10-24 11:15:23,058 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:15:23,058 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posted event
2017-10-24 11:15:23,058 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say done., I don't understand.], sender=GenerateModule, reason=None))
2017-10-24 11:15:23,058 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say done., I don't understand.], sender=GenerateModule, reason=None)
2017-10-24 11:15:23,058 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["I heard you say done.", "I don't understand."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:15:23,059 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:23,059 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 11:15:23,059 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:15:23,059 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:15:23,060 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:23,060 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:23,071 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": ["I heard you say done.", "I don't understand."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:15:23,071 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:23,071 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [I heard you say done., I don't understand.], sender=TextOutputComponent, reason=None))
2017-10-24 11:15:23,071 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [I heard you say done., I don't understand.], sender=TextOutputComponent, reason=None)
2017-10-24 11:15:23,071 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:15:23,071 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [I heard you say done., I don't understand.], sender=TurnManager, reason=None)
2017-10-24 11:15:23,071 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [I heard you say done., I don't understand.], sender=TurnManager, reason=None)
2017-10-24 11:15:23,072 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [I heard you say done., I don't understand.], sender=TurnManager, reason=None)
2017-10-24 11:15:23,072 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [I heard you say done., I don't understand.], sender=TurnManager, reason=None))
2017-10-24 11:15:23,073 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836523.07
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [I heard you say done., I don't understand.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"done", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: done
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:23,073 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:23,073 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:23,073 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:23,076 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:per*pos:"done", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:15:23,076 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:23,077 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:23,079 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:23,079 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:23,079 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:23,079 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:23,079 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:23,079 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:23,079 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:23,079 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:23,079 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:per*pos:"done", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
2017-10-24 11:15:23,079 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:23,079 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:per*pos:"done", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
2017-10-24 11:15:23,080 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:23,083 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:per*pos:"done", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
+ tis.private.nim: OpenQueue([ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"done", speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:15:23,083 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:23,083 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:23,084 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:23,084 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:23,084 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:23,087 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"done", speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"done", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
?                                                                              ++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:23,087 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:23,087 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:23,087 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:23,087 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:23,087 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:23,087 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:23,087 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:23,087 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:23,088 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:23,088 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:23,088 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:23,088 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:23,088 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:23,088 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:23,088 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:23,088 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:23,088 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:23,089 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:23,089 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:23,089 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:23,089 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:23,091 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:23,092 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:23,092 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [I heard you say done., I don't understand.], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"done", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:23,092 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:23,092 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:23,092 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:23,093 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:23,093 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [I heard you say done., I don't understand.], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"done", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:15:23,093 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [I heard you say done., I don't understand.], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"done", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:23,094 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [I heard you say done., I don't understand.], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"done", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:23,094 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:25,707 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:15:25,708 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:25,708 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 11:15:25,708 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:25,708 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:25,708 - session_2017-10-24T11_15_00_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:15:25,708 - session_2017-10-24T11_15_00_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:15:25,709 - session_2017-10-24T11_15_00_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 11:15:25,709 - session_2017-10-24T11_15_00_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 11:15:25,709 - session_2017-10-24T11_15_00_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 11:15:25,710 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:15:25,710 - session_2017-10-24T11_15_00_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:15:25,710 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:25,710 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 11:15:25,710 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:15:25,710 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:15:25,711 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:15:25,711 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 11:15:25,711 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:25,711 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 11:15:25,712 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:15:25,712 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:15:25,712 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:15:25,713 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:15:25,714 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836525.71
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"done", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"done"), ICMMove(icm:sem*neg)])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"done", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:25,714 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:25,717 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 11:15:25,717 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:25,718 - session_2017-10-24T11_15_00_0 - INFO - hypotheses reranking had no effect
2017-10-24 11:15:25,718 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:25,720 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"done", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])
+ tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next')])
-- END TIS changes --
2017-10-24 11:15:25,721 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:25,725 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"done", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:per*pos:"done", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:15:25,725 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:25,726 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:25,728 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:25,729 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:25,729 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:25,733 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                    ----------
+ tis.private.tmp.usr.qud: stackset([])
-- END TIS changes --
2017-10-24 11:15:25,733 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:25,733 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:25,733 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:25,733 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:25,733 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:25,733 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])
2017-10-24 11:15:25,733 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:25,733 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])
2017-10-24 11:15:25,733 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:25,738 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateUsrRequest
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
?                          ++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 11:15:25,738 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:25,738 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:25,741 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdateISSUES3
-- BEGIN TIS changes --
- tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                                                  --------------------------
+ tis.shared.goals: stackset([perform(go_to_next), perform(top)])
-- END TIS changes --
2017-10-24 11:15:25,741 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:25,741 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:25,744 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
+ tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
-- END TIS changes --
2017-10-24 11:15:25,744 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:25,744 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:25,744 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:25,745 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:25,745 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:25,745 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:25,745 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:25,745 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:25,745 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:25,745 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:25,748 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.bel: {}
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 11:15:25,748 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:25,748 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:25,749 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:25,749 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:25,749 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:25,749 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:25,749 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:25,749 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:25,749 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:25,749 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 11:15:25,750 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:25,750 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:25,751 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836525.71
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:per*pos:"done", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:25,751 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:25,756 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                      ^^^^^^^^^^   ---  ^^^^^
+ tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                      ^  ++++   ^^^^^^^^
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 11:15:25,756 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:25,759 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
-- END TIS changes --
2017-10-24 11:15:25,759 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:25,761 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:25,761 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:25,761 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:25,762 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:15:25,764 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:25,764 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:15:25,764 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:15:25,766 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 11:15:25,767 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 11:15:25,767 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:15:25,767 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 11:15:25,767 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 11:15:25,767 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 11:15:25,768 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:25,769 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:25,769 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:25,769 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:25,770 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:25,770 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 11:15:25,771 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:15:25,771 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:25,771 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:25,771 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:25,773 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:25,774 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 11:15:25,774 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 11:15:25,774 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 11:15:25,774 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 11:15:25,775 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 11:15:25,776 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 11:15:25,776 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 11:15:25,776 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp') generated as u'Went to next'
2017-10-24 11:15:25,776 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None)
2017-10-24 11:15:25,777 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:25,778 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:25,779 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:25,779 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:15:25,780 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 11:15:25,780 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 11:15:25,780 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 11:15:25,780 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 11:15:25,780 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 11:15:25,781 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7fc0c027bd40>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c0252170>]
2017-10-24 11:15:25,781 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7fc0c027bd40>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c0252170>], sender=GuiBackend, reason=None)
2017-10-24 11:15:25,781 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posted event
2017-10-24 11:15:25,781 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None))
2017-10-24 11:15:25,781 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None)
2017-10-24 11:15:25,781 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Went to next"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:15:25,782 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:25,782 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:15:25,782 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:25,782 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Went to next"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:15:25,784 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:25,784 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7fc0c027bd40>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c0252170>], sender=GuiBackend, reason=None))
2017-10-24 11:15:25,784 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7fc0c027bd40>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c0252170>], sender=GuiBackend, reason=None)
2017-10-24 11:15:25,785 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "go_to_next", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Went to next"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:15:25,786 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:25,787 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:25,788 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Went to next"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:15:25,789 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:25,790 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Went to next], sender=TextOutputComponent, reason=None))
2017-10-24 11:15:25,790 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Went to next], sender=TextOutputComponent, reason=None)
2017-10-24 11:15:25,790 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:15:25,790 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 11:15:25,790 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 11:15:25,790 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 11:15:25,791 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 11:15:25,792 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836525.79
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:per*pos:"done", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:25,792 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:25,792 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:25,792 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:25,798 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {ICMMove(icm:per*pos:"done", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:15:25,798 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:25,798 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:25,801 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 11:15:25,801 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:25,801 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:25,801 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:25,801 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:25,801 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:25,801 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:25,802 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:25,802 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:25,802 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:25,802 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:25,802 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:25,806 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:15:25,806 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:25,806 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:25,806 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:25,807 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:25,807 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:25,810 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {device_activity_terminated(go_to_next)}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:25,810 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:25,810 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:25,813 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
- tis.shared.goals: stackset([perform(go_to_next), perform(top)])
?                                     ---------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 11:15:25,813 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:25,813 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:25,813 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:25,813 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:25,813 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:25,813 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:25,813 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:25,813 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:25,813 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:25,814 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:25,814 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:25,814 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:25,817 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
?                          ^ ^^^^^ ^^^^^^                -
+ tis.private.plan: Stack([device_query(?X.say_step(X))])
?                          ^^^^^^^^ ^ ^
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:25,817 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:25,817 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:25,820 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
?                                                                                                              +++++++++++++++++++++++++++
- tis.private.plan: Stack([device_query(?X.say_step(X))])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 11:15:25,820 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:25,820 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:25,821 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:25,821 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:25,821 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:25,821 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:25,821 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:25,821 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:25,821 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:25,824 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 11:15:25,824 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: other example}], sender=DmeModule, reason=None)
2017-10-24 11:15:25,824 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:25,825 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836525.79
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next)}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:25,825 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:25,831 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
?                                                                                                                      +++++++++++++++++++++++++++
- tis.private.tmp.sys.com: {}
+ tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
- tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                       ------ ^^^^^^^^^^
+ tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      ++++++++++++++++++  ^^
-- END TIS changes --
2017-10-24 11:15:25,831 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:25,834 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), respond(?X.say_step(X))])
?                                                                  +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:25,834 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:25,837 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), respond(?X.say_step(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
-- END TIS changes --
2017-10-24 11:15:25,837 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:25,839 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("other example")))])
- tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:25,840 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:25,840 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:25,840 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:15:25,842 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:25,842 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:15:25,842 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:15:25,844 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:25,845 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')])
2017-10-24 11:15:25,845 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 11:15:25,845 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: other example}], sender=DmeModule, reason=None))
2017-10-24 11:15:25,845 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: other example}], sender=DmeModule, reason=None)
2017-10-24 11:15:25,845 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "other example"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:25,846 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:25,846 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)))
2017-10-24 11:15:25,846 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 11:15:25,847 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:25,847 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:25,847 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:25,849 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:25,849 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("other example")), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")})
2017-10-24 11:15:25,849 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("other example")), ddd_name=u'recipehelp')
2017-10-24 11:15:25,849 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(say_step("other example")), ddd_name=u'recipehelp')
2017-10-24 11:15:25,850 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move Move(answer(say_step("other example")), ddd_name=u'recipehelp') generated as u'Ok other example.'
2017-10-24 11:15:25,850 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok other example.], sender=GenerateModule, reason=None)
2017-10-24 11:15:25,851 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:25,852 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok other example.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:25,853 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:25,853 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:15:25,854 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')])
2017-10-24 11:15:25,854 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("other example")), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")})
2017-10-24 11:15:25,854 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("other example")), ddd_name=u'recipehelp')
2017-10-24 11:15:25,855 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c02886c8>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c0288b00>]
2017-10-24 11:15:25,855 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c02886c8>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c0288b00>], sender=GuiBackend, reason=None)
2017-10-24 11:15:25,855 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posted event
2017-10-24 11:15:25,855 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok other example.], sender=GenerateModule, reason=None))
2017-10-24 11:15:25,855 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok other example.], sender=GenerateModule, reason=None)
2017-10-24 11:15:25,855 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok other example."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:15:25,856 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:25,856 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok other example.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:15:25,856 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok other example.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:25,856 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok other example."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:15:25,857 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:25,857 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c02886c8>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c0288b00>], sender=GuiBackend, reason=None))
2017-10-24 11:15:25,857 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c02886c8>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c0288b00>], sender=GuiBackend, reason=None)
2017-10-24 11:15:25,857 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok other example."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:15:25,858 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:25,858 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:25,928 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok other example."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:15:25,928 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:25,929 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok other example.], sender=TextOutputComponent, reason=None))
2017-10-24 11:15:25,929 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok other example.], sender=TextOutputComponent, reason=None)
2017-10-24 11:15:25,929 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:15:25,929 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok other example.], sender=TurnManager, reason=None)
2017-10-24 11:15:25,929 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok other example.], sender=TurnManager, reason=None)
2017-10-24 11:15:25,929 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok other example.], sender=TurnManager, reason=None)
2017-10-24 11:15:25,930 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok other example.], sender=TurnManager, reason=None))
2017-10-24 11:15:25,931 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836525.93
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok other example.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("other example")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next)}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:25,931 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:25,931 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:25,931 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:25,936 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 11:15:25,937 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:25,937 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:25,939 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:25,939 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:25,939 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:25,939 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:25,939 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:25,939 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:25,940 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:25,940 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:25,940 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:25,940 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:25,940 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:25,940 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:25,943 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {device_activity_terminated(go_to_next)}
+ tis.shared.com: {device_activity_terminated(go_to_next), say_step("other example")}
?                                                        +++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:25,943 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:25,943 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:25,948 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), say_step("other example")}
+ tis.shared.com: {device_activity_terminated(go_to_next), say_step("other example"), resolved(?X.say_step(X))}
?                                                                                   ++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             -------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 11:15:25,948 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:25,948 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:25,948 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:25,948 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:25,949 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:25,949 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:25,949 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:25,949 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:25,949 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:25,949 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:25,949 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:25,949 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:25,949 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:25,949 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:25,950 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:25,950 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:25,950 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:25,950 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:25,950 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:25,952 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:25,953 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: other example}], sender=DmeModule, reason=None)
2017-10-24 11:15:25,953 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok other example.], latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:15:25,953 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: other example}], sender=DmeModule, reason=None))
2017-10-24 11:15:25,953 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: other example}], sender=DmeModule, reason=None)
2017-10-24 11:15:25,953 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "other example"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:25,954 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:25,954 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok other example.], latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 11:15:25,955 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok other example.], latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:15:25,955 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok other example.], latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:15:25,956 - session_2017-10-24T11_15_00_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7fc0c0252b90>:1.0
2017-10-24 11:15:25,956 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:26,956 - session_2017-10-24T11_15_00_0 - DEBUG - Timeout fired
2017-10-24 11:15:26,956 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:15:26,956 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:15:26,956 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:15:26,956 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:15:26,957 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836526.96
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("other example")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), say_step("other example"), resolved(?X.say_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:26,957 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:26,958 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:26,960 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:26,960 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:26,964 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:26,964 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:26,964 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:26,967 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:26,967 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:26,967 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:26,967 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:26,967 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:26,967 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:26,968 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:26,968 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:26,968 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:15:26,968 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:26,968 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:15:26,968 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:26,968 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:26,969 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:26,969 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:26,969 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:26,969 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:26,969 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:26,969 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:26,969 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:26,969 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:26,969 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:26,972 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:15:26,972 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:26,973 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:26,975 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {device_activity_terminated(go_to_next), say_step("other example"), resolved(?X.say_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 11:15:26,975 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:26,975 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:26,976 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:26,976 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:26,976 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:26,976 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:26,976 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:26,976 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:26,976 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:26,977 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:26,977 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:26,978 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836526.96
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:26,978 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:26,983 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
?                                                                ^ ^^ ^^^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                ^^^^^^^^^^^^ ^^^^^ ^
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
- tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
+ tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.com: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      -------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:26,983 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:26,985 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:26,985 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:26,988 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:15:26,988 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:26,990 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:26,990 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:26,991 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:26,991 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:15:26,993 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:26,993 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:15:26,993 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:15:26,995 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 11:15:26,995 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:15:26,996 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:15:35,779 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:15:35,779 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:35,780 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 11:15:35,780 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:35,780 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:35,780 - session_2017-10-24T11_15_00_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:15:35,780 - session_2017-10-24T11_15_00_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:15:35,781 - session_2017-10-24T11_15_00_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 11:15:35,782 - session_2017-10-24T11_15_00_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 11:15:35,782 - session_2017-10-24T11_15_00_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 11:15:35,782 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:15:35,782 - session_2017-10-24T11_15_00_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:15:35,782 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:35,782 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:35,783 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:35,783 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:35,783 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:35,784 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 11:15:35,784 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:15:35,784 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:35,784 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:35,785 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:35,786 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:35,786 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:15:35,786 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:15:35,786 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:15:35,786 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:35,786 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 11:15:35,787 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 11:15:35,787 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:35,787 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 11:15:35,787 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:15:35,788 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:35,790 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:35,790 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:15:35,790 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:15:35,790 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:15:35,790 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:15:35,790 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:15:35,791 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:35,791 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c029d5f0>]
2017-10-24 11:15:35,791 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c029d5f0>], sender=GuiBackend, reason=None)
2017-10-24 11:15:35,791 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posted event
2017-10-24 11:15:35,791 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 11:15:35,791 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:15:35,792 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:15:35,792 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:15:35,792 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 11:15:35,793 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:35,793 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 11:15:35,793 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:15:35,793 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:15:35,794 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:35,794 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c029d5f0>], sender=GuiBackend, reason=None))
2017-10-24 11:15:35,794 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c029d5f0>], sender=GuiBackend, reason=None)
2017-10-24 11:15:35,795 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:15:35,795 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:35,795 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:35,838 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:15:35,838 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:35,838 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 11:15:35,839 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 11:15:35,839 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:15:35,839 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:35,839 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:35,839 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:35,839 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 11:15:35,840 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836535.84
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:35,841 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:35,841 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:35,841 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:35,844 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:15:35,844 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:35,844 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:35,847 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:35,847 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:35,847 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:35,847 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:35,847 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:35,847 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:35,847 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:35,847 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:35,848 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:35,848 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:35,848 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:35,848 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:35,852 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:15:35,852 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:35,852 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:35,852 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:35,852 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:35,852 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:35,856 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 11:15:35,856 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:35,856 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:35,856 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:35,856 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:35,856 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:35,857 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:35,857 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:35,857 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:35,857 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:35,857 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:35,857 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:35,857 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:35,857 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:35,857 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:35,857 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:35,858 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:35,858 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:35,858 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:35,858 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:35,859 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:35,859 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:35,861 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 11:15:35,861 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:35,861 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:35,861 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:35,861 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:35,861 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:35,862 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:35,862 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:15:35,863 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:35,863 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:35,863 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:15:35,863 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:15:35,864 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:15:35,864 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:15:35,866 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836535.86
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:35,866 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:35,869 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 11:15:35,869 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:35,875 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
- tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                              ^
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                              ^
-- END TIS changes --
2017-10-24 11:15:35,875 - session_2017-10-24T11_15_00_0 - INFO - hypotheses reranking had no effect
2017-10-24 11:15:35,875 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:35,881 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 11:15:35,881 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:35,887 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:15:35,887 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:35,887 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:35,890 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:35,890 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:35,890 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:35,893 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.qud: stackset([])
+ tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                    ++++++++++
-- END TIS changes --
2017-10-24 11:15:35,893 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:35,893 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:35,893 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:35,893 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:35,894 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:35,894 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
2017-10-24 11:15:35,894 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:35,894 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
2017-10-24 11:15:35,894 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:35,898 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateUsrRequest
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
?                          ++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 11:15:35,898 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:35,898 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:35,901 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdateISSUES3
-- BEGIN TIS changes --
- tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                                                  --------------------------
+ tis.shared.goals: stackset([perform(go_to_next), perform(top)])
-- END TIS changes --
2017-10-24 11:15:35,901 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:35,901 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:35,904 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
+ tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
-- END TIS changes --
2017-10-24 11:15:35,904 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:35,904 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:35,904 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:35,904 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:35,904 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:35,904 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:35,904 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:35,904 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:35,905 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:35,905 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:35,907 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.bel: {}
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 11:15:35,907 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:35,908 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:35,908 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:35,908 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:35,910 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.goal(X)])
?                           ----------
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:15:35,910 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:35,911 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:35,911 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:35,911 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:35,911 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:35,911 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 11:15:35,911 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:35,911 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:35,912 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836535.86
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:35,912 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:35,916 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                              +++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 11:15:35,917 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:35,920 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
-- END TIS changes --
2017-10-24 11:15:35,920 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:35,922 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:35,922 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:35,922 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:35,923 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:15:35,925 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:35,925 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:15:35,925 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:15:35,927 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 11:15:35,928 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 11:15:35,928 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:15:35,928 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 11:15:35,928 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 11:15:35,928 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 11:15:35,929 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:35,929 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:35,929 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:35,929 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:35,930 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:35,931 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 11:15:35,931 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:15:35,932 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:35,932 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:35,932 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:35,933 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:35,933 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 11:15:35,933 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 11:15:35,933 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 11:15:35,933 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 11:15:35,934 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 11:15:35,934 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 11:15:35,934 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 11:15:35,934 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp') generated as u'Went to next'
2017-10-24 11:15:35,934 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None)
2017-10-24 11:15:35,935 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:35,936 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:35,938 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:35,938 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:15:35,938 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 11:15:35,938 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 11:15:35,938 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 11:15:35,938 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 11:15:35,938 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 11:15:35,939 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7fc0c0296cf8>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c022b518>]
2017-10-24 11:15:35,939 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7fc0c0296cf8>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c022b518>], sender=GuiBackend, reason=None)
2017-10-24 11:15:35,939 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posted event
2017-10-24 11:15:35,939 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None))
2017-10-24 11:15:35,939 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None)
2017-10-24 11:15:35,939 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Went to next"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:15:35,940 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:35,940 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:15:35,940 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:35,941 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Went to next"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:15:35,941 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:35,941 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7fc0c0296cf8>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c022b518>], sender=GuiBackend, reason=None))
2017-10-24 11:15:35,942 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7fc0c0296cf8>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c022b518>], sender=GuiBackend, reason=None)
2017-10-24 11:15:35,942 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "go_to_next", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Went to next"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:15:35,943 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:35,943 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:35,950 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Went to next"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:15:35,950 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:35,951 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Went to next], sender=TextOutputComponent, reason=None))
2017-10-24 11:15:35,951 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Went to next], sender=TextOutputComponent, reason=None)
2017-10-24 11:15:35,951 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:15:35,952 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 11:15:35,952 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 11:15:35,952 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 11:15:35,953 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 11:15:35,954 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836535.95
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:35,954 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:35,954 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:35,954 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:35,960 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:35,960 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:35,960 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:35,963 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 11:15:35,964 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:35,964 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:35,964 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:35,964 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:35,964 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:35,964 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:35,964 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:35,964 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:35,964 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:35,964 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:35,964 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:35,968 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:15:35,968 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:35,968 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:35,968 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:35,968 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:35,968 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:35,971 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {device_activity_terminated(go_to_next)}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:35,971 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:35,971 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:35,974 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
- tis.shared.goals: stackset([perform(go_to_next), perform(top)])
?                                     ---------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 11:15:35,974 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:35,974 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:35,975 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:35,975 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:35,975 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:35,975 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:35,975 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:35,975 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:35,975 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:35,975 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:35,975 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:35,975 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:35,979 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
?                          ^ ^^^^^ ^^^^^^                -
+ tis.private.plan: Stack([device_query(?X.say_step(X))])
?                          ^^^^^^^^ ^ ^
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:35,979 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:35,980 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:35,983 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}
?                                                                                                              +++++++++++++++++
- tis.private.plan: Stack([device_query(?X.say_step(X))])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 11:15:35,983 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:35,983 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:35,983 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:35,983 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:35,983 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:35,984 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:35,984 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:35,984 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:35,984 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:35,987 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 11:15:35,987 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: lol}], sender=DmeModule, reason=None)
2017-10-24 11:15:35,987 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:35,989 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836535.95
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next)}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:35,989 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:35,994 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}
?                                                                                                                      +++++++++++++++++
- tis.private.tmp.sys.com: {}
+ tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
- tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                       ------ ^^^^^^^^^^
+ tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      ++++++++++++++++++  ^^
-- END TIS changes --
2017-10-24 11:15:35,994 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:35,997 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), respond(?X.say_step(X))])
?                                                                  +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:35,997 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:36,000 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), respond(?X.say_step(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
-- END TIS changes --
2017-10-24 11:15:36,000 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:36,003 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("lol")))])
- tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:36,003 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:36,003 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:36,003 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:15:36,005 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:36,005 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:15:36,005 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:15:36,008 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:36,008 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp')])
2017-10-24 11:15:36,008 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("lol")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 11:15:36,008 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: lol}], sender=DmeModule, reason=None))
2017-10-24 11:15:36,009 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: lol}], sender=DmeModule, reason=None)
2017-10-24 11:15:36,009 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "lol"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:36,009 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:36,009 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("lol")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)))
2017-10-24 11:15:36,010 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("lol")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 11:15:36,010 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:36,011 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("lol")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:36,011 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("lol")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:36,013 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("lol")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:36,013 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("lol")), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")})
2017-10-24 11:15:36,013 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("lol")), ddd_name=u'recipehelp')
2017-10-24 11:15:36,013 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(say_step("lol")), ddd_name=u'recipehelp')
2017-10-24 11:15:36,014 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move Move(answer(say_step("lol")), ddd_name=u'recipehelp') generated as u'Ok lol.'
2017-10-24 11:15:36,014 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok lol.], sender=GenerateModule, reason=None)
2017-10-24 11:15:36,015 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("lol")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:36,016 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok lol.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:36,018 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("lol")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:36,018 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:15:36,018 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp')])
2017-10-24 11:15:36,018 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("lol")), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")})
2017-10-24 11:15:36,018 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("lol")), ddd_name=u'recipehelp')
2017-10-24 11:15:36,027 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c023a368>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c02963f8>]
2017-10-24 11:15:36,028 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c023a368>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c02963f8>], sender=GuiBackend, reason=None)
2017-10-24 11:15:36,030 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posted event
2017-10-24 11:15:36,031 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok lol.], sender=GenerateModule, reason=None))
2017-10-24 11:15:36,031 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok lol.], sender=GenerateModule, reason=None)
2017-10-24 11:15:36,031 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok lol."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:15:36,033 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:36,033 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok lol.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:15:36,034 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok lol.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:36,034 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok lol."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:15:36,035 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:36,035 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c023a368>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c02963f8>], sender=GuiBackend, reason=None))
2017-10-24 11:15:36,036 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c023a368>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c02963f8>], sender=GuiBackend, reason=None)
2017-10-24 11:15:36,036 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok lol."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:15:36,036 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:36,036 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:36,069 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok lol."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:15:36,069 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:36,069 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok lol.], sender=TextOutputComponent, reason=None))
2017-10-24 11:15:36,070 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok lol.], sender=TextOutputComponent, reason=None)
2017-10-24 11:15:36,070 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:15:36,070 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok lol.], sender=TurnManager, reason=None)
2017-10-24 11:15:36,070 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok lol.], sender=TurnManager, reason=None)
2017-10-24 11:15:36,071 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok lol.], sender=TurnManager, reason=None)
2017-10-24 11:15:36,071 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok lol.], sender=TurnManager, reason=None))
2017-10-24 11:15:36,073 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836536.07
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok lol.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("lol")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next)}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:36,073 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:36,073 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:36,074 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:36,079 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 11:15:36,079 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:36,079 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:36,081 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:36,082 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:36,082 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:36,082 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:36,082 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:36,082 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:36,082 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:36,082 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:36,082 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:36,082 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:36,082 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:36,082 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:36,085 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {device_activity_terminated(go_to_next)}
+ tis.shared.com: {device_activity_terminated(go_to_next), say_step("lol")}
?                                                        +++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:36,085 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:36,086 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:36,089 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), say_step("lol")}
+ tis.shared.com: {device_activity_terminated(go_to_next), say_step("lol"), resolved(?X.say_step(X))}
?                                                                         ++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             -------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 11:15:36,089 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:36,089 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:36,089 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:36,089 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:36,089 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:36,089 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:36,090 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:36,090 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:36,090 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:36,090 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:36,090 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:36,090 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:36,090 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:36,090 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:36,091 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:36,091 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:36,091 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:36,091 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:36,091 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:36,093 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:36,094 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: lol}], sender=DmeModule, reason=None)
2017-10-24 11:15:36,094 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok lol.], latest_moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:15:36,094 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: lol}], sender=DmeModule, reason=None))
2017-10-24 11:15:36,094 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: lol}], sender=DmeModule, reason=None)
2017-10-24 11:15:36,094 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "lol"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:36,095 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:36,095 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok lol.], latest_moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 11:15:36,095 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok lol.], latest_moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:15:36,095 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok lol.], latest_moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:15:36,097 - session_2017-10-24T11_15_00_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7fc0c0252fc8>:1.0
2017-10-24 11:15:36,097 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:37,097 - session_2017-10-24T11_15_00_0 - DEBUG - Timeout fired
2017-10-24 11:15:37,097 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:15:37,097 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:15:37,097 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:15:37,097 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:15:37,098 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836537.1
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("lol")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next), say_step("lol"), resolved(?X.say_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:37,098 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:37,099 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:37,101 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:37,101 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:37,105 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:37,105 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:37,105 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:37,108 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:37,108 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:37,108 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:37,108 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:37,108 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:37,108 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:37,108 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:37,108 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:37,109 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:15:37,109 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:37,109 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:15:37,109 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:37,109 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:37,109 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:37,109 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:37,109 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:37,109 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:37,109 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:37,110 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:37,110 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:37,110 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:37,110 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:37,113 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:15:37,113 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:37,113 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:37,116 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {device_activity_terminated(go_to_next), say_step("lol"), resolved(?X.say_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 11:15:37,116 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:37,116 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:37,116 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:37,116 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:37,116 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:37,116 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:37,117 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:37,117 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:37,117 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:37,117 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:37,117 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:37,118 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836537.1
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:37,118 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:37,123 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
?                                                                ^ ^^ ^^^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                ^^^^^^^^^^^^ ^^^^^ ^
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}
- tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
+ tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.com: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      -------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:37,123 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:37,126 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:37,126 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:37,128 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:15:37,128 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:37,131 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:37,131 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:37,131 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:37,131 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:15:37,133 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:37,133 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:15:37,134 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:15:37,136 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 11:15:37,136 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:15:37,136 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:15:42,078 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:15:42,078 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:42,079 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 11:15:42,079 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:42,079 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:42,079 - session_2017-10-24T11_15_00_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:15:42,079 - session_2017-10-24T11_15_00_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:15:42,081 - session_2017-10-24T11_15_00_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 11:15:42,081 - session_2017-10-24T11_15_00_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 11:15:42,081 - session_2017-10-24T11_15_00_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 11:15:42,081 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:15:42,082 - session_2017-10-24T11_15_00_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:15:42,082 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:42,082 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:42,082 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:42,082 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:42,083 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:42,083 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 11:15:42,084 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:15:42,084 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:42,084 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:42,084 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:42,085 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:42,085 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:15:42,085 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:15:42,086 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:15:42,086 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:42,086 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 11:15:42,086 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 11:15:42,087 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:42,087 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 11:15:42,087 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:15:42,088 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:42,090 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:42,090 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:15:42,090 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:15:42,090 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:15:42,090 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:15:42,090 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:15:42,090 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:42,091 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c023a680>]
2017-10-24 11:15:42,091 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c023a680>], sender=GuiBackend, reason=None)
2017-10-24 11:15:42,091 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posted event
2017-10-24 11:15:42,091 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 11:15:42,091 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:15:42,091 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:15:42,091 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:15:42,091 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 11:15:42,093 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:42,094 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 11:15:42,094 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:15:42,094 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:15:42,094 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:42,094 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c023a680>], sender=GuiBackend, reason=None))
2017-10-24 11:15:42,095 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c023a680>], sender=GuiBackend, reason=None)
2017-10-24 11:15:42,095 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:15:42,096 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:42,096 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:42,111 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:15:42,111 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:42,111 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 11:15:42,111 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 11:15:42,111 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:15:42,112 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:42,112 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:42,112 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:42,112 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 11:15:42,114 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836542.11
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:42,114 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:42,114 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:42,114 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:42,117 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:15:42,118 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:42,118 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:42,120 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:42,120 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:42,121 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:42,121 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:42,121 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:42,121 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:42,121 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:42,121 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:42,121 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:42,121 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:42,121 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:42,121 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:42,125 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:15:42,125 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:42,125 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:42,125 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:42,125 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:42,125 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:42,128 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 11:15:42,128 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:42,128 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:42,129 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:42,129 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:42,130 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:42,130 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:42,130 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:42,130 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:42,130 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:42,130 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:42,130 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:42,130 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:42,130 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:42,130 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:42,131 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:42,131 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:42,131 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:42,131 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:42,131 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:42,131 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:42,131 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:42,134 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 11:15:42,134 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:42,134 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:42,134 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:42,134 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:42,135 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:42,135 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:42,135 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:15:42,136 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:42,136 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:42,136 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:15:42,136 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:15:42,137 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:15:42,137 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:15:42,138 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836542.14
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:42,138 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:42,142 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 11:15:42,142 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:42,147 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
- tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                              ^
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                              ^
-- END TIS changes --
2017-10-24 11:15:42,148 - session_2017-10-24T11_15_00_0 - INFO - hypotheses reranking had no effect
2017-10-24 11:15:42,148 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:42,153 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 11:15:42,153 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:42,160 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:15:42,160 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:42,160 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:42,163 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:42,163 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:42,164 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:42,166 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:42,166 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:42,166 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:42,167 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:42,167 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:42,167 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:42,167 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
2017-10-24 11:15:42,167 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:42,167 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
2017-10-24 11:15:42,167 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:42,171 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateUsrRequest
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
?                          ++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 11:15:42,171 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:42,171 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:42,174 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdateISSUES3
-- BEGIN TIS changes --
- tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                                                  --------------------------
+ tis.shared.goals: stackset([perform(go_to_next), perform(top)])
-- END TIS changes --
2017-10-24 11:15:42,174 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:42,174 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:42,177 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
+ tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
-- END TIS changes --
2017-10-24 11:15:42,177 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:42,177 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:42,177 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:42,177 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:42,177 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:42,177 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:42,178 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:42,178 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:42,178 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:42,178 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:42,181 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.bel: {}
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 11:15:42,181 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:42,181 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:42,181 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:42,182 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:42,184 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.goal(X)])
?                           ----------
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:15:42,184 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:42,184 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:42,184 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:42,185 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:42,185 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:42,185 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 11:15:42,185 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:42,185 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:42,186 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836542.14
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:42,186 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:42,190 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                              +++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 11:15:42,190 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:42,193 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
-- END TIS changes --
2017-10-24 11:15:42,193 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:42,196 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:42,196 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:42,196 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:42,196 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:15:42,199 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:42,199 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:15:42,199 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:15:42,201 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 11:15:42,201 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 11:15:42,202 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:15:42,202 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 11:15:42,202 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 11:15:42,202 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 11:15:42,203 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:42,203 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:42,203 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:42,204 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:42,204 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:42,204 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 11:15:42,205 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:15:42,205 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:42,205 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:42,206 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:42,206 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:42,207 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 11:15:42,207 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 11:15:42,207 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 11:15:42,207 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 11:15:42,207 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 11:15:42,207 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 11:15:42,207 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 11:15:42,208 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp') generated as u'Went to next'
2017-10-24 11:15:42,208 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None)
2017-10-24 11:15:42,209 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:42,210 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:42,211 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:42,211 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:15:42,211 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 11:15:42,211 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 11:15:42,211 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 11:15:42,211 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 11:15:42,211 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 11:15:42,212 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7fc0c027eb90>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c0252c68>]
2017-10-24 11:15:42,212 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7fc0c027eb90>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c0252c68>], sender=GuiBackend, reason=None)
2017-10-24 11:15:42,212 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posted event
2017-10-24 11:15:42,212 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None))
2017-10-24 11:15:42,212 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None)
2017-10-24 11:15:42,213 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Went to next"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:15:42,213 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:42,214 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:15:42,214 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:42,214 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Went to next"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:15:42,215 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:42,215 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7fc0c027eb90>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c0252c68>], sender=GuiBackend, reason=None))
2017-10-24 11:15:42,215 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7fc0c027eb90>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c0252c68>], sender=GuiBackend, reason=None)
2017-10-24 11:15:42,215 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "go_to_next", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Went to next"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:15:42,216 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:42,216 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:42,232 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Went to next"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:15:42,233 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:42,233 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Went to next], sender=TextOutputComponent, reason=None))
2017-10-24 11:15:42,234 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Went to next], sender=TextOutputComponent, reason=None)
2017-10-24 11:15:42,234 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:15:42,234 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 11:15:42,234 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 11:15:42,234 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 11:15:42,234 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 11:15:42,235 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836542.23
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:42,236 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:42,236 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:42,236 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:42,242 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:42,242 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:42,242 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:42,245 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 11:15:42,245 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:42,245 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:42,245 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:42,246 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:42,246 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:42,246 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:42,246 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:42,246 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:42,246 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:42,246 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:42,246 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:42,250 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:15:42,250 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:42,250 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:42,251 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:42,251 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:42,251 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:42,254 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {device_activity_terminated(go_to_next)}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:42,254 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:42,254 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:42,257 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
- tis.shared.goals: stackset([perform(go_to_next), perform(top)])
?                                     ---------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 11:15:42,257 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:42,257 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:42,258 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:42,258 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:42,258 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:42,258 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:42,258 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:42,258 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:42,258 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:42,258 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:42,258 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:42,258 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:42,262 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
?                          ^ ^^^^^ ^^^^^^                -
+ tis.private.plan: Stack([device_query(?X.say_step(X))])
?                          ^^^^^^^^ ^ ^
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:42,262 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:42,262 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:42,265 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("4")}
?                                                                                                              +++++++++++++++
- tis.private.plan: Stack([device_query(?X.say_step(X))])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 11:15:42,265 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:42,265 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:42,265 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:42,266 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:42,266 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:42,266 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:42,266 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:42,266 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:42,266 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:42,269 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 11:15:42,269 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 4}], sender=DmeModule, reason=None)
2017-10-24 11:15:42,269 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:42,270 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836542.23
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("4")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next)}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:42,270 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:42,276 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("4")}
?                                                                                                                      +++++++++++++++
- tis.private.tmp.sys.com: {}
+ tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
- tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                       ------ ^^^^^^^^^^
+ tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      ++++++++++++++++++  ^^
-- END TIS changes --
2017-10-24 11:15:42,277 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:42,279 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), respond(?X.say_step(X))])
?                                                                  +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:42,279 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:42,282 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), respond(?X.say_step(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
-- END TIS changes --
2017-10-24 11:15:42,282 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:42,285 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("4")))])
- tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:42,285 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:42,285 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:42,285 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:15:42,287 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:42,287 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:15:42,287 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:15:42,290 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:42,290 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(say_step("4")), ddd_name=u'recipehelp')])
2017-10-24 11:15:42,290 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("4")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("4")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("4")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 11:15:42,290 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 4}], sender=DmeModule, reason=None))
2017-10-24 11:15:42,290 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 4}], sender=DmeModule, reason=None)
2017-10-24 11:15:42,291 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "4"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:42,292 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:42,292 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("4")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("4")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("4")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)))
2017-10-24 11:15:42,293 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("4")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("4")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("4")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 11:15:42,293 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:42,293 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("4")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("4")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("4")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:42,293 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("4")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("4")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("4")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:42,295 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("4")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("4")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("4")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:42,295 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("4")), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("4")})
2017-10-24 11:15:42,295 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("4")), ddd_name=u'recipehelp')
2017-10-24 11:15:42,295 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(say_step("4")), ddd_name=u'recipehelp')
2017-10-24 11:15:42,296 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move Move(answer(say_step("4")), ddd_name=u'recipehelp') generated as u'Ok 4.'
2017-10-24 11:15:42,296 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 4.], sender=GenerateModule, reason=None)
2017-10-24 11:15:42,297 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("4")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("4")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("4")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:42,298 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok 4.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:42,299 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("4")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("4")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("4")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:42,299 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:15:42,299 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(say_step("4")), ddd_name=u'recipehelp')])
2017-10-24 11:15:42,299 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("4")), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("4")})
2017-10-24 11:15:42,299 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("4")), ddd_name=u'recipehelp')
2017-10-24 11:15:42,300 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c0252488>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c0252cb0>]
2017-10-24 11:15:42,300 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c0252488>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c0252cb0>], sender=GuiBackend, reason=None)
2017-10-24 11:15:42,300 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posted event
2017-10-24 11:15:42,301 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 4.], sender=GenerateModule, reason=None))
2017-10-24 11:15:42,301 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 4.], sender=GenerateModule, reason=None)
2017-10-24 11:15:42,301 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok 4."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:15:42,301 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:42,301 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok 4.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:15:42,302 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok 4.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:42,302 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok 4."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:15:42,303 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:42,303 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c0252488>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c0252cb0>], sender=GuiBackend, reason=None))
2017-10-24 11:15:42,303 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c0252488>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c0252cb0>], sender=GuiBackend, reason=None)
2017-10-24 11:15:42,304 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok 4."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:15:42,304 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:42,304 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:42,341 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok 4."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:15:42,342 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:42,342 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok 4.], sender=TextOutputComponent, reason=None))
2017-10-24 11:15:42,343 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok 4.], sender=TextOutputComponent, reason=None)
2017-10-24 11:15:42,343 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:15:42,343 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok 4.], sender=TurnManager, reason=None)
2017-10-24 11:15:42,343 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok 4.], sender=TurnManager, reason=None)
2017-10-24 11:15:42,344 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok 4.], sender=TurnManager, reason=None)
2017-10-24 11:15:42,344 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok 4.], sender=TurnManager, reason=None))
2017-10-24 11:15:42,345 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836542.34
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok 4.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("4")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("4")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("4")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("4")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next)}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:42,346 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:42,346 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:42,346 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:42,350 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(say_step("4")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 11:15:42,351 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:42,351 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:42,353 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:42,354 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:42,354 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:42,354 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:42,354 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:42,354 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:42,354 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:42,354 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:42,354 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("4")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:42,354 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:42,354 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("4")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:42,354 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:42,358 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(say_step("4")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {device_activity_terminated(go_to_next)}
+ tis.shared.com: {device_activity_terminated(go_to_next), say_step("4")}
?                                                        +++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(say_step("4")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:42,358 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:42,358 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:42,362 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), say_step("4")}
+ tis.shared.com: {device_activity_terminated(go_to_next), say_step("4"), resolved(?X.say_step(X))}
?                                                                       ++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             -------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 11:15:42,362 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:42,362 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:42,362 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:42,362 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:42,362 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:42,362 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:42,362 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:42,362 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:42,362 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:42,363 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:42,363 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:42,363 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:42,363 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:42,363 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:42,363 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:42,363 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:42,364 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:42,364 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:42,364 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:42,367 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:42,367 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 4}], sender=DmeModule, reason=None)
2017-10-24 11:15:42,367 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok 4.], latest_moves: OpenQueue([#, Move(answer(say_step("4")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:15:42,367 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 4}], sender=DmeModule, reason=None))
2017-10-24 11:15:42,367 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 4}], sender=DmeModule, reason=None)
2017-10-24 11:15:42,367 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "4"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:42,368 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:42,368 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok 4.], latest_moves: OpenQueue([#, Move(answer(say_step("4")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 11:15:42,368 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok 4.], latest_moves: OpenQueue([#, Move(answer(say_step("4")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:15:42,368 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok 4.], latest_moves: OpenQueue([#, Move(answer(say_step("4")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:15:42,369 - session_2017-10-24T11_15_00_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7fc0c02885a8>:1.0
2017-10-24 11:15:42,369 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:43,369 - session_2017-10-24T11_15_00_0 - DEBUG - Timeout fired
2017-10-24 11:15:43,370 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:15:43,370 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:15:43,370 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:15:43,370 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:15:43,371 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836543.37
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("4")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("4")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("4")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("4")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next), say_step("4"), resolved(?X.say_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(say_step("4")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:43,371 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:43,371 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:43,374 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(say_step("4")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:43,374 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:43,378 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(say_step("4")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(say_step("4")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:43,378 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:43,378 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:43,380 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:43,380 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:43,380 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:43,381 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:43,381 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:43,381 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:43,381 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:43,381 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:43,381 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:15:43,381 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:43,381 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:15:43,381 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:43,381 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:43,381 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:43,381 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:43,381 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:43,382 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:43,382 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:43,382 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:43,382 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:43,382 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:43,382 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:43,385 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:15:43,385 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:43,386 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:43,388 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("4")}
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {device_activity_terminated(go_to_next), say_step("4"), resolved(?X.say_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 11:15:43,388 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:43,389 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:43,389 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:43,389 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:43,389 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:43,389 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:43,390 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:43,390 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:43,390 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:43,390 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:43,390 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:43,391 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836543.37
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("4")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("4")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:43,391 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:43,397 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
?                                                                ^ ^^ ^^^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                ^^^^^^^^^^^^ ^^^^^ ^
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("4")}
- tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
+ tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.com: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      -------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:43,397 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:43,400 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:43,400 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:43,403 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:15:43,403 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:43,406 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:43,406 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:43,406 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:43,406 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:15:43,408 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:43,408 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:15:43,408 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:15:43,410 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 11:15:43,411 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:15:43,411 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:15:44,183 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:15:44,183 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:44,183 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 11:15:44,183 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:44,183 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:44,183 - session_2017-10-24T11_15_00_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:15:44,184 - session_2017-10-24T11_15_00_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:15:44,185 - session_2017-10-24T11_15_00_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 11:15:44,185 - session_2017-10-24T11_15_00_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 11:15:44,185 - session_2017-10-24T11_15_00_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 11:15:44,185 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:15:44,185 - session_2017-10-24T11_15_00_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:15:44,186 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 11:15:44,186 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:44,186 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:44,186 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:44,186 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:44,187 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 11:15:44,187 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:15:44,187 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:44,188 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:44,188 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:44,189 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:44,189 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:15:44,189 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:15:44,190 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:15:44,190 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:44,190 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 11:15:44,190 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 11:15:44,190 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:44,191 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 11:15:44,191 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:15:44,192 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:44,193 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:44,193 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:15:44,193 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:15:44,193 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:15:44,194 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:15:44,194 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:15:44,194 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:15:44,194 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c023a098>]
2017-10-24 11:15:44,194 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c023a098>], sender=GuiBackend, reason=None)
2017-10-24 11:15:44,194 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posted event
2017-10-24 11:15:44,195 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 11:15:44,195 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:15:44,195 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:15:44,195 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:15:44,195 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 11:15:44,196 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:44,196 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 11:15:44,197 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:15:44,197 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:15:44,198 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:44,198 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c023a098>], sender=GuiBackend, reason=None))
2017-10-24 11:15:44,198 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c023a098>], sender=GuiBackend, reason=None)
2017-10-24 11:15:44,198 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:15:44,199 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:44,199 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:44,204 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:15:44,204 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:44,204 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 11:15:44,204 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 11:15:44,205 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:15:44,205 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:44,205 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:44,205 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:15:44,205 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 11:15:44,206 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836544.21
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("4")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:44,206 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:44,207 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:44,207 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:44,210 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(say_step("4")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:15:44,210 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:44,211 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:44,214 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:44,214 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:44,214 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:44,214 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:44,214 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:44,214 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:44,214 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:44,214 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:44,214 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:44,214 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:44,215 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:44,215 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:44,218 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:15:44,218 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:44,218 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:44,218 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:44,218 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:44,218 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:44,221 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 11:15:44,222 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:44,222 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:44,222 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:44,222 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:44,222 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:44,223 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:44,223 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:44,223 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:44,223 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:44,223 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:44,223 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:44,223 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:44,223 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:44,223 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:44,223 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:44,224 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:44,224 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:44,224 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:44,224 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:44,224 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:44,224 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:44,226 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 11:15:44,227 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:44,227 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:44,227 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:44,227 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:44,227 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:44,228 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:44,228 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:15:44,228 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:44,229 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:15:44,229 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:15:44,229 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:15:44,230 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:15:44,230 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:15:44,231 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836544.23
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:44,231 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:44,234 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 11:15:44,235 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:44,239 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
- tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                              ^
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                              ^
-- END TIS changes --
2017-10-24 11:15:44,239 - session_2017-10-24T11_15_00_0 - INFO - hypotheses reranking had no effect
2017-10-24 11:15:44,240 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:44,246 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 11:15:44,246 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:44,253 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:15:44,253 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:44,253 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:44,256 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:44,256 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:44,256 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:44,259 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:44,259 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:44,259 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:44,259 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:44,259 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:44,259 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:44,259 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
2017-10-24 11:15:44,259 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:44,259 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
2017-10-24 11:15:44,260 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:44,263 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateUsrRequest
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
?                          ++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 11:15:44,263 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:44,263 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:44,267 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdateISSUES3
-- BEGIN TIS changes --
- tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                                                  --------------------------
+ tis.shared.goals: stackset([perform(go_to_next), perform(top)])
-- END TIS changes --
2017-10-24 11:15:44,267 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:44,267 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:44,270 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
+ tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
-- END TIS changes --
2017-10-24 11:15:44,270 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:44,270 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:44,270 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:44,270 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:44,270 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:44,270 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:44,270 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:44,271 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:44,271 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:44,271 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:44,274 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.bel: {}
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 11:15:44,274 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:44,274 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:44,274 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:44,274 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:44,277 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.goal(X)])
?                           ----------
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:15:44,277 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:44,277 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:44,277 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:44,277 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:44,277 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:44,278 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 11:15:44,278 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:44,278 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:44,279 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836544.23
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:44,279 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:44,283 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                              +++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 11:15:44,283 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:44,287 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
-- END TIS changes --
2017-10-24 11:15:44,287 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:44,289 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:44,290 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:44,290 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:44,290 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:15:44,292 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:44,292 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:15:44,292 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:15:44,295 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 11:15:44,295 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 11:15:44,295 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:15:44,295 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 11:15:44,296 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 11:15:44,296 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 11:15:44,296 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:44,296 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:44,296 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:44,297 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:44,299 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:44,299 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 11:15:44,300 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:15:44,300 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:44,300 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:44,300 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:44,301 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:44,301 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 11:15:44,301 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 11:15:44,302 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 11:15:44,302 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 11:15:44,302 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 11:15:44,302 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 11:15:44,302 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 11:15:44,302 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp') generated as u'Went to next'
2017-10-24 11:15:44,303 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None)
2017-10-24 11:15:44,303 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:44,304 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:44,305 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:44,305 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:15:44,306 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 11:15:44,306 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 11:15:44,306 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 11:15:44,306 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 11:15:44,306 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 11:15:44,307 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7fc0c027b200>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c023acf8>]
2017-10-24 11:15:44,307 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7fc0c027b200>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c023acf8>], sender=GuiBackend, reason=None)
2017-10-24 11:15:44,307 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posted event
2017-10-24 11:15:44,307 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None))
2017-10-24 11:15:44,307 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None)
2017-10-24 11:15:44,307 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Went to next"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:15:44,308 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:44,308 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:15:44,309 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:44,309 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Went to next"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:15:44,310 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:44,310 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7fc0c027b200>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c023acf8>], sender=GuiBackend, reason=None))
2017-10-24 11:15:44,310 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7fc0c027b200>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c023acf8>], sender=GuiBackend, reason=None)
2017-10-24 11:15:44,310 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "go_to_next", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Went to next"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:15:44,311 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:44,311 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:44,323 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Went to next"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:15:44,324 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:44,324 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Went to next], sender=TextOutputComponent, reason=None))
2017-10-24 11:15:44,324 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Went to next], sender=TextOutputComponent, reason=None)
2017-10-24 11:15:44,324 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:15:44,324 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 11:15:44,324 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 11:15:44,324 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 11:15:44,325 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 11:15:44,326 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836544.33
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:44,326 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:44,326 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:44,326 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:44,333 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:44,333 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:44,333 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:44,336 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 11:15:44,336 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:44,336 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:44,336 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:44,337 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:44,337 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:44,337 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:44,337 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:44,337 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:44,337 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:44,337 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:44,338 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:44,341 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:15:44,341 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:44,341 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:44,341 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:44,341 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:44,342 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:44,344 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {device_activity_terminated(go_to_next)}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:44,344 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:44,344 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:44,348 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
- tis.shared.goals: stackset([perform(go_to_next), perform(top)])
?                                     ---------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 11:15:44,348 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:44,348 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:44,348 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:44,348 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:44,348 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:44,348 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:44,348 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:44,348 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:44,349 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:44,349 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:44,349 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:44,349 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:44,352 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
?                          ^ ^^^^^ ^^^^^^                -
+ tis.private.plan: Stack([device_query(?X.say_step(X))])
?                          ^^^^^^^^ ^ ^
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:44,352 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:44,352 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:44,355 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("5")}
?                                                                                                              +++++++++++++++
- tis.private.plan: Stack([device_query(?X.say_step(X))])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 11:15:44,355 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:44,355 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:44,356 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:44,356 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:44,356 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:44,356 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:44,356 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:44,356 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:44,357 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:44,359 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 11:15:44,359 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 5}], sender=DmeModule, reason=None)
2017-10-24 11:15:44,359 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:44,360 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836544.33
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("5")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next)}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:44,360 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:44,367 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("5")}
?                                                                                                                      +++++++++++++++
- tis.private.tmp.sys.com: {}
+ tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
- tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                       ------ ^^^^^^^^^^
+ tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      ++++++++++++++++++  ^^
-- END TIS changes --
2017-10-24 11:15:44,367 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:44,369 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), respond(?X.say_step(X))])
?                                                                  +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:44,370 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:44,372 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), respond(?X.say_step(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
-- END TIS changes --
2017-10-24 11:15:44,372 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:44,375 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("5")))])
- tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:44,375 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:44,375 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:44,375 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:15:44,377 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:44,377 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:15:44,378 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:15:44,380 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:44,380 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(say_step("5")), ddd_name=u'recipehelp')])
2017-10-24 11:15:44,380 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("5")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("5")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("5")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 11:15:44,381 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 5}], sender=DmeModule, reason=None))
2017-10-24 11:15:44,381 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 5}], sender=DmeModule, reason=None)
2017-10-24 11:15:44,381 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "5"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:44,381 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:44,382 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("5")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("5")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("5")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)))
2017-10-24 11:15:44,383 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("5")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("5")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("5")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 11:15:44,383 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:44,383 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("5")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("5")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("5")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:44,384 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("5")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("5")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("5")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:44,385 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("5")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("5")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("5")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:44,385 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("5")), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("5")})
2017-10-24 11:15:44,385 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("5")), ddd_name=u'recipehelp')
2017-10-24 11:15:44,385 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(say_step("5")), ddd_name=u'recipehelp')
2017-10-24 11:15:44,386 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule: Move Move(answer(say_step("5")), ddd_name=u'recipehelp') generated as u'Ok 5.'
2017-10-24 11:15:44,386 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 5.], sender=GenerateModule, reason=None)
2017-10-24 11:15:44,387 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("5")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("5")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("5")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:44,388 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok 5.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:44,389 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("5")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("5")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("5")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:44,389 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:15:44,389 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(say_step("5")), ddd_name=u'recipehelp')])
2017-10-24 11:15:44,390 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("5")), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("5")})
2017-10-24 11:15:44,390 - session_2017-10-24T11_15_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("5")), ddd_name=u'recipehelp')
2017-10-24 11:15:44,391 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c029d560>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c029d5f0>]
2017-10-24 11:15:44,391 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c029d560>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c029d5f0>], sender=GuiBackend, reason=None)
2017-10-24 11:15:44,391 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posted event
2017-10-24 11:15:44,391 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 5.], sender=GenerateModule, reason=None))
2017-10-24 11:15:44,391 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 5.], sender=GenerateModule, reason=None)
2017-10-24 11:15:44,391 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok 5."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:15:44,392 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:44,392 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok 5.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:15:44,392 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok 5.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:44,392 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok 5."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:15:44,393 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:44,394 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c029d560>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c029d5f0>], sender=GuiBackend, reason=None))
2017-10-24 11:15:44,394 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc0c029d560>, <tdm.tdm_gui_protocol.Popup instance at 0x7fc0c029d5f0>], sender=GuiBackend, reason=None)
2017-10-24 11:15:44,394 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok 5."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:15:44,395 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:44,395 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:44,435 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok 5."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:15:44,435 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:44,435 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok 5.], sender=TextOutputComponent, reason=None))
2017-10-24 11:15:44,436 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok 5.], sender=TextOutputComponent, reason=None)
2017-10-24 11:15:44,436 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:15:44,436 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok 5.], sender=TurnManager, reason=None)
2017-10-24 11:15:44,436 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok 5.], sender=TurnManager, reason=None)
2017-10-24 11:15:44,436 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok 5.], sender=TurnManager, reason=None)
2017-10-24 11:15:44,436 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok 5.], sender=TurnManager, reason=None))
2017-10-24 11:15:44,438 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836544.44
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok 5.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("5")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("5")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("5")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("5")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next)}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:44,438 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:44,438 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:44,438 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:44,443 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(say_step("5")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 11:15:44,443 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:44,443 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:44,446 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:44,447 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:44,447 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:44,447 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:44,447 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:44,447 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:44,447 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:44,447 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:44,447 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("5")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:44,447 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:44,447 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("5")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:15:44,447 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:44,450 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(say_step("5")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {device_activity_terminated(go_to_next)}
+ tis.shared.com: {device_activity_terminated(go_to_next), say_step("5")}
?                                                        +++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(say_step("5")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:44,451 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:15:44,451 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:44,454 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), say_step("5")}
+ tis.shared.com: {device_activity_terminated(go_to_next), say_step("5"), resolved(?X.say_step(X))}
?                                                                       ++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             -------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 11:15:44,454 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:15:44,454 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:44,454 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:44,455 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:44,455 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:44,455 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:44,455 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:44,455 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:44,455 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:44,455 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:44,455 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:44,455 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:44,456 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:44,456 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:44,456 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:44,456 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:44,456 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:44,456 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:44,456 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:44,459 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:44,459 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 5}], sender=DmeModule, reason=None)
2017-10-24 11:15:44,459 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok 5.], latest_moves: OpenQueue([#, Move(answer(say_step("5")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:15:44,459 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 5}], sender=DmeModule, reason=None))
2017-10-24 11:15:44,460 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 5}], sender=DmeModule, reason=None)
2017-10-24 11:15:44,460 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "5"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:44,460 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:44,460 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok 5.], latest_moves: OpenQueue([#, Move(answer(say_step("5")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 11:15:44,461 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok 5.], latest_moves: OpenQueue([#, Move(answer(say_step("5")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:15:44,461 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok 5.], latest_moves: OpenQueue([#, Move(answer(say_step("5")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:15:44,461 - session_2017-10-24T11_15_00_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7fc0c022b248>:1.0
2017-10-24 11:15:44,462 - session_2017-10-24T11_15_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:15:45,462 - session_2017-10-24T11_15_00_0 - DEBUG - Timeout fired
2017-10-24 11:15:45,462 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:15:45,462 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:15:45,462 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:15:45,462 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:15:45,463 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836545.46
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("5")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("5")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("5")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("5")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next), say_step("5"), resolved(?X.say_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(say_step("5")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:45,463 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:15:45,463 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:15:45,466 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(say_step("5")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:45,466 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:15:45,471 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(say_step("5")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(say_step("5")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:15:45,471 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:15:45,471 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:15:45,474 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:45,474 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:15:45,474 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:15:45,474 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:15:45,474 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:15:45,474 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:15:45,474 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:15:45,475 - session_2017-10-24T11_15_00_0 - INFO - BEGIN integrate_moves
2017-10-24 11:15:45,475 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:15:45,475 - session_2017-10-24T11_15_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:15:45,475 - session_2017-10-24T11_15_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:15:45,476 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:integrate
2017-10-24 11:15:45,476 - session_2017-10-24T11_15_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:15:45,476 - session_2017-10-24T11_15_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:15:45,476 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:45,476 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:45,476 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:45,476 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:15:45,476 - session_2017-10-24T11_15_00_0 - INFO - breaking out of accommodate
2017-10-24 11:15:45,476 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:15:45,476 - session_2017-10-24T11_15_00_0 - INFO - END integrate_moves
2017-10-24 11:15:45,477 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:45,480 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:15:45,480 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:45,480 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:45,483 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("5")}
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {device_activity_terminated(go_to_next), say_step("5"), resolved(?X.say_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 11:15:45,483 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:45,483 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:45,483 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:45,483 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:15:45,483 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:15:45,483 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:15:45,484 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:15:45,484 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:15:45,484 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:15:45,484 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:45,484 - session_2017-10-24T11_15_00_0 - INFO - running ISU module: select
2017-10-24 11:15:45,485 - session_2017-10-24T11_15_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc0c1956090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc0c0287250>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836545.46
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("5")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("5")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:15:45,485 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:15:45,490 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
?                                                                ^ ^^ ^^^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                ^^^^^^^^^^^^ ^^^^^ ^
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("5")}
- tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
+ tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.com: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      -------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:45,490 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_action
2017-10-24 11:15:45,493 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:15:45,493 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:45,495 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:15:45,495 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:45,498 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:15:45,498 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:15:45,499 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:select_move
2017-10-24 11:15:45,499 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:15:45,501 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:15:45,501 - session_2017-10-24T11_15_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:15:45,501 - session_2017-10-24T11_15_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:15:45,503 - session_2017-10-24T11_15_00_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 11:15:45,503 - session_2017-10-24T11_15_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:15:45,504 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:15:50,128 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:15:50,128 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(STOP, None, sender=Backend, reason=None))
2017-10-24 11:15:50,128 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:15:50,129 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:15:50,129 - session_2017-10-24T11_15_00_0 - DEBUG - InterpretModule posts Event(STOPPED, None, sender=InterpretModule, reason=None)
2017-10-24 11:15:50,129 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:15:50,129 - session_2017-10-24T11_15_00_0 - DEBUG - DmeModule posts Event(STOPPED, None, sender=DmeModule, reason=None)
2017-10-24 11:15:50,129 - session_2017-10-24T11_15_00_0 - DEBUG - DeviceManager handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:15:50,129 - session_2017-10-24T11_15_00_0 - DEBUG - DeviceManager posts Event(STOPPED, None, sender=DeviceManager, reason=None)
2017-10-24 11:15:50,129 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:15:50,129 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule posts Event(STOPPED, None, sender=GenerateModule, reason=None)
2017-10-24 11:15:50,130 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:15:50,130 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend posts Event(STOPPED, None, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:50,130 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:15:50,130 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend posts Event(STOPPED, None, sender=GuiBackend, reason=None)
2017-10-24 11:15:50,131 - session_2017-10-24T11_15_00_0 - DEBUG - CogloadModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:15:50,131 - session_2017-10-24T11_15_00_0 - DEBUG - CogloadModule posts Event(STOPPED, None, sender=CogloadModule, reason=None)
2017-10-24 11:15:50,131 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:15:50,131 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:15:50,132 - session_2017-10-24T11_15_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:15:50,132 - session_2017-10-24T11_15_00_0 - DEBUG - Sent.
2017-10-24 11:15:50,133 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 11:15:50,133 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:15:50,133 - session_2017-10-24T11_15_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:15:50,133 - session_2017-10-24T11_15_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:50,133 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:50,135 - session_2017-10-24T11_15_00_0 - DEBUG - GenerateModule ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:50,136 - session_2017-10-24T11_15_00_0 - DEBUG - IndependentGuiBackend ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:50,137 - session_2017-10-24T11_15_00_0 - DEBUG - GuiBackend ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:15:50,137 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=InterpretModule, reason=None))
2017-10-24 11:15:50,137 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=InterpretModule, reason=None)
2017-10-24 11:15:50,137 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=DmeModule, reason=None))
2017-10-24 11:15:50,137 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=DmeModule, reason=None)
2017-10-24 11:15:50,137 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=DeviceManager, reason=None))
2017-10-24 11:15:50,138 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=DeviceManager, reason=None)
2017-10-24 11:15:50,138 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=GenerateModule, reason=None))
2017-10-24 11:15:50,138 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=GenerateModule, reason=None)
2017-10-24 11:15:50,138 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:15:50,138 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:15:50,138 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=GuiBackend, reason=None))
2017-10-24 11:15:50,138 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=GuiBackend, reason=None)
2017-10-24 11:15:50,138 - session_2017-10-24T11_15_00_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=CogloadModule, reason=None))
2017-10-24 11:15:50,138 - session_2017-10-24T11_15_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=CogloadModule, reason=None)

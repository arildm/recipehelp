2017-10-24 16:53:13,949 - session_2017-10-24T16_53_13_0 - DEBUG - Backend()
2017-10-24 16:53:13,950 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.initialize()
2017-10-24 16:53:13,982 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.add_module(DmeModule, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f4837ed9c50>>, False])
2017-10-24 16:53:13,982 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.add_module(GenerateModule, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f4837ed9c50>>, 'eng'])
2017-10-24 16:53:13,983 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.add_module(DeviceManager, args=[])
2017-10-24 16:53:13,983 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.add_module(CogloadModule, args=[])
2017-10-24 16:53:13,983 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(IDLE, __init__) (previous state was None)
2017-10-24 16:53:13,983 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.add_module(GuiBackend, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f4837ed9c50>>, True, 'disabled'])
2017-10-24 16:53:13,983 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.add_module(IndependentGuiBackend, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f4837ed9c50>>])
2017-10-24 16:53:13,983 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.add_module(InterpretModule, args=[<bound method Backend.get_device_manager of <tdm.backend.Backend object at 0x7f4837ed9c50>>, <bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f4837ed9c50>>, 'eng', False, True])
2017-10-24 16:53:13,983 - session_2017-10-24T16_53_13_0 - DEBUG - Backend initialized
2017-10-24 16:53:13,983 - session_2017-10-24T16_53_13_0 - DEBUG - Backend started in directory '/home/gusmatssar/recipedialogue/tdm'
2017-10-24 16:53:13,983 - session_2017-10-24T16_53_13_0 - DEBUG - Backend uses TDM version '5.0.0'
2017-10-24 16:53:13,983 - session_2017-10-24T16_53_13_0 - DEBUG - Backend uses backend config {u'active_ddd': u'recipehelp', u'ddds': [u'recipehelp'], u'asr': u'none', u'use_recognition_profile': False, u'use_word_list_correction': False, u'supported_languages': [u'eng'], u'repeat_questions': False}
2017-10-24 16:53:13,983 - session_2017-10-24T16_53_13_0 - DEBUG - Backend uses language 'eng'
2017-10-24 16:53:13,984 - session_2017-10-24T16_53_13_0 - DEBUG - running module InterpretModule
2017-10-24 16:53:13,984 - session_2017-10-24T16_53_13_0 - DEBUG - running module DmeModule
2017-10-24 16:53:13,985 - session_2017-10-24T16_53_13_0 - DEBUG - running module DeviceManager
2017-10-24 16:53:13,985 - session_2017-10-24T16_53_13_0 - DEBUG - running module GenerateModule
2017-10-24 16:53:13,985 - session_2017-10-24T16_53_13_0 - DEBUG - running module IndependentGuiBackend
2017-10-24 16:53:13,986 - session_2017-10-24T16_53_13_0 - DEBUG - running module GuiBackend
2017-10-24 16:53:13,986 - session_2017-10-24T16_53_13_0 - DEBUG - running module CogloadModule
2017-10-24 16:53:13,986 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:53:13,986 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:53:13,987 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(REGISTER_BACKEND, None, sender=Backend, reason=None))
2017-10-24 16:53:13,987 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(REGISTER_BACKEND, None, sender=Backend, reason=None)
2017-10-24 16:53:13,987 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "Backend", "_reason": null, "event_type": "REGISTER_BACKEND"}
2017-10-24 16:53:13,988 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:13,989 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:53:14,019 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend received event {"content": null, "_sender": "Frontend", "_reason": null, "event_type": "FRONTEND_READY"}
2017-10-24 16:53:14,020 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:53:14,020 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(FRONTEND_READY, None, sender=Frontend, reason=None))
2017-10-24 16:53:14,021 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(FRONTEND_READY, None, sender=Frontend, reason=None)
2017-10-24 16:53:14,021 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(BACKEND_READY, None, sender=Backend, reason=None))
2017-10-24 16:53:14,021 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(BACKEND_READY, None, sender=Backend, reason=None)
2017-10-24 16:53:14,021 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "Backend", "_reason": null, "event_type": "BACKEND_READY"}
2017-10-24 16:53:14,021 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:14,022 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:53:14,027 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend received event {"content": null, "_sender": "Frontend", "_reason": null, "event_type": "START"}
2017-10-24 16:53:14,028 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:53:14,028 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(START, None, sender=Frontend, reason=None))
2017-10-24 16:53:14,028 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:53:14,029 - session_2017-10-24T16_53_13_0 - DEBUG - InterpretModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:53:14,029 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:53:14,029 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 16:53:14,029 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: update (Event(START, None, sender=Frontend, reason=None))
2017-10-24 16:53:14,030 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856794.03
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(START, None, sender=Frontend, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: None
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([do(top)])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: None
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:14,030 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:14,030 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:53:14,030 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:53:14,033 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:14,033 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:53:14,033 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:53:14,035 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:14,035 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:53:14,035 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:53:14,035 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:53:14,035 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:53:14,036 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:53:14,036 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:53:14,036 - session_2017-10-24T16_53_13_0 - INFO - BEGIN integrate_moves
2017-10-24 16:53:14,036 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:53:14,036 - session_2017-10-24T16_53_13_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:53:14,036 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:53:14,036 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:14,036 - session_2017-10-24T16_53_13_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:53:14,036 - session_2017-10-24T16_53_13_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:53:14,036 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:14,036 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:14,037 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:14,037 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:53:14,037 - session_2017-10-24T16_53_13_0 - INFO - breaking out of accommodate
2017-10-24 16:53:14,037 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:14,037 - session_2017-10-24T16_53_13_0 - INFO - END integrate_moves
2017-10-24 16:53:14,037 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:14,038 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:14,040 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([do(top)])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 16:53:14,040 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:14,042 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 16:53:14,043 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:14,043 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:14,043 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:14,043 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:53:14,043 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:14,043 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:14,044 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:14,044 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:14,044 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:53:14,044 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:53:14,044 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: select
2017-10-24 16:53:14,045 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856794.03
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(START, None, sender=Frontend, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: None
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: None
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:14,045 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:53:14,049 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.goals: stackset([])
+ tis.private.tmp.sys.goals: stackset([perform(top)])
?                                      ++++++++++++
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:53:14,049 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:14,052 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.goal(X))])
?                                                                  +++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:53:14,052 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:14,055 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
?                                       +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.goal(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 16:53:14,055 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:14,057 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
?                                                              +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:53:14,057 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:14,058 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:14,058 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:53:14,060 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:14,060 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:53:14,060 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:53:14,062 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: None
?                       ^^^^
+ tis.timeout.duration: 5.0
?                       ^^^
-- END TIS changes --
2017-10-24 16:53:14,062 - session_2017-10-24T16_53_13_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 16:53:14,062 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None))
2017-10-24 16:53:14,062 - session_2017-10-24T16_53_13_0 - DEBUG - DeviceManager handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:53:14,063 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:53:14,063 - session_2017-10-24T16_53_13_0 - DEBUG - IndependentGuiBackend handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:53:14,063 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:53:14,063 - session_2017-10-24T16_53_13_0 - DEBUG - CogloadModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:53:14,063 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None))
2017-10-24 16:53:14,063 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 16:53:14,064 - session_2017-10-24T16_53_13_0 - DEBUG - IndependentGuiBackend handles Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 16:53:14,064 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend handles Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 16:53:14,064 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": {"ddd_name": "recipehelp", "language_code": "eng"}, "_sender": "DmeModule", "_reason": null, "event_type": "SET_DDD"}
2017-10-24 16:53:14,065 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:14,065 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:53:14,065 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:53:14,065 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:53:14,066 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:14,066 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None)))
2017-10-24 16:53:14,067 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None))
2017-10-24 16:53:14,067 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:53:14,067 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:14,067 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:14,068 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:14,068 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 16:53:14,068 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 16:53:14,068 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 16:53:14,068 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:53:14,068 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 16:53:14,069 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 16:53:14,069 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:53:14,069 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 16:53:14,070 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 16:53:14,070 - session_2017-10-24T16_53_13_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:14,072 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:14,072 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:53:14,072 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 16:53:14,072 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 16:53:14,073 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 16:53:14,073 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 16:53:14,073 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:53:14,073 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend generated message []
2017-10-24 16:53:14,073 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 16:53:14,073 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posted event
2017-10-24 16:53:14,073 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 16:53:14,074 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 16:53:14,074 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:53:14,074 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:14,074 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 16:53:14,074 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 16:53:14,074 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:53:14,075 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:14,075 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:53:14,117 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend received event {"content": ["", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:53:14,117 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:53:14,117 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 16:53:14,118 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 16:53:14,118 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:53:14,118 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:53:14,118 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:53:14,118 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:53:14,118 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 16:53:14,119 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856794.12
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:14,119 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:14,120 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:53:14,120 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:53:14,123 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: None
?                        ^^^^
+ tis.shared.lu.speaker: SYS
?                        ^^^
-- END TIS changes --
2017-10-24 16:53:14,123 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:53:14,123 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:53:14,125 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:14,125 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:53:14,126 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:53:14,126 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:53:14,126 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:53:14,126 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:53:14,126 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:53:14,126 - session_2017-10-24T16_53_13_0 - INFO - BEGIN integrate_moves
2017-10-24 16:53:14,126 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:53:14,126 - session_2017-10-24T16_53_13_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:53:14,126 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:53:14,126 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:14,130 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:53:14,130 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:14,130 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:14,130 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:14,130 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:14,130 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:14,133 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 16:53:14,133 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:14,133 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:14,133 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:14,133 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:14,134 - session_2017-10-24T16_53_13_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:53:14,134 - session_2017-10-24T16_53_13_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:53:14,134 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:14,134 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:14,135 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:14,135 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:53:14,135 - session_2017-10-24T16_53_13_0 - INFO - breaking out of accommodate
2017-10-24 16:53:14,135 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:14,135 - session_2017-10-24T16_53_13_0 - INFO - END integrate_moves
2017-10-24 16:53:14,135 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:14,135 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:14,135 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:53:14,135 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:14,136 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:14,136 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:14,136 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:14,136 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:53:14,138 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:14,138 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:53:14,138 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:53:14,138 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:53:14,138 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:53:14,139 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:53:14,139 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:14,139 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:53:14,140 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:53:14,140 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:53:14,140 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:53:17,963 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to a step"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:53:17,963 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:53:17,963 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None))
2017-10-24 16:53:17,964 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 16:53:17,964 - session_2017-10-24T16_53_13_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 16:53:17,964 - session_2017-10-24T16_53_13_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to a step"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:53:17,964 - session_2017-10-24T16_53_13_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:53:17,970 - session_2017-10-24T16_53_13_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:53:17,970 - session_2017-10-24T16_53_13_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])} for DDD 'recipehelp'
2017-10-24 16:53:17,970 - session_2017-10-24T16_53_13_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
2017-10-24 16:53:17,970 - session_2017-10-24T16_53_13_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:53:17,971 - session_2017-10-24T16_53_13_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AskMove": {"_type": "ask", "_ddd_name": "recipehelp", "_content": {"445f2b7f7189027ce75dac332c96dde0.WhQuestion": {"_type": "WHQ", "_content": {"24b0f339529d53d987534676834bafa7.LambdaAbstractedPredicateProposition": {"_ontology_name": "RecipehelpOntology", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.BuiltinSort": {"_dynamic": false, "_name": "string"}}, "name": "go_to_step", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to a step", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to a step"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to a step", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:53:17,971 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 16:53:17,971 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:53:17,971 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:53:17,971 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:53:17,971 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:53:17,971 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 16:53:17,972 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:17,972 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 16:53:17,972 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:53:17,973 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:53:17,974 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:53:17,974 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:53:17,975 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856797.97
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:17,975 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:17,979 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
-- END TIS changes --
2017-10-24 16:53:17,979 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:17,983 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                 ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                 ^
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
?                                                                                                                                ^
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
?                                                                                                                                ^
-- END TIS changes --
2017-10-24 16:53:17,983 - session_2017-10-24T16_53_13_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:53:17,983 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:53:17,987 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
?                                 -----------------------------------------------              ^^                                       ^^                              ^
+ tis.latest_moves: OpenQueue([#, Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')])
?                                               ^^^^^^^^                                      + ^                              ^                 +++++++++++++++++++++++++++
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 16:53:17,987 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:53:17,992 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:53:17,992 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:53:17,992 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:53:17,994 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:17,994 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:53:17,994 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:53:17,998 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([])
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
- tis.private.tmp.usr.plan: Stack([])
+ tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
- tis.private.tmp.usr.qud: stackset([])
+ tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                    ++++++++++
-- END TIS changes --
2017-10-24 16:53:17,998 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:53:17,998 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:53:17,999 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:53:17,999 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:53:17,999 - session_2017-10-24T16_53_13_0 - INFO - BEGIN integrate_moves
2017-10-24 16:53:17,999 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
2017-10-24 16:53:17,999 - session_2017-10-24T16_53_13_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:53:17,999 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
2017-10-24 16:53:17,999 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:18,002 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateUsrAsk
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
- tis.private.nim: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
- tis.shared.qud: stackset([?X.goal(X)])
+ tis.shared.qud: stackset([?X.go_to_step(X), ?X.goal(X)])
?                                ++++++++++++++++++
-- END TIS changes --
2017-10-24 16:53:18,003 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:18,003 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:18,006 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: downdateISSUES2
-- BEGIN TIS changes --
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                                                        --------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 16:53:18,006 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:18,006 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:18,009 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: findIssuePlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                                                   - ^ ^ -----------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^ ^^
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 16:53:18,009 - session_2017-10-24T16_53_13_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:53:18,010 - session_2017-10-24T16_53_13_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:53:18,010 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:18,010 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:18,010 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:18,010 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:53:18,010 - session_2017-10-24T16_53_13_0 - INFO - breaking out of accommodate
2017-10-24 16:53:18,010 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:18,010 - session_2017-10-24T16_53_13_0 - INFO - END integrate_moves
2017-10-24 16:53:18,010 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:18,011 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:18,011 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:53:18,013 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.go_to_step(X), ?X.goal(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:53:18,013 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:18,013 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:18,014 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:18,014 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:18,014 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:53:18,014 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None)
2017-10-24 16:53:18,014 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:53:18,014 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: select
2017-10-24 16:53:18,015 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856797.97
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:18,016 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:53:18,020 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                ++++++++++++++++++++++++++++++++
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                                      +++++++++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
+ tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 16:53:18,020 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:18,023 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                                                                                  +++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:53:18,023 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:18,027 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
-- END TIS changes --
2017-10-24 16:53:18,027 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:18,028 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:18,031 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.step_to_choose(X))])
-- END TIS changes --
2017-10-24 16:53:18,032 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:18,036 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
?                                                                                    +++++++++++++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.step_to_choose(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:53:18,036 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:18,036 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:18,037 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:53:18,040 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:18,040 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:53:18,040 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:53:18,042 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:18,043 - session_2017-10-24T16_53_13_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')])
2017-10-24 16:53:18,043 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:53:18,043 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None))
2017-10-24 16:53:18,043 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None)
2017-10-24 16:53:18,044 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to a step", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:53:18,044 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:18,045 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:53:18,045 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:53:18,045 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:53:18,046 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:18,046 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:53:18,046 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:53:18,047 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:53:18,047 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:18,047 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:18,049 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:18,049 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={})
2017-10-24 16:53:18,049 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:53:18,049 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 16:53:18,049 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 16:53:18,050 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 16:53:18,050 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 16:53:18,050 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:53:18,050 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:53:18,050 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 16:53:18,050 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 16:53:18,051 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 16:53:18,051 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Move Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp') generated as u'Which step?'
2017-10-24 16:53:18,051 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None)
2017-10-24 16:53:18,053 - session_2017-10-24T16_53_13_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:18,055 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:18,056 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:53:18,057 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')])
2017-10-24 16:53:18,057 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={})
2017-10-24 16:53:18,057 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:53:18,058 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 16:53:18,058 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 16:53:18,058 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 16:53:18,058 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 16:53:18,059 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend generated message []
2017-10-24 16:53:18,059 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 16:53:18,059 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posted event
2017-10-24 16:53:18,060 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None))
2017-10-24 16:53:18,060 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None)
2017-10-24 16:53:18,060 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "", "Which step?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:53:18,060 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:18,061 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 16:53:18,061 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 16:53:18,061 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:53:18,062 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:18,062 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:53:18,065 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend received event {"content": ["", "", "Which step?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:53:18,065 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:53:18,065 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, , Which step?], sender=TextOutputComponent, reason=None))
2017-10-24 16:53:18,066 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, , Which step?], sender=TextOutputComponent, reason=None)
2017-10-24 16:53:18,066 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:53:18,066 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 16:53:18,066 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 16:53:18,066 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 16:53:18,067 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None))
2017-10-24 16:53:18,068 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856798.07
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:18,068 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:18,068 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:53:18,068 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:53:18,075 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
?            ^^
- tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:53:18,075 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:53:18,075 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:53:18,078 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:18,078 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:53:18,078 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:53:18,078 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:53:18,078 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:53:18,078 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:53:18,078 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:53:18,078 - session_2017-10-24T16_53_13_0 - INFO - BEGIN integrate_moves
2017-10-24 16:53:18,078 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:53:18,078 - session_2017-10-24T16_53_13_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:53:18,079 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:53:18,079 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:18,083 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:53:18,083 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:18,083 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:18,084 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:18,084 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:18,084 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:18,087 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
?                                                                       +++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:53:18,087 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:18,088 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:18,088 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:18,088 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:18,088 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:18,091 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.step_to_choose(X)])
-- END TIS changes --
2017-10-24 16:53:18,091 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:18,091 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:18,092 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:18,092 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:18,092 - session_2017-10-24T16_53_13_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:53:18,092 - session_2017-10-24T16_53_13_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:53:18,092 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:18,092 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:18,092 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:18,092 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:53:18,092 - session_2017-10-24T16_53_13_0 - INFO - breaking out of accommodate
2017-10-24 16:53:18,093 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:18,093 - session_2017-10-24T16_53_13_0 - INFO - END integrate_moves
2017-10-24 16:53:18,093 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:18,093 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:18,093 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:53:18,093 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:18,093 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:18,094 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:18,094 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:18,094 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:53:18,096 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:18,096 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:53:18,097 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:53:18,097 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:53:18,097 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:53:18,097 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:53:18,097 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:18,098 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:53:18,098 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:53:18,098 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:53:18,098 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:53:23,323 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "step one"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:53:23,324 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:53:23,324 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None))
2017-10-24 16:53:23,324 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 16:53:23,324 - session_2017-10-24T16_53_13_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 16:53:23,324 - session_2017-10-24T16_53_13_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "step one"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:53:23,324 - session_2017-10-24T16_53_13_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:53:23,326 - session_2017-10-24T16_53_13_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:53:23,326 - session_2017-10-24T16_53_13_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])} for DDD 'recipehelp'
2017-10-24 16:53:23,326 - session_2017-10-24T16_53_13_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
2017-10-24 16:53:23,326 - session_2017-10-24T16_53_13_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:53:23,327 - session_2017-10-24T16_53_13_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "step one"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "step one", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.CustomSort": {"_ontology_name": "RecipehelpOntology", "_dynamic": false, "_name": "step"}}, "value": "step1"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "step one", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:53:23,327 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 16:53:23,327 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:53:23,327 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:53:23,327 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:53:23,327 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:53:23,327 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 16:53:23,328 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:23,328 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 16:53:23,328 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:53:23,329 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:53:23,329 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:53:23,329 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:53:23,331 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856803.33
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.step_to_choose(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:23,331 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:23,335 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
-- END TIS changes --
2017-10-24 16:53:23,335 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:23,339 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
- tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
-- END TIS changes --
2017-10-24 16:53:23,344 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^^
-- END TIS changes --
2017-10-24 16:53:23,345 - session_2017-10-24T16_53_13_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:53:23,345 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:53:23,348 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')])
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 16:53:23,348 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:53:23,352 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
-- END TIS changes --
2017-10-24 16:53:23,352 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:53:23,352 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:53:23,355 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:23,355 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:53:23,355 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:53:23,360 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                                        ^^
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                                                      +++++++++++++++++++++++++++++++  ^^^^^^^^
- tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
+ tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
- tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                       ^ ^^
+ tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
?                                       ^^^^^^ ^^^^^^^
-- END TIS changes --
2017-10-24 16:53:23,360 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:53:23,361 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:53:23,361 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:53:23,361 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:53:23,361 - session_2017-10-24T16_53_13_0 - INFO - BEGIN integrate_moves
2017-10-24 16:53:23,361 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
2017-10-24 16:53:23,361 - session_2017-10-24T16_53_13_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:53:23,361 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
2017-10-24 16:53:23,361 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:23,365 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {step_to_choose(step1)}
- tis.shared.com: {}
+ tis.shared.com: {step_to_choose(step1)}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
-- END TIS changes --
2017-10-24 16:53:23,365 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:23,365 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:23,369 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {step_to_choose(step1)}
+ tis.shared.com: {step_to_choose(step1), resolved(?X.step_to_choose(X))}
- tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ------------------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 16:53:23,370 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:23,374 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
?                          -------------------------------
+ tis.private.plan: Stack([device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 16:53:23,374 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:23,374 - session_2017-10-24T16_53_13_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:53:23,375 - session_2017-10-24T16_53_13_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:53:23,375 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:23,375 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:23,375 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:23,375 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:53:23,375 - session_2017-10-24T16_53_13_0 - INFO - breaking out of accommodate
2017-10-24 16:53:23,375 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:23,375 - session_2017-10-24T16_53_13_0 - INFO - END integrate_moves
2017-10-24 16:53:23,375 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:23,379 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {}
+ tis.private.bel: {go_to_step("chose step1")}
- tis.private.plan: Stack([device_query(?X.go_to_step(X)), forget(step_to_choose)])
?                          --------------------------------
+ tis.private.plan: Stack([forget(step_to_choose)])
-- END TIS changes --
2017-10-24 16:53:23,379 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:23,380 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:23,382 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(step_to_choose)])
+ tis.private.plan: Stack([])
- tis.shared.com: {step_to_choose(step1), resolved(?X.step_to_choose(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 16:53:23,382 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:23,383 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:23,383 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:23,383 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:53:23,386 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.step_to_choose(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:53:23,386 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:23,386 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:23,386 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:23,387 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:23,387 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:53:23,387 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 16:53:23,387 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None)
2017-10-24 16:53:23,387 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None)
2017-10-24 16:53:23,387 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: select
2017-10-24 16:53:23,388 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856803.33
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')])
tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.bel: {go_to_step("chose step1")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:23,388 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:53:23,392 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                         ---------------------------------
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.bel: {go_to_step("chose step1")}
- tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 16:53:23,392 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:23,395 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                                                 +++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:53:23,396 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:23,398 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
-- END TIS changes --
2017-10-24 16:53:23,399 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:23,401 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose step1")))])
- tis.private.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:53:23,401 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:23,402 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:23,402 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:53:23,404 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:23,404 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:53:23,404 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:53:23,407 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:53:23,407 - session_2017-10-24T16_53_13_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')])
2017-10-24 16:53:23,407 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose step1")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:53:23,407 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None))
2017-10-24 16:53:23,408 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 16:53:23,408 - session_2017-10-24T16_53_13_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 16:53:23,408 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None))
2017-10-24 16:53:23,408 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None)
2017-10-24 16:53:23,408 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": "step one", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:53:23,409 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:23,409 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None))
2017-10-24 16:53:23,409 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None)
2017-10-24 16:53:23,409 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "go_to_step", "grammar_entry": null, "value": "chose step1"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:53:23,410 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:23,410 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose step1")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:53:23,410 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose step1")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:53:23,411 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:53:23,411 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose step1")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:23,411 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose step1")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:23,413 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose step1")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:23,413 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp'), facts={go_to_step("chose step1")})
2017-10-24 16:53:23,413 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')
2017-10-24 16:53:23,414 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')
2017-10-24 16:53:23,414 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Move Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp') generated as u'Ok chose step1.'
2017-10-24 16:53:23,415 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose step1.], sender=GenerateModule, reason=None)
2017-10-24 16:53:23,417 - session_2017-10-24T16_53_13_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose step1")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:23,418 - session_2017-10-24T16_53_13_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok chose step1.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:53:23,420 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose step1")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:23,420 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:53:23,420 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')])
2017-10-24 16:53:23,420 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp'), facts={go_to_step("chose step1")})
2017-10-24 16:53:23,420 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')
2017-10-24 16:53:23,421 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.Popup instance at 0x7f48357831b8>]
2017-10-24 16:53:23,421 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f48357831b8>], sender=GuiBackend, reason=None)
2017-10-24 16:53:23,421 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posted event
2017-10-24 16:53:23,421 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose step1.], sender=GenerateModule, reason=None))
2017-10-24 16:53:23,422 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose step1.], sender=GenerateModule, reason=None)
2017-10-24 16:53:23,422 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok chose step1."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:53:23,422 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:23,422 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok chose step1.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:53:23,422 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok chose step1.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:53:23,423 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok chose step1."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:53:23,423 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:23,424 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f48357831b8>], sender=GuiBackend, reason=None))
2017-10-24 16:53:23,424 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f48357831b8>], sender=GuiBackend, reason=None)
2017-10-24 16:53:23,424 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok chose step1."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:53:23,425 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:23,425 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:53:23,429 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok chose step1."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:53:23,430 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:53:23,430 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok chose step1.], sender=TextOutputComponent, reason=None))
2017-10-24 16:53:23,430 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok chose step1.], sender=TextOutputComponent, reason=None)
2017-10-24 16:53:23,430 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:53:23,430 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok chose step1.], sender=TurnManager, reason=None)
2017-10-24 16:53:23,430 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok chose step1.], sender=TurnManager, reason=None)
2017-10-24 16:53:23,431 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok chose step1.], sender=TurnManager, reason=None)
2017-10-24 16:53:23,431 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok chose step1.], sender=TurnManager, reason=None))
2017-10-24 16:53:23,433 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856803.43
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok chose step1.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose step1")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {go_to_step("chose step1")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose step1")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:23,433 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:23,433 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:53:23,433 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:53:23,440 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
?            ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:53:23,440 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:53:23,440 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:53:23,443 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:23,443 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:53:23,443 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:53:23,443 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:53:23,443 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:53:23,443 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:53:23,443 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:53:23,443 - session_2017-10-24T16_53_13_0 - INFO - BEGIN integrate_moves
2017-10-24 16:53:23,443 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:53:23,443 - session_2017-10-24T16_53_13_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:53:23,444 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:53:23,444 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:23,447 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {go_to_step("chose step1")}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:53:23,447 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:23,447 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:23,450 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {go_to_step("chose step1")}
+ tis.shared.com: {go_to_step("chose step1"), resolved(?X.go_to_step(X))}
?                                           ++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                             ---------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 16:53:23,451 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:23,451 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:23,451 - session_2017-10-24T16_53_13_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:53:23,451 - session_2017-10-24T16_53_13_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:53:23,451 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:23,451 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:23,451 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:23,451 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:53:23,451 - session_2017-10-24T16_53_13_0 - INFO - breaking out of accommodate
2017-10-24 16:53:23,451 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:23,451 - session_2017-10-24T16_53_13_0 - INFO - END integrate_moves
2017-10-24 16:53:23,451 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:23,452 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:23,452 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:53:23,452 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:23,452 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:23,452 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:23,452 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:23,452 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:53:23,455 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:53:23,455 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None)
2017-10-24 16:53:23,456 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok chose step1.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:53:23,456 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None))
2017-10-24 16:53:23,456 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None)
2017-10-24 16:53:23,456 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "go_to_step", "grammar_entry": null, "value": "chose step1"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:53:23,456 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:23,457 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok chose step1.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 16:53:23,457 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok chose step1.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:53:23,457 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok chose step1.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:53:23,458 - session_2017-10-24T16_53_13_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f483578e050>:1.0
2017-10-24 16:53:23,458 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:53:24,458 - session_2017-10-24T16_53_13_0 - DEBUG - Timeout fired
2017-10-24 16:53:24,458 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:53:24,458 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:53:24,458 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:53:24,458 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:53:24,459 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856804.46
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose step1")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {go_to_step("chose step1")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose step1")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {go_to_step("chose step1"), resolved(?X.go_to_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:24,460 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:24,460 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:53:24,462 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:53:24,462 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:53:24,466 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
-- END TIS changes --
2017-10-24 16:53:24,466 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:53:24,467 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:53:24,469 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:24,469 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:53:24,469 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:53:24,469 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:53:24,469 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:53:24,469 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:53:24,469 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:53:24,469 - session_2017-10-24T16_53_13_0 - INFO - BEGIN integrate_moves
2017-10-24 16:53:24,470 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:53:24,470 - session_2017-10-24T16_53_13_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:53:24,470 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:53:24,470 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:24,470 - session_2017-10-24T16_53_13_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:53:24,470 - session_2017-10-24T16_53_13_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:53:24,470 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:24,470 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:24,470 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:24,470 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:53:24,471 - session_2017-10-24T16_53_13_0 - INFO - breaking out of accommodate
2017-10-24 16:53:24,471 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:24,471 - session_2017-10-24T16_53_13_0 - INFO - END integrate_moves
2017-10-24 16:53:24,471 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:24,474 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 16:53:24,474 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:24,474 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:24,477 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {go_to_step("chose step1")}
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {go_to_step("chose step1"), resolved(?X.go_to_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 16:53:24,477 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:24,477 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:24,477 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:24,477 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:53:24,477 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:24,478 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:24,478 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:24,478 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:24,478 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:53:24,478 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:53:24,478 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: select
2017-10-24 16:53:24,479 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856804.46
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose step1")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:24,479 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:53:24,485 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^  ^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                +++ ^^^^ +++ ^^^^^^^
- tis.private.tmp.sys.bel: {go_to_step("chose step1")}
+ tis.private.tmp.sys.bel: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                                      ---------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:53:24,485 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:24,488 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:53:24,488 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:24,490 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 16:53:24,490 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:24,493 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:53:24,494 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:24,494 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:24,494 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:53:24,496 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:24,496 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:53:24,496 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:53:24,499 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:53:24,499 - session_2017-10-24T16_53_13_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 16:53:24,499 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:53:28,104 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go back"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:53:28,105 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:53:28,105 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go back}], sender=TextInputComponent, reason=None))
2017-10-24 16:53:28,105 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go back}], sender=TextInputComponent, reason=None)
2017-10-24 16:53:28,105 - session_2017-10-24T16_53_13_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go back}], sender=TextInputComponent, reason=None)
2017-10-24 16:53:28,105 - session_2017-10-24T16_53_13_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go back"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:53:28,105 - session_2017-10-24T16_53_13_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:53:28,107 - session_2017-10-24T16_53_13_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:53:28,107 - session_2017-10-24T16_53_13_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])} for DDD 'recipehelp'
2017-10-24 16:53:28,107 - session_2017-10-24T16_53_13_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
2017-10-24 16:53:28,107 - session_2017-10-24T16_53_13_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:53:28,108 - session_2017-10-24T16_53_13_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go back"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go back", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_back"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go back", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:53:28,108 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go back}], sender=TextInputComponent, reason=None)
2017-10-24 16:53:28,108 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:53:28,108 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:53:28,108 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:53:28,109 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:28,110 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 16:53:28,110 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:53:28,110 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:53:28,110 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,110 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,111 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,111 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 16:53:28,111 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 16:53:28,112 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 16:53:28,112 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:53:28,112 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 16:53:28,112 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 16:53:28,112 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:53:28,113 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 16:53:28,113 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 16:53:28,114 - session_2017-10-24T16_53_13_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,115 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,115 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:53:28,115 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 16:53:28,115 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 16:53:28,116 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 16:53:28,116 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 16:53:28,116 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:53:28,116 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f48357a2a28>]
2017-10-24 16:53:28,116 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f48357a2a28>], sender=GuiBackend, reason=None)
2017-10-24 16:53:28,116 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posted event
2017-10-24 16:53:28,116 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:53:28,117 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:53:28,117 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:53:28,117 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:53:28,117 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 16:53:28,118 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:28,118 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 16:53:28,118 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 16:53:28,118 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:53:28,119 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:28,119 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f48357a2a28>], sender=GuiBackend, reason=None))
2017-10-24 16:53:28,119 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f48357a2a28>], sender=GuiBackend, reason=None)
2017-10-24 16:53:28,120 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:53:28,120 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:28,120 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:53:28,144 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:53:28,145 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:53:28,145 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 16:53:28,145 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 16:53:28,145 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:53:28,146 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:53:28,146 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:53:28,146 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:53:28,146 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 16:53:28,147 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856808.15
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:28,147 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:28,148 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:53:28,148 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:53:28,153 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:53:28,153 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:53:28,153 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:53:28,156 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:28,156 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:53:28,156 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:53:28,156 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:53:28,156 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:53:28,156 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:53:28,156 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:53:28,156 - session_2017-10-24T16_53_13_0 - INFO - BEGIN integrate_moves
2017-10-24 16:53:28,156 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:53:28,156 - session_2017-10-24T16_53_13_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:53:28,157 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:53:28,157 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:28,160 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:53:28,160 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:28,160 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:28,160 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:28,160 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,161 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:28,164 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 16:53:28,165 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:28,165 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:28,165 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:28,165 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,165 - session_2017-10-24T16_53_13_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:53:28,165 - session_2017-10-24T16_53_13_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:53:28,165 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:28,165 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:28,165 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:28,166 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:53:28,166 - session_2017-10-24T16_53_13_0 - INFO - breaking out of accommodate
2017-10-24 16:53:28,166 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:28,166 - session_2017-10-24T16_53_13_0 - INFO - END integrate_moves
2017-10-24 16:53:28,166 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:28,166 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,166 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:53:28,166 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:28,166 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:28,167 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,167 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:28,167 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:53:28,169 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 16:53:28,169 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:53:28,169 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:53:28,170 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:53:28,170 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:53:28,170 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:53:28,170 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:28,171 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:53:28,171 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:53:28,171 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:53:28,171 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,172 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,172 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,172 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:53:28,173 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856808.17
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:28,173 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:28,177 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
-- END TIS changes --
2017-10-24 16:53:28,177 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:28,181 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                            ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                            ^
- tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
?                                                                                                                           ^
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}
?                                                                                                                           ^
-- END TIS changes --
2017-10-24 16:53:28,182 - session_2017-10-24T16_53_13_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:53:28,182 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:53:28,187 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 16:53:28,187 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:53:28,194 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:53:28,195 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:53:28,195 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:53:28,198 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:28,198 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:53:28,198 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:53:28,203 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                                                      -------------------------------  ^^^^^^^^
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                                        ^^
- tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
+ tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
- tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
?                                       ^^^^^^ ^^^^^^^
+ tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                       ^ ^^
-- END TIS changes --
2017-10-24 16:53:28,203 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:53:28,203 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:53:28,203 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:53:28,204 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:53:28,204 - session_2017-10-24T16_53_13_0 - INFO - BEGIN integrate_moves
2017-10-24 16:53:28,204 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])
2017-10-24 16:53:28,204 - session_2017-10-24T16_53_13_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:53:28,204 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])
2017-10-24 16:53:28,204 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:28,208 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateUsrRequest
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])
+ tis.private.nim: OpenQueue([#])
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([do(go_back), findout(?X.goal(X))])
?                          +++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([perform(go_back), resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back')}
-- END TIS changes --
2017-10-24 16:53:28,208 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:28,208 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:28,211 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: downdateISSUES3
-- BEGIN TIS changes --
- tis.shared.goals: stackset([perform(go_back), resolve_user(?X.goal(X)), perform(top)])
?                                               --------------------------
+ tis.shared.goals: stackset([perform(go_back), perform(top)])
-- END TIS changes --
2017-10-24 16:53:28,211 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:28,211 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,213 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.plan: Stack([do(go_back), findout(?X.goal(X))])
+ tis.private.plan: Stack([dev_perform(go_back, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
-- END TIS changes --
2017-10-24 16:53:28,214 - session_2017-10-24T16_53_13_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:53:28,214 - session_2017-10-24T16_53_13_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:53:28,214 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:28,214 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:28,214 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:28,214 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:53:28,214 - session_2017-10-24T16_53_13_0 - INFO - breaking out of accommodate
2017-10-24 16:53:28,214 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:28,214 - session_2017-10-24T16_53_13_0 - INFO - END integrate_moves
2017-10-24 16:53:28,214 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:28,217 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.bel: {}
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
+ tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
- tis.private.plan: Stack([dev_perform(go_back, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:53:28,217 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,218 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:28,218 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,218 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:53:28,220 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.goal(X)])
?                           ----------
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:53:28,220 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:28,221 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:28,221 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,221 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:28,221 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:53:28,221 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go back, sender=DmeModule, reason=None)
2017-10-24 16:53:28,221 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:53:28,221 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: select
2017-10-24 16:53:28,222 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856808.17
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back')])
tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_back), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:28,222 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:53:28,227 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([perform(go_back), perform(top)])
?                                              ++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 16:53:28,227 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:28,230 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_back, [], True, None))])
-- END TIS changes --
2017-10-24 16:53:28,230 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:28,233 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_back, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:53:28,233 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:28,233 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:28,233 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:53:28,236 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:28,236 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:53:28,236 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:53:28,238 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:53:28,239 - session_2017-10-24T16_53_13_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:53:28,239 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), top_perform_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:53:28,239 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go back, sender=DmeModule, reason=None))
2017-10-24 16:53:28,239 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go back, sender=DmeModule, reason=None)
2017-10-24 16:53:28,239 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": "go back", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:53:28,240 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:28,240 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:53:28,240 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:53:28,240 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:53:28,241 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:28,241 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), top_perform_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:53:28,242 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), top_perform_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:53:28,242 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:53:28,242 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), top_perform_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,243 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), top_perform_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,244 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,244 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)})
2017-10-24 16:53:28,244 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:53:28,244 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)})
2017-10-24 16:53:28,244 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:53:28,244 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:53:28,244 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:53:28,245 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:53:28,245 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp') generated as u'Went to the previous step'
2017-10-24 16:53:28,245 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to the previous step], sender=GenerateModule, reason=None)
2017-10-24 16:53:28,246 - session_2017-10-24T16_53_13_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,247 - session_2017-10-24T16_53_13_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Went to the previous step}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:53:28,248 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,248 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:53:28,248 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:53:28,248 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)})
2017-10-24 16:53:28,248 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:53:28,248 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)})
2017-10-24 16:53:28,248 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:53:28,249 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f4837ee4368>, <tdm.tdm_gui_protocol.Popup instance at 0x7f483579de60>]
2017-10-24 16:53:28,249 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f4837ee4368>, <tdm.tdm_gui_protocol.Popup instance at 0x7f483579de60>], sender=GuiBackend, reason=None)
2017-10-24 16:53:28,249 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posted event
2017-10-24 16:53:28,249 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to the previous step], sender=GenerateModule, reason=None))
2017-10-24 16:53:28,249 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to the previous step], sender=GenerateModule, reason=None)
2017-10-24 16:53:28,249 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Went to the previous step"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:53:28,250 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:28,250 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Went to the previous step}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:53:28,250 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Went to the previous step}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:53:28,250 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Went to the previous step"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:53:28,251 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:28,251 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f4837ee4368>, <tdm.tdm_gui_protocol.Popup instance at 0x7f483579de60>], sender=GuiBackend, reason=None))
2017-10-24 16:53:28,251 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f4837ee4368>, <tdm.tdm_gui_protocol.Popup instance at 0x7f483579de60>], sender=GuiBackend, reason=None)
2017-10-24 16:53:28,252 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "go_back", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Went to the previous step"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:53:28,252 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:28,253 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:53:28,272 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Went to the previous step"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:53:28,273 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:53:28,273 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Went to the previous step], sender=TextOutputComponent, reason=None))
2017-10-24 16:53:28,273 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Went to the previous step], sender=TextOutputComponent, reason=None)
2017-10-24 16:53:28,273 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:53:28,274 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None)
2017-10-24 16:53:28,274 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None)
2017-10-24 16:53:28,274 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None)
2017-10-24 16:53:28,274 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None))
2017-10-24 16:53:28,275 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856808.27
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_back), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_back), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:28,276 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:28,276 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:53:28,276 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:53:28,281 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back')}
?            ^^
- tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:53:28,281 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:53:28,282 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:53:28,285 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:53:28,285 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:53:28,285 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:53:28,285 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:53:28,285 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:53:28,285 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:53:28,285 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:53:28,285 - session_2017-10-24T16_53_13_0 - INFO - BEGIN integrate_moves
2017-10-24 16:53:28,285 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:53:28,286 - session_2017-10-24T16_53_13_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:53:28,286 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:53:28,286 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:28,290 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:53:28,290 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:28,290 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:28,290 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:28,290 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,290 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:28,293 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {device_activity_terminated(go_back)}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:53:28,293 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:28,293 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:28,297 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(say_step))])
- tis.shared.goals: stackset([perform(go_back), perform(top)])
?                                     ------------------
+ tis.shared.goals: stackset([perform(top)])
- tis.shared.previous_goal: None
?                           ^ ^^
+ tis.shared.previous_goal: perform(go_back)
?                           ^^^^ ^^^^^^^^^^^
-- END TIS changes --
2017-10-24 16:53:28,297 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:28,297 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,297 - session_2017-10-24T16_53_13_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:53:28,297 - session_2017-10-24T16_53_13_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:53:28,297 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:28,297 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:28,297 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:28,297 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:53:28,298 - session_2017-10-24T16_53_13_0 - INFO - breaking out of accommodate
2017-10-24 16:53:28,298 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:28,298 - session_2017-10-24T16_53_13_0 - INFO - END integrate_moves
2017-10-24 16:53:28,298 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:28,301 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([jumpto(perform(say_step))])
+ tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([perform(say_step), perform(top)])
?                                     +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:53:28,301 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,301 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:28,305 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
- tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:53:28,305 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,305 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:28,306 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,306 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:53:28,306 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:28,306 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:28,306 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,306 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:28,306 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:53:28,309 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:53:28,309 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:53:28,310 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: select
2017-10-24 16:53:28,311 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856808.27
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_back), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_back)}
tis.shared.goals: stackset([perform(say_step), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back')}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:28,311 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:53:28,317 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
?                                                                 ^^^ ^^                                          ^^ ^^^^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                                                ++ ^ ^^^                                          ^^^ ^^^^
- tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
- tis.private.tmp.sys.com: {}
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
+ tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
- tis.private.tmp.sys.goals: stackset([perform(go_back), perform(top)])
?                                              ^^ ^^^^
+ tis.private.tmp.sys.goals: stackset([perform(say_step), perform(top)])
?                                              ^^^ ^^^^
-- END TIS changes --
2017-10-24 16:53:28,317 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:28,320 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:53:28,320 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:28,322 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:53:28,322 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:28,323 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:28,323 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:53:28,325 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:28,325 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:53:28,325 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:53:28,328 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:28,328 - session_2017-10-24T16_53_13_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:53:28,328 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None))
2017-10-24 16:53:28,328 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:53:28,328 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:53:28,328 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:53:28,330 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:28,330 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None)))
2017-10-24 16:53:28,330 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None))
2017-10-24 16:53:28,330 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:53:28,331 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,331 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,332 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,332 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 16:53:28,332 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:53:28,332 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:53:28,333 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp') generated as u'Step ended'
2017-10-24 16:53:28,333 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:53:28,334 - session_2017-10-24T16_53_13_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,335 - session_2017-10-24T16_53_13_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:53:28,335 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,336 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:53:28,336 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:53:28,336 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 16:53:28,336 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:53:28,337 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f483579d6c8>, <tdm.tdm_gui_protocol.DeviceResult instance at 0x7f48357a2cb0>, <tdm.tdm_gui_protocol.Popup instance at 0x7f48357a2dd0>]
2017-10-24 16:53:28,337 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f483579d6c8>, <tdm.tdm_gui_protocol.DeviceResult instance at 0x7f48357a2cb0>, <tdm.tdm_gui_protocol.Popup instance at 0x7f48357a2dd0>], sender=GuiBackend, reason=None)
2017-10-24 16:53:28,337 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posted event
2017-10-24 16:53:28,337 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Step ended], sender=GenerateModule, reason=None))
2017-10-24 16:53:28,337 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:53:28,337 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Step ended"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:53:28,338 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:28,338 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:53:28,338 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:53:28,338 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Step ended"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:53:28,339 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:28,339 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f483579d6c8>, <tdm.tdm_gui_protocol.DeviceResult instance at 0x7f48357a2cb0>, <tdm.tdm_gui_protocol.Popup instance at 0x7f48357a2dd0>], sender=GuiBackend, reason=None))
2017-10-24 16:53:28,339 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f483579d6c8>, <tdm.tdm_gui_protocol.DeviceResult instance at 0x7f48357a2cb0>, <tdm.tdm_gui_protocol.Popup instance at 0x7f48357a2dd0>], sender=GuiBackend, reason=None)
2017-10-24 16:53:28,339 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}, {"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "say_step", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Step ended"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:53:28,340 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:28,340 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:53:28,378 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend received event {"content": ["Step ended"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:53:28,379 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:53:28,379 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Step ended], sender=TextOutputComponent, reason=None))
2017-10-24 16:53:28,379 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Step ended], sender=TextOutputComponent, reason=None)
2017-10-24 16:53:28,379 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:53:28,379 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None)
2017-10-24 16:53:28,379 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None)
2017-10-24 16:53:28,379 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None)
2017-10-24 16:53:28,380 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None))
2017-10-24 16:53:28,381 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856808.38
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
tis.private.tmp.sys.goals: stackset([perform(say_step), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_back)}
tis.shared.goals: stackset([perform(say_step), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back')}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:28,381 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:28,381 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:53:28,381 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:53:28,386 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back')}
-- END TIS changes --
2017-10-24 16:53:28,386 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:53:28,386 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:53:28,389 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:53:28,389 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:53:28,389 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:53:28,389 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:53:28,389 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:53:28,389 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:53:28,389 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:53:28,389 - session_2017-10-24T16_53_13_0 - INFO - BEGIN integrate_moves
2017-10-24 16:53:28,389 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:53:28,389 - session_2017-10-24T16_53_13_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:53:28,390 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:53:28,390 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:28,393 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {device_activity_terminated(go_back)}
+ tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:53:28,393 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:28,393 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:28,397 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(confirmation_action))])
- tis.shared.goals: stackset([perform(say_step), perform(top)])
?                                     -------------------
+ tis.shared.goals: stackset([perform(top)])
- tis.shared.previous_goal: perform(go_back)
?                                   ^^ ^^^^
+ tis.shared.previous_goal: perform(say_step)
?                                   ^^^ ^^^^
-- END TIS changes --
2017-10-24 16:53:28,397 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:28,397 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,397 - session_2017-10-24T16_53_13_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:53:28,397 - session_2017-10-24T16_53_13_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:53:28,397 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:28,397 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:28,397 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:28,397 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:53:28,398 - session_2017-10-24T16_53_13_0 - INFO - breaking out of accommodate
2017-10-24 16:53:28,398 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:28,398 - session_2017-10-24T16_53_13_0 - INFO - END integrate_moves
2017-10-24 16:53:28,398 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:28,402 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([jumpto(perform(confirmation_action))])
+ tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:53:28,402 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,403 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:28,406 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          -------------------------
+ tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:53:28,406 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,406 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:28,407 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,407 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:53:28,407 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:28,407 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:28,407 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,408 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:28,408 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:53:28,410 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:28,410 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:53:28,410 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: select
2017-10-24 16:53:28,411 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856808.38
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
tis.private.tmp.sys.goals: stackset([perform(say_step), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:28,411 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:53:28,416 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
+ tis.private.tmp.sys.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
?                                                              ++++++++++++++++++++++++++++++++++++++
- tis.private.tmp.sys.goals: stackset([perform(say_step), perform(top)])
?                                              ^ ^ ^ ^^
+ tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
?                                              ^^^^^^^ ^^^^ ^^ ^^^
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:53:28,417 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:28,420 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.confirmation_yn(X))])
?                                                                  ++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:53:28,420 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:28,423 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
?                                       +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.confirmation_yn(X))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:53:28,423 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:28,426 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))])
?                                                              ++++++++++++++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:53:28,426 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:28,426 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:28,426 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:53:28,429 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:28,429 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:53:28,429 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:53:28,432 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:53:28,432 - session_2017-10-24T16_53_13_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:53:28,432 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None))
2017-10-24 16:53:28,432 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:53:28,433 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:53:28,433 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:53:28,433 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:28,434 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None)))
2017-10-24 16:53:28,434 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None))
2017-10-24 16:53:28,434 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:53:28,434 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,435 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,436 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,437 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={device_activity_terminated(go_back), device_activity_terminated(say_step), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 16:53:28,437 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 16:53:28,437 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_back), device_activity_terminated(say_step), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 16:53:28,437 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:53:28,437 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 16:53:28,437 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 16:53:28,437 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:53:28,438 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp') generated as u'Are you done?'
2017-10-24 16:53:28,438 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:53:28,440 - session_2017-10-24T16_53_13_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,442 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:28,442 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:53:28,442 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:53:28,442 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={device_activity_terminated(go_back), device_activity_terminated(say_step), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 16:53:28,442 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 16:53:28,442 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_back), device_activity_terminated(say_step), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 16:53:28,443 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:53:28,443 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f48357a2170>]
2017-10-24 16:53:28,443 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f48357a2170>], sender=GuiBackend, reason=None)
2017-10-24 16:53:28,443 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posted event
2017-10-24 16:53:28,443 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Are you done?], sender=GenerateModule, reason=None))
2017-10-24 16:53:28,443 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:53:28,444 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Are you done?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:53:28,444 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:28,444 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f48357a2170>], sender=GuiBackend, reason=None))
2017-10-24 16:53:28,444 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f48357a2170>], sender=GuiBackend, reason=None)
2017-10-24 16:53:28,444 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:53:28,445 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:28,445 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:53:28,486 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Are you done?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:53:28,487 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:53:28,487 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Are you done?], sender=TextOutputComponent, reason=None))
2017-10-24 16:53:28,487 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Are you done?], sender=TextOutputComponent, reason=None)
2017-10-24 16:53:28,487 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:53:28,487 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:53:28,487 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:53:28,487 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:53:28,488 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Are you done?], sender=TurnManager, reason=None))
2017-10-24 16:53:28,489 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856808.49
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Are you done?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:28,489 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:28,489 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:53:28,489 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:53:28,494 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:53:28,494 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:53:28,495 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:53:28,497 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:28,498 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:53:28,498 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:53:28,498 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:53:28,498 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:53:28,498 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:53:28,498 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:53:28,498 - session_2017-10-24T16_53_13_0 - INFO - BEGIN integrate_moves
2017-10-24 16:53:28,499 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:53:28,499 - session_2017-10-24T16_53_13_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:53:28,499 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:53:28,499 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:28,502 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:53:28,503 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:28,503 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:28,504 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:28,504 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,504 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:28,507 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.confirmation_yn(X)])
-- END TIS changes --
2017-10-24 16:53:28,507 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:28,508 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:28,508 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:28,508 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,508 - session_2017-10-24T16_53_13_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:53:28,508 - session_2017-10-24T16_53_13_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:53:28,508 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:28,508 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:28,508 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:28,509 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:53:28,509 - session_2017-10-24T16_53_13_0 - INFO - breaking out of accommodate
2017-10-24 16:53:28,509 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:28,509 - session_2017-10-24T16_53_13_0 - INFO - END integrate_moves
2017-10-24 16:53:28,509 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:28,509 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,509 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:53:28,509 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:28,510 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:28,510 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:28,510 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:28,510 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:53:28,513 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 16:53:28,513 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:53:28,513 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:53:28,513 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:53:28,513 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:53:28,514 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:53:28,514 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:28,514 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:53:28,515 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:53:28,515 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:53:28,515 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:53:33,797 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "no"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:53:33,797 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:53:33,797 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: no}], sender=TextInputComponent, reason=None))
2017-10-24 16:53:33,798 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: no}], sender=TextInputComponent, reason=None)
2017-10-24 16:53:33,798 - session_2017-10-24T16_53_13_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: no}], sender=TextInputComponent, reason=None)
2017-10-24 16:53:33,798 - session_2017-10-24T16_53_13_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "no"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:53:33,798 - session_2017-10-24T16_53_13_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:53:33,800 - session_2017-10-24T16_53_13_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:53:33,800 - session_2017-10-24T16_53_13_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])} for DDD 'recipehelp'
2017-10-24 16:53:33,800 - session_2017-10-24T16_53_13_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}
2017-10-24 16:53:33,800 - session_2017-10-24T16_53_13_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:53:33,801 - session_2017-10-24T16_53_13_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.No": {}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "no", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "no"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "no", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.CustomSort": {"_ontology_name": "RecipehelpOntology", "_dynamic": false, "_name": "Boolean"}}, "value": "False"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "no", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:53:33,801 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: no}], sender=TextInputComponent, reason=None)
2017-10-24 16:53:33,801 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:53:33,801 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:53:33,801 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:53:33,802 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:53:33,802 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 16:53:33,802 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:33,802 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 16:53:33,803 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:53:33,803 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:53:33,804 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:53:33,804 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:53:33,805 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856813.8
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: no
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([?X.confirmation_yn(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:33,805 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:33,811 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                                                                                                                                                ^
- tis.latest_moves_amb: {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}
?                                                                                                                                                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}
?                                                                                                                                                                                                                                                               ^
-- END TIS changes --
2017-10-24 16:53:33,816 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                                                                                                                                                ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}
?                                                                                                                                                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}
?                                                                                                                                                                                                                                                               ^^
-- END TIS changes --
2017-10-24 16:53:33,817 - session_2017-10-24T16_53_13_0 - INFO - hypotheses reranked: OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no'), #]) upranked to position 1 from position 2, replacing OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])
2017-10-24 16:53:33,817 - session_2017-10-24T16_53_13_0 - INFO - Could not log rerank
2017-10-24 16:53:33,817 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:53:33,822 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no')])
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 16:53:33,822 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:53:33,827 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:53:33,827 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:53:33,827 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:53:33,830 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:33,830 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:53:33,830 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:53:33,837 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.bel: {}
- tis.private.tmp.usr.com: {}
+ tis.private.tmp.usr.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
+ tis.private.tmp.usr.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
- tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                                      ^  ^
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                                                      ^ +++++ ^^^^^^^   ++++++++++++++++++++++++++++++
- tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
+ tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                       ^  ^
+ tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
?                                       ^ +++++ ^^^^^^^
-- END TIS changes --
2017-10-24 16:53:33,837 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:53:33,837 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:53:33,838 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:53:33,838 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:53:33,838 - session_2017-10-24T16_53_13_0 - INFO - BEGIN integrate_moves
2017-10-24 16:53:33,839 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no'), #])
2017-10-24 16:53:33,839 - session_2017-10-24T16_53_13_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:53:33,839 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no'), #])
2017-10-24 16:53:33,839 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:33,844 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {confirmation_yn("no")}
- tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
+ tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(say_step), confirmation_yn("no")}
?                                                                                           +++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no')}
-- END TIS changes --
2017-10-24 16:53:33,844 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:33,844 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:33,849 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(say_step), confirmation_yn("no")}
+ tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(say_step), confirmation_yn("no"), resolved(?X.confirmation_yn(X))}
?                                                                                                                  +++++++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             -------------------------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:53:33,849 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:33,854 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          --------------------------------
+ tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:53:33,854 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:33,854 - session_2017-10-24T16_53_13_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:53:33,854 - session_2017-10-24T16_53_13_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:53:33,854 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:33,854 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:33,855 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:33,855 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:53:33,855 - session_2017-10-24T16_53_13_0 - INFO - breaking out of accommodate
2017-10-24 16:53:33,855 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:33,855 - session_2017-10-24T16_53_13_0 - INFO - END integrate_moves
2017-10-24 16:53:33,855 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:33,859 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
+ tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
?                                                                                                                                                                                                 ++++++++++++++++++
- tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          ----------------------------------
+ tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:53:33,859 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:33,860 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:33,863 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: exec_if_then_else
-- BEGIN TIS changes --
- tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
+ tis.private.plan: Stack([jumpto(perform(say_step))])
-- END TIS changes --
2017-10-24 16:53:33,863 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:33,863 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:33,867 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                 +++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([jumpto(perform(say_step))])
+ tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:53:33,867 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:33,868 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:33,871 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                                                                                  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:53:33,871 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:33,872 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:33,872 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:33,872 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:53:33,875 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.confirmation_yn(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:53:33,875 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:33,878 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(confirmation_action))])
- tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             -------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:53:33,878 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:33,879 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:33,883 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.plan: Stack([jumpto(perform(confirmation_action))])
+ tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:53:33,883 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:33,884 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:33,888 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          -------------------------
+ tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(say_step), confirmation_yn("no"), resolved(?X.confirmation_yn(X))}
?                                                                                           --------------------------------------------------------
+ tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
-- END TIS changes --
2017-10-24 16:53:33,888 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:33,889 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:33,889 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:33,889 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:33,889 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:53:33,889 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, confirmation_yn("no"), sender=DmeModule, reason=None)
2017-10-24 16:53:33,889 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, no, sender=DmeModule, reason=None)
2017-10-24 16:53:33,890 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:53:33,890 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: select
2017-10-24 16:53:33,891 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856813.8
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no')])
tis.latest_moves_amb: {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: no
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no')}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:33,891 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:53:33,898 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
?                                                                                                                                                                                                         ++++++++++++++++++
-- END TIS changes --
2017-10-24 16:53:33,898 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:33,902 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:53:33,902 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:33,902 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:33,906 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:53:33,906 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:33,910 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:53:33,910 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:33,910 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:33,910 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:53:33,913 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:33,913 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:53:33,913 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:53:33,916 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:53:33,917 - session_2017-10-24T16_53_13_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:53:33,917 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:53:33,917 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, confirmation_yn("no"), sender=DmeModule, reason=None))
2017-10-24 16:53:33,917 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, confirmation_yn("no"), sender=DmeModule, reason=None)
2017-10-24 16:53:33,918 - session_2017-10-24T16_53_13_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, confirmation_yn("no"), sender=DmeModule, reason=None)
2017-10-24 16:53:33,918 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, no, sender=DmeModule, reason=None))
2017-10-24 16:53:33,918 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, no, sender=DmeModule, reason=None)
2017-10-24 16:53:33,918 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": "no", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:53:33,918 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:33,919 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:53:33,919 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:53:33,919 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:53:33,920 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:33,920 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:53:33,921 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:53:33,921 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:53:33,921 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:33,921 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:33,923 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:33,923 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_back), device_activity_terminated(say_step), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:53:33,924 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:53:33,924 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_back), device_activity_terminated(say_step), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:53:33,924 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:53:33,924 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:53:33,924 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:53:33,924 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:53:33,925 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp') generated as u'Step ended'
2017-10-24 16:53:33,925 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:53:33,926 - session_2017-10-24T16_53_13_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:33,927 - session_2017-10-24T16_53_13_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:53:33,929 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:33,930 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:53:33,930 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:53:33,930 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_back), device_activity_terminated(say_step), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:53:33,930 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:53:33,930 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_back), device_activity_terminated(say_step), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:53:33,930 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:53:33,931 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f483578e9e0>, <tdm.tdm_gui_protocol.Popup instance at 0x7f483578efc8>]
2017-10-24 16:53:33,931 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f483578e9e0>, <tdm.tdm_gui_protocol.Popup instance at 0x7f483578efc8>], sender=GuiBackend, reason=None)
2017-10-24 16:53:33,931 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posted event
2017-10-24 16:53:33,931 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None))
2017-10-24 16:53:33,931 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:53:33,931 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Step ended"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:53:33,932 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:33,932 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:53:33,932 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:53:33,932 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Step ended"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:53:33,933 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:33,933 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f483578e9e0>, <tdm.tdm_gui_protocol.Popup instance at 0x7f483578efc8>], sender=GuiBackend, reason=None))
2017-10-24 16:53:33,933 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f483578e9e0>, <tdm.tdm_gui_protocol.Popup instance at 0x7f483578efc8>], sender=GuiBackend, reason=None)
2017-10-24 16:53:33,933 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "say_step", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Step ended"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:53:33,934 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:33,934 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:53:33,971 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Step ended"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:53:33,971 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:53:33,972 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None))
2017-10-24 16:53:33,972 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None)
2017-10-24 16:53:33,972 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:53:33,972 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:53:33,972 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:53:33,972 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:53:33,973 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None))
2017-10-24 16:53:33,974 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856813.97
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: no
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no')}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:33,974 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:33,978 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.latest_moves_amb: {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}
?                                                                                                                                                                                       ^^^^                                                                    ^^                                        -------------------------------------------------------------------------------------------------------------------------------------------
+ tis.latest_moves_amb: {OpenQueue([Move(answer(no), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #]), OpenQueue([Move(answer(False), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'no'), #])}
?                                                                                                                                                                                       ^^^^^                                                                    ^
-- END TIS changes --
2017-10-24 16:53:33,978 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:33,979 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:53:33,979 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:53:33,985 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no')}
?            ^^
- tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:53:33,985 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:53:33,985 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:53:33,988 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:53:33,988 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:53:33,988 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:53:33,989 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:53:33,989 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:53:33,989 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:53:33,989 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:53:33,989 - session_2017-10-24T16_53_13_0 - INFO - BEGIN integrate_moves
2017-10-24 16:53:33,989 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:53:33,989 - session_2017-10-24T16_53_13_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:53:33,989 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:53:33,989 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:33,994 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:53:33,994 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:33,994 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:33,994 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:33,994 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:33,995 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:33,998 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:53:33,998 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:33,998 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:33,998 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:33,998 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:33,999 - session_2017-10-24T16_53_13_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:53:33,999 - session_2017-10-24T16_53_13_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:53:33,999 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:33,999 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:33,999 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:33,999 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:53:33,999 - session_2017-10-24T16_53_13_0 - INFO - breaking out of accommodate
2017-10-24 16:53:33,999 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:33,999 - session_2017-10-24T16_53_13_0 - INFO - END integrate_moves
2017-10-24 16:53:33,999 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:34,000 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:34,000 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:53:34,000 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:34,000 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:34,001 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:34,001 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:34,001 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:53:34,004 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:53:34,004 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:53:34,005 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:53:34,005 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:53:34,005 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:53:34,005 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:53:34,006 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:34,006 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 16:53:34,006 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:53:34,006 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:53:34,007 - session_2017-10-24T16_53_13_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f483578ef80>:1.0
2017-10-24 16:53:34,007 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:53:35,007 - session_2017-10-24T16_53_13_0 - DEBUG - Timeout fired
2017-10-24 16:53:35,007 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:53:35,007 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:53:35,007 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:53:35,007 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:53:35,008 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856815.01
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: no
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no')}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:35,009 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:35,009 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:53:35,011 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:53:35,011 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:53:35,016 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer("no"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'no')}
-- END TIS changes --
2017-10-24 16:53:35,016 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:53:35,016 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:53:35,019 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:35,019 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:53:35,019 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:53:35,019 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:53:35,019 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:53:35,019 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:53:35,019 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:53:35,019 - session_2017-10-24T16_53_13_0 - INFO - BEGIN integrate_moves
2017-10-24 16:53:35,019 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:53:35,019 - session_2017-10-24T16_53_13_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:53:35,019 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:53:35,019 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:35,020 - session_2017-10-24T16_53_13_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:53:35,020 - session_2017-10-24T16_53_13_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:53:35,020 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:35,020 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:35,020 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:35,020 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:53:35,020 - session_2017-10-24T16_53_13_0 - INFO - breaking out of accommodate
2017-10-24 16:53:35,020 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:35,020 - session_2017-10-24T16_53_13_0 - INFO - END integrate_moves
2017-10-24 16:53:35,020 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:35,021 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:35,021 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:53:35,021 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:35,021 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:35,022 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:35,022 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:35,022 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:53:35,022 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:53:35,022 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: select
2017-10-24 16:53:35,023 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856815.01
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: no
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:35,024 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:53:35,028 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:53:35,028 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:35,030 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:53:35,030 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:35,030 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:35,033 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
- tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:53:35,033 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:35,033 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:35,034 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:53:35,036 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:35,036 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:53:35,036 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:53:35,039 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:53:35,040 - session_2017-10-24T16_53_13_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:53:35,040 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:53:50,165 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:53:50,166 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:53:50,166 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: next}], sender=TextInputComponent, reason=None))
2017-10-24 16:53:50,166 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: next}], sender=TextInputComponent, reason=None)
2017-10-24 16:53:50,166 - session_2017-10-24T16_53_13_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: next}], sender=TextInputComponent, reason=None)
2017-10-24 16:53:50,166 - session_2017-10-24T16_53_13_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:53:50,166 - session_2017-10-24T16_53_13_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:53:50,167 - session_2017-10-24T16_53_13_0 - DEBUG - ExactInterpreter: Found no valid exact interpretations, returning an empty result.
2017-10-24 16:53:50,167 - session_2017-10-24T16_53_13_0 - DEBUG - Result from 'ExactInterpreter': []
2017-10-24 16:53:50,167 - session_2017-10-24T16_53_13_0 - DEBUG - Starting 'RobustInterpreter'
2017-10-24 16:53:50,167 - session_2017-10-24T16_53_13_0 - DEBUG - DddInterpreter.interpret_partially: timeout=1.99882006645
2017-10-24 16:53:50,170 - session_2017-10-24T16_53_13_0 - DEBUG - robust grammatical interpretations: []
2017-10-24 16:53:50,171 - session_2017-10-24T16_53_13_0 - DEBUG - _remove_literals(): Got no valid interpretations of partial utterances
2017-10-24 16:53:50,171 - session_2017-10-24T16_53_13_0 - DEBUG - RobustInterpreter: Partial interpretation failed.
2017-10-24 16:53:50,171 - session_2017-10-24T16_53_13_0 - DEBUG - RobustInterpreter: use_word_list_correction disabled, skipping interpretation with word correction
2017-10-24 16:53:50,171 - session_2017-10-24T16_53_13_0 - DEBUG - RobustInterpreter: Found no robust interpretations, returning an empty result.
2017-10-24 16:53:50,171 - session_2017-10-24T16_53_13_0 - DEBUG - Result from 'RobustInterpreter': []
2017-10-24 16:53:50,171 - session_2017-10-24T16_53_13_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {}, sender=InterpretModule, reason=None)
2017-10-24 16:53:50,171 - session_2017-10-24T16_53_13_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:53:50,172 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: next}], sender=TextInputComponent, reason=None)
2017-10-24 16:53:50,172 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:53:50,172 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:53:50,172 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:53:50,173 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:50,173 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 16:53:50,174 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:53:50,174 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:53:50,174 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:50,175 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:50,177 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:50,177 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_back), device_activity_terminated(say_step), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:53:50,177 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:53:50,177 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:53:50,178 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp') generated as u'Are you done?'
2017-10-24 16:53:50,178 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:53:50,180 - session_2017-10-24T16_53_13_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:50,182 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:50,182 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:53:50,182 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:53:50,182 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_back), device_activity_terminated(say_step), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:53:50,182 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:53:50,183 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f483577d2d8>]
2017-10-24 16:53:50,183 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f483577d2d8>], sender=GuiBackend, reason=None)
2017-10-24 16:53:50,183 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posted event
2017-10-24 16:53:50,183 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {}, sender=InterpretModule, reason=None))
2017-10-24 16:53:50,183 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {}, sender=InterpretModule, reason=None)
2017-10-24 16:53:50,183 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:53:50,183 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:53:50,183 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 16:53:50,184 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:50,184 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None))
2017-10-24 16:53:50,184 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:53:50,184 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Are you done?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:53:50,185 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:50,185 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f483577d2d8>], sender=GuiBackend, reason=None))
2017-10-24 16:53:50,186 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f483577d2d8>], sender=GuiBackend, reason=None)
2017-10-24 16:53:50,186 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:53:50,186 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:50,186 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:53:50,212 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend received event {"content": ["Are you done?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:53:50,212 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:53:50,213 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None))
2017-10-24 16:53:50,213 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None)
2017-10-24 16:53:50,213 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:53:50,213 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:53:50,213 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:53:50,213 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:53:50,213 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None))
2017-10-24 16:53:50,215 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856830.21
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:50,215 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:50,215 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:53:50,215 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:53:50,218 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:53:50,219 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:53:50,219 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:53:50,222 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:50,222 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:53:50,222 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:53:50,222 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:53:50,222 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:53:50,222 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:53:50,222 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:53:50,222 - session_2017-10-24T16_53_13_0 - INFO - BEGIN integrate_moves
2017-10-24 16:53:50,223 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:53:50,223 - session_2017-10-24T16_53_13_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:53:50,223 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:53:50,223 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:50,226 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.confirmation_yn(X)])
-- END TIS changes --
2017-10-24 16:53:50,227 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:50,227 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:50,227 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:50,227 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:50,227 - session_2017-10-24T16_53_13_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:53:50,227 - session_2017-10-24T16_53_13_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:53:50,227 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:50,227 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:50,228 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:50,228 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:53:50,228 - session_2017-10-24T16_53_13_0 - INFO - breaking out of accommodate
2017-10-24 16:53:50,228 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:50,228 - session_2017-10-24T16_53_13_0 - INFO - END integrate_moves
2017-10-24 16:53:50,228 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:50,228 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:50,229 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:53:50,229 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:50,229 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:50,229 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:50,229 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:50,230 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:53:50,233 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 16:53:50,233 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:53:50,233 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:53:50,233 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:53:50,233 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:53:50,234 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:53:50,234 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:50,234 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:53:50,234 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:53:50,235 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:53:50,235 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 16:53:50,235 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 16:53:50,235 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 16:53:50,236 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: update (Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 16:53:50,237 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856830.24
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([?X.confirmation_yn(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:50,237 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:50,237 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:53:50,240 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:53:50,240 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:53:50,245 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:53:50,245 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:53:50,245 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:53:50,248 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:50,248 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:53:50,248 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:53:50,248 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:53:50,248 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:53:50,248 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:53:50,248 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:53:50,249 - session_2017-10-24T16_53_13_0 - INFO - BEGIN integrate_moves
2017-10-24 16:53:50,249 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:53:50,249 - session_2017-10-24T16_53_13_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:53:50,249 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:53:50,249 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:50,249 - session_2017-10-24T16_53_13_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:53:50,250 - session_2017-10-24T16_53_13_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:53:50,250 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:50,250 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:50,250 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:50,251 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:53:50,251 - session_2017-10-24T16_53_13_0 - INFO - breaking out of accommodate
2017-10-24 16:53:50,251 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:50,252 - session_2017-10-24T16_53_13_0 - INFO - END integrate_moves
2017-10-24 16:53:50,252 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:50,252 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:50,252 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:53:50,255 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.confirmation_yn(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:53:50,255 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:50,256 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:50,256 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:50,256 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:50,257 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:53:50,257 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:53:50,257 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: select
2017-10-24 16:53:50,258 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856830.24
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:50,258 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:53:50,264 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                                      +++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:53:50,264 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:50,267 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: reraiseIssue
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise)), raise(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:53:50,267 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:50,270 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectIcmSemNeg
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)])
-- END TIS changes --
2017-10-24 16:53:50,270 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:50,270 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:50,274 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise)])
?                                                                                          ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise)), raise(?X.confirmation_yn(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, raise(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:53:50,274 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:50,278 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))])
?                                                                                                                ++++++++++++++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, raise(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:53:50,278 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:53:50,278 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_move
2017-10-24 16:53:50,278 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:53:50,281 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:50,281 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:53:50,281 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:53:50,284 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:50,284 - session_2017-10-24T16_53_13_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:53:50,284 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 16:53:50,285 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:53:50,285 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:53:50,285 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:53:50,285 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:50,286 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None)))
2017-10-24 16:53:50,286 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 16:53:50,286 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:53:50,287 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:50,287 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:50,290 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:50,291 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:per*pos:"next"), facts={device_activity_terminated(go_back), device_activity_terminated(say_step), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:53:50,291 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:per*pos:"next")
2017-10-24 16:53:50,291 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:sem*neg), facts={device_activity_terminated(go_back), device_activity_terminated(say_step), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:53:50,291 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:sem*neg)
2017-10-24 16:53:50,291 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise), facts={device_activity_terminated(go_back), device_activity_terminated(say_step), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:53:50,291 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise)
2017-10-24 16:53:50,292 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_back), device_activity_terminated(say_step), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:53:50,292 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:53:50,292 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:per*pos:"next")
2017-10-24 16:53:50,292 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Move ICMMove(icm:per*pos:"next") generated as u'I heard you say next.'
2017-10-24 16:53:50,292 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:sem*neg)
2017-10-24 16:53:50,292 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Move ICMMove(icm:sem*neg) generated as u"I don't understand."
2017-10-24 16:53:50,293 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise)
2017-10-24 16:53:50,293 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise) generated as u'So,'
2017-10-24 16:53:50,293 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:53:50,293 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule: Move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp') generated as u'Are you done?'
2017-10-24 16:53:50,294 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say next., I don't understand., So,, Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:53:50,296 - session_2017-10-24T16_53_13_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:50,298 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:53:50,299 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:53:50,299 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:53:50,299 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:per*pos:"next"), facts={device_activity_terminated(go_back), device_activity_terminated(say_step), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:53:50,299 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:per*pos:"next")
2017-10-24 16:53:50,299 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:sem*neg), facts={device_activity_terminated(go_back), device_activity_terminated(say_step), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:53:50,299 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:sem*neg)
2017-10-24 16:53:50,299 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise), facts={device_activity_terminated(go_back), device_activity_terminated(say_step), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:53:50,299 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise)
2017-10-24 16:53:50,299 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_back), device_activity_terminated(say_step), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:53:50,300 - session_2017-10-24T16_53_13_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:53:50,300 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend generated message []
2017-10-24 16:53:50,300 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 16:53:50,300 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posted event
2017-10-24 16:53:50,300 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say next., I don't understand., So,, Are you done?], sender=GenerateModule, reason=None))
2017-10-24 16:53:50,300 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say next., I don't understand., So,, Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:53:50,300 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": ["I heard you say next.", "I don't understand.", "So,", "Are you done?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:53:50,301 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:50,301 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 16:53:50,302 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 16:53:50,302 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:53:50,302 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:50,302 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:53:50,325 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend received event {"content": ["I heard you say next.", "I don't understand.", "So,", "Are you done?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:53:50,326 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:53:50,326 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [I heard you say next., I don't understand., So,, Are you done?], sender=TextOutputComponent, reason=None))
2017-10-24 16:53:50,326 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [I heard you say next., I don't understand., So,, Are you done?], sender=TextOutputComponent, reason=None)
2017-10-24 16:53:50,326 - session_2017-10-24T16_53_13_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:53:50,326 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [I heard you say next., I don't understand., So,, Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:53:50,326 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [I heard you say next., I don't understand., So,, Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:53:50,327 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [I heard you say next., I don't understand., So,, Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:53:50,327 - session_2017-10-24T16_53_13_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [I heard you say next., I don't understand., So,, Are you done?], sender=TurnManager, reason=None))
2017-10-24 16:53:50,328 - session_2017-10-24T16_53_13_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f4837ed9cd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f48376a33d0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856830.33
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [I heard you say next., I don't understand., So,, Are you done?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"next"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:53:50,329 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:53:50,329 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:53:50,329 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:53:50,333 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
- tis.sys_turns: 0
?                ^
+ tis.sys_turns: 1
?                ^
-- END TIS changes --
2017-10-24 16:53:50,333 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:53:50,334 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:53:50,337 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:50,337 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:53:50,337 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:53:50,337 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:53:50,338 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:53:50,338 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:53:50,338 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:53:50,338 - session_2017-10-24T16_53_13_0 - INFO - BEGIN integrate_moves
2017-10-24 16:53:50,338 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:53:50,338 - session_2017-10-24T16_53_13_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:53:50,338 - session_2017-10-24T16_53_13_0 - INFO - init_shift: OpenQueue([ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:53:50,338 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:50,342 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                                         ^^^ ^^^^^^^^^^                                       ----------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                                         ^^^ ^^^
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:53:50,342 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:50,343 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:50,343 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:50,343 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:50,343 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:50,349 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
?                                                                              ++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:53:50,349 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:50,349 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:50,350 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:50,350 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:50,350 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:50,354 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0)}
?                                                                                                                            ++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:53:50,354 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:50,354 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:50,355 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:50,355 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:50,355 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:integrate
2017-10-24 16:53:50,358 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.confirmation_yn(X)])
-- END TIS changes --
2017-10-24 16:53:50,358 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:53:50,358 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:50,359 - session_2017-10-24T16_53_13_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:53:50,359 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:50,359 - session_2017-10-24T16_53_13_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:53:50,359 - session_2017-10-24T16_53_13_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:53:50,359 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:50,359 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_action
2017-10-24 16:53:50,359 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:50,359 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:53:50,359 - session_2017-10-24T16_53_13_0 - INFO - breaking out of accommodate
2017-10-24 16:53:50,359 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:53:50,360 - session_2017-10-24T16_53_13_0 - INFO - END integrate_moves
2017-10-24 16:53:50,360 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:50,360 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:50,360 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:53:50,360 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:53:50,360 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:53:50,361 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:53:50,361 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:53:50,361 - session_2017-10-24T16_53_13_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:53:50,364 - session_2017-10-24T16_53_13_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:53:50,365 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:53:50,365 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [I heard you say next., I don't understand., So,, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:53:50,365 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:53:50,365 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:53:50,365 - session_2017-10-24T16_53_13_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:53:50,366 - session_2017-10-24T16_53_13_0 - DEBUG - Sent.
2017-10-24 16:53:50,367 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [I heard you say next., I don't understand., So,, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:53:50,367 - session_2017-10-24T16_53_13_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [I heard you say next., I don't understand., So,, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:53:50,367 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [I heard you say next., I don't understand., So,, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"next", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:53:50,367 - session_2017-10-24T16_53_13_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:55:54,559 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:55:54,560 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(STOP, None, sender=Backend, reason=None))
2017-10-24 16:55:54,560 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(STOP, None, sender=Backend, reason=None)
2017-10-24 16:55:54,560 - session_2017-10-24T16_53_13_0 - DEBUG - InterpretModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 16:55:54,561 - session_2017-10-24T16_53_13_0 - DEBUG - InterpretModule posts Event(STOPPED, None, sender=InterpretModule, reason=None)
2017-10-24 16:55:54,561 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 16:55:54,561 - session_2017-10-24T16_53_13_0 - DEBUG - DmeModule posts Event(STOPPED, None, sender=DmeModule, reason=None)
2017-10-24 16:55:54,561 - session_2017-10-24T16_53_13_0 - DEBUG - DeviceManager handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 16:55:54,561 - session_2017-10-24T16_53_13_0 - DEBUG - DeviceManager posts Event(STOPPED, None, sender=DeviceManager, reason=None)
2017-10-24 16:55:54,561 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 16:55:54,561 - session_2017-10-24T16_53_13_0 - DEBUG - GenerateModule posts Event(STOPPED, None, sender=GenerateModule, reason=None)
2017-10-24 16:55:54,562 - session_2017-10-24T16_53_13_0 - DEBUG - IndependentGuiBackend handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 16:55:54,562 - session_2017-10-24T16_53_13_0 - DEBUG - IndependentGuiBackend posts Event(STOPPED, None, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:55:54,562 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 16:55:54,562 - session_2017-10-24T16_53_13_0 - DEBUG - GuiBackend posts Event(STOPPED, None, sender=GuiBackend, reason=None)
2017-10-24 16:55:54,563 - session_2017-10-24T16_53_13_0 - DEBUG - CogloadModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 16:55:54,563 - session_2017-10-24T16_53_13_0 - DEBUG - CogloadModule posts Event(STOPPED, None, sender=CogloadModule, reason=None)
2017-10-24 16:55:54,563 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=InterpretModule, reason=None))
2017-10-24 16:55:54,563 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=InterpretModule, reason=None)
2017-10-24 16:55:54,564 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=DmeModule, reason=None))
2017-10-24 16:55:54,564 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=DmeModule, reason=None)
2017-10-24 16:55:54,564 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=DeviceManager, reason=None))
2017-10-24 16:55:54,564 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=DeviceManager, reason=None)
2017-10-24 16:55:54,564 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=GenerateModule, reason=None))
2017-10-24 16:55:54,564 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=GenerateModule, reason=None)
2017-10-24 16:55:54,564 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:55:54,564 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:55:54,564 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=GuiBackend, reason=None))
2017-10-24 16:55:54,564 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=GuiBackend, reason=None)
2017-10-24 16:55:54,565 - session_2017-10-24T16_53_13_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=CogloadModule, reason=None))
2017-10-24 16:55:54,565 - session_2017-10-24T16_53_13_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=CogloadModule, reason=None)

2017-10-24 12:18:34,631 - session_2017-10-24T12_18_34_0 - DEBUG - Backend()
2017-10-24 12:18:34,632 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.initialize()
2017-10-24 12:18:34,668 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.add_module(DmeModule, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f066b190cd0>>, False])
2017-10-24 12:18:34,668 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.add_module(GenerateModule, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f066b190cd0>>, 'eng'])
2017-10-24 12:18:34,668 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.add_module(DeviceManager, args=[])
2017-10-24 12:18:34,668 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.add_module(CogloadModule, args=[])
2017-10-24 12:18:34,668 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, __init__) (previous state was None)
2017-10-24 12:18:34,668 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.add_module(GuiBackend, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f066b190cd0>>, True, 'disabled'])
2017-10-24 12:18:34,668 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.add_module(IndependentGuiBackend, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f066b190cd0>>])
2017-10-24 12:18:34,668 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.add_module(InterpretModule, args=[<bound method Backend.get_device_manager of <tdm.backend.Backend object at 0x7f066b190cd0>>, <bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f066b190cd0>>, 'eng', False, True])
2017-10-24 12:18:34,668 - session_2017-10-24T12_18_34_0 - DEBUG - Backend initialized
2017-10-24 12:18:34,668 - session_2017-10-24T12_18_34_0 - DEBUG - Backend started in directory '/home/gusmatssar/recipedialogue/tdm'
2017-10-24 12:18:34,669 - session_2017-10-24T12_18_34_0 - DEBUG - Backend uses TDM version '5.0.0'
2017-10-24 12:18:34,669 - session_2017-10-24T12_18_34_0 - DEBUG - Backend uses backend config {u'active_ddd': u'recipehelp', u'ddds': [u'recipehelp'], u'asr': u'none', u'use_recognition_profile': False, u'use_word_list_correction': False, u'supported_languages': [u'eng'], u'repeat_questions': False}
2017-10-24 12:18:34,669 - session_2017-10-24T12_18_34_0 - DEBUG - Backend uses language 'eng'
2017-10-24 12:18:34,669 - session_2017-10-24T12_18_34_0 - DEBUG - running module InterpretModule
2017-10-24 12:18:34,669 - session_2017-10-24T12_18_34_0 - DEBUG - running module DmeModule
2017-10-24 12:18:34,671 - session_2017-10-24T12_18_34_0 - DEBUG - running module DeviceManager
2017-10-24 12:18:34,671 - session_2017-10-24T12_18_34_0 - DEBUG - running module GenerateModule
2017-10-24 12:18:34,672 - session_2017-10-24T12_18_34_0 - DEBUG - running module IndependentGuiBackend
2017-10-24 12:18:34,672 - session_2017-10-24T12_18_34_0 - DEBUG - running module GuiBackend
2017-10-24 12:18:34,672 - session_2017-10-24T12_18_34_0 - DEBUG - running module CogloadModule
2017-10-24 12:18:34,672 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:18:34,673 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:18:34,673 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(REGISTER_BACKEND, None, sender=Backend, reason=None))
2017-10-24 12:18:34,674 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(REGISTER_BACKEND, None, sender=Backend, reason=None)
2017-10-24 12:18:34,674 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "Backend", "_reason": null, "event_type": "REGISTER_BACKEND"}
2017-10-24 12:18:34,674 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:34,674 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:18:34,703 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": null, "_sender": "Frontend", "_reason": null, "event_type": "FRONTEND_READY"}
2017-10-24 12:18:34,704 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:18:34,704 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FRONTEND_READY, None, sender=Frontend, reason=None))
2017-10-24 12:18:34,705 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FRONTEND_READY, None, sender=Frontend, reason=None)
2017-10-24 12:18:34,705 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(BACKEND_READY, None, sender=Backend, reason=None))
2017-10-24 12:18:34,705 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(BACKEND_READY, None, sender=Backend, reason=None)
2017-10-24 12:18:34,705 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "Backend", "_reason": null, "event_type": "BACKEND_READY"}
2017-10-24 12:18:34,706 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:34,706 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:18:34,709 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": null, "_sender": "Frontend", "_reason": null, "event_type": "START"}
2017-10-24 12:18:34,709 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:18:34,709 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(START, None, sender=Frontend, reason=None))
2017-10-24 12:18:34,709 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(START, None, sender=Frontend, reason=None)
2017-10-24 12:18:34,709 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 12:18:34,710 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 12:18:34,710 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 12:18:34,710 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(START, None, sender=Frontend, reason=None))
2017-10-24 12:18:34,711 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840314.71
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(START, None, sender=Frontend, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: None
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([do(top)])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: None
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:34,711 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:18:34,711 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:18:34,711 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:18:34,714 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:34,714 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:18:34,714 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:18:34,716 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:34,716 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:18:34,716 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:18:34,716 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:18:34,717 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:18:34,717 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:18:34,717 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:18:34,717 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:18:34,717 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:18:34,717 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:18:34,717 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:18:34,717 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:34,717 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:18:34,717 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:18:34,717 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:34,718 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:34,718 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:34,718 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:18:34,718 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:18:34,718 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:34,718 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:18:34,718 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:34,718 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:34,722 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([do(top)])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 12:18:34,722 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:34,724 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 12:18:34,724 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:34,725 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:34,726 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:34,726 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:18:34,726 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:34,726 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:34,726 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:34,727 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:34,727 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:18:34,727 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:18:34,727 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:18:34,728 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840314.71
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(START, None, sender=Frontend, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: None
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: None
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:34,728 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:18:34,732 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.goals: stackset([])
+ tis.private.tmp.sys.goals: stackset([perform(top)])
?                                      ++++++++++++
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 12:18:34,732 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:34,734 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.goal(X))])
?                                                                  +++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:18:34,735 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:18:34,737 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
?                                       +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.goal(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 12:18:34,737 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:18:34,740 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
?                                                              +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:18:34,740 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:18:34,741 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:18:34,741 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:18:34,742 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:34,743 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:18:34,743 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:18:34,745 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: None
?                       ^^^^
+ tis.timeout.duration: 5.0
?                       ^^^
-- END TIS changes --
2017-10-24 12:18:34,745 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 12:18:34,746 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None))
2017-10-24 12:18:34,746 - session_2017-10-24T12_18_34_0 - DEBUG - DeviceManager handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 12:18:34,746 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 12:18:34,746 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 12:18:34,746 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 12:18:34,746 - session_2017-10-24T12_18_34_0 - DEBUG - CogloadModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 12:18:34,746 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None))
2017-10-24 12:18:34,747 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 12:18:34,747 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 12:18:34,747 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 12:18:34,747 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": {"ddd_name": "recipehelp", "language_code": "eng"}, "_sender": "DmeModule", "_reason": null, "event_type": "SET_DDD"}
2017-10-24 12:18:34,747 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:34,748 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:18:34,748 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:18:34,748 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:18:34,749 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:34,749 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None)))
2017-10-24 12:18:34,749 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None))
2017-10-24 12:18:34,749 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:18:34,749 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:34,750 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:34,750 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:34,750 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 12:18:34,751 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 12:18:34,751 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 12:18:34,751 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 12:18:34,751 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 12:18:34,751 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 12:18:34,752 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 12:18:34,752 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 12:18:34,752 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 12:18:34,754 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:34,755 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:34,755 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:18:34,755 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 12:18:34,756 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 12:18:34,756 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 12:18:34,756 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 12:18:34,756 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 12:18:34,756 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message []
2017-10-24 12:18:34,757 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 12:18:34,757 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:18:34,757 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 12:18:34,757 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 12:18:34,757 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:18:34,758 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:34,758 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 12:18:34,759 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 12:18:34,759 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:18:34,759 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:34,759 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:18:34,795 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:18:34,795 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:18:34,796 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 12:18:34,796 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 12:18:34,796 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:18:34,796 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 12:18:34,796 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 12:18:34,796 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 12:18:34,796 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 12:18:34,798 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840314.8
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:34,798 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:18:34,798 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:18:34,798 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:18:34,801 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: None
?                        ^^^^
+ tis.shared.lu.speaker: SYS
?                        ^^^
-- END TIS changes --
2017-10-24 12:18:34,801 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:18:34,801 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:18:34,803 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:34,803 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:18:34,803 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:18:34,803 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:18:34,804 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:18:34,804 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:18:34,804 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:18:34,804 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:18:34,804 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:18:34,804 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:18:34,804 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:18:34,804 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:34,808 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 12:18:34,808 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:18:34,809 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:34,809 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:18:34,809 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:34,809 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:34,812 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 12:18:34,813 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:18:34,813 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:34,813 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:18:34,813 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:34,813 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:18:34,813 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:18:34,813 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:34,813 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:34,813 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:34,813 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:18:34,814 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:18:34,814 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:34,814 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:18:34,814 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:34,814 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:34,814 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:18:34,814 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:34,814 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:34,815 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:34,815 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:34,815 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:18:34,817 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:34,817 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:18:34,817 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:18:34,817 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:18:34,817 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:18:34,817 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:18:34,818 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:34,818 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 12:18:34,819 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:18:34,819 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:18:34,819 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:18:39,548 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to a step"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 12:18:39,548 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:18:39,549 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None))
2017-10-24 12:18:39,549 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 12:18:39,549 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 12:18:39,549 - session_2017-10-24T12_18_34_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to a step"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 12:18:39,549 - session_2017-10-24T12_18_34_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 12:18:39,556 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 12:18:39,556 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])} for DDD 'recipehelp'
2017-10-24 12:18:39,556 - session_2017-10-24T12_18_34_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
2017-10-24 12:18:39,557 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:18:39,558 - session_2017-10-24T12_18_34_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AskMove": {"_type": "ask", "_ddd_name": "recipehelp", "_content": {"445f2b7f7189027ce75dac332c96dde0.WhQuestion": {"_type": "WHQ", "_content": {"24b0f339529d53d987534676834bafa7.LambdaAbstractedPredicateProposition": {"_ontology_name": "RecipehelpOntology", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.BuiltinSort": {"_dynamic": false, "_name": "string"}}, "name": "go_to_step", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to a step", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to a step"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to a step", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 12:18:39,558 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 12:18:39,559 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None))
2017-10-24 12:18:39,560 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:18:39,560 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 12:18:39,560 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 12:18:39,561 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 12:18:39,562 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:39,563 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 12:18:39,563 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:18:39,563 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:18:39,564 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:18:39,564 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:18:39,565 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840319.56
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:39,565 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:18:39,571 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
-- END TIS changes --
2017-10-24 12:18:39,571 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:18:39,576 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                 ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                 ^
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
?                                                                                                                                ^
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
?                                                                                                                                ^
-- END TIS changes --
2017-10-24 12:18:39,577 - session_2017-10-24T12_18_34_0 - INFO - hypotheses reranking had no effect
2017-10-24 12:18:39,577 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:18:39,581 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
?                                 -----------------------------------------------              ^^                                       ^^                              ^
+ tis.latest_moves: OpenQueue([#, Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')])
?                                               ^^^^^^^^                                      + ^                              ^                 +++++++++++++++++++++++++++
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 12:18:39,582 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:18:39,589 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 12:18:39,589 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:18:39,589 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:18:39,592 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:39,592 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:18:39,592 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:18:39,597 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([])
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
- tis.private.tmp.usr.plan: Stack([])
+ tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
- tis.private.tmp.usr.qud: stackset([])
+ tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                    ++++++++++
-- END TIS changes --
2017-10-24 12:18:39,597 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:18:39,597 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:18:39,597 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:18:39,597 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:18:39,598 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:18:39,598 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
2017-10-24 12:18:39,598 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:18:39,599 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
2017-10-24 12:18:39,599 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:39,604 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateUsrAsk
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
- tis.private.nim: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
- tis.shared.qud: stackset([?X.goal(X)])
+ tis.shared.qud: stackset([?X.go_to_step(X), ?X.goal(X)])
?                                ++++++++++++++++++
-- END TIS changes --
2017-10-24 12:18:39,605 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:18:39,605 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:39,608 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateISSUES2
-- BEGIN TIS changes --
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                                                        --------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 12:18:39,608 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:18:39,609 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:39,612 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: findIssuePlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                                                   - ^ ^ -----------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^ ^^
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 12:18:39,612 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:18:39,613 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:18:39,613 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:39,613 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:39,613 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:39,613 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:18:39,614 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:18:39,614 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:39,614 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:18:39,614 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:39,614 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:39,614 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:18:39,617 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.go_to_step(X), ?X.goal(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 12:18:39,617 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:39,617 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:39,618 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:39,618 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:39,618 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:18:39,618 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None)
2017-10-24 12:18:39,618 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:18:39,618 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:18:39,619 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840319.56
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:39,619 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:18:39,625 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                ++++++++++++++++++++++++++++++++
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                                      +++++++++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
+ tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 12:18:39,625 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:39,628 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                                                                                  +++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:18:39,628 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:18:39,631 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
-- END TIS changes --
2017-10-24 12:18:39,631 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:18:39,631 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:18:39,634 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.step_to_choose(X))])
-- END TIS changes --
2017-10-24 12:18:39,634 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:18:39,638 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
?                                                                                    +++++++++++++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.step_to_choose(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:18:39,638 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:18:39,638 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:18:39,638 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:18:39,640 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:39,640 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:18:39,640 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:18:39,643 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:39,644 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')])
2017-10-24 12:18:39,644 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:18:39,644 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None))
2017-10-24 12:18:39,644 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None)
2017-10-24 12:18:39,644 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to a step", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 12:18:39,645 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:39,645 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:18:39,645 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:18:39,645 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:18:39,646 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:39,646 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)))
2017-10-24 12:18:39,647 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:18:39,647 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:18:39,648 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:39,648 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:39,649 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:39,649 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={})
2017-10-24 12:18:39,649 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 12:18:39,650 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 12:18:39,650 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 12:18:39,650 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 12:18:39,650 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 12:18:39,650 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 12:18:39,651 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 12:18:39,651 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 12:18:39,651 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 12:18:39,651 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 12:18:39,652 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp') generated as u'Which step?'
2017-10-24 12:18:39,652 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None)
2017-10-24 12:18:39,653 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:39,656 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:39,656 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:18:39,656 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')])
2017-10-24 12:18:39,656 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={})
2017-10-24 12:18:39,656 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 12:18:39,656 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 12:18:39,656 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 12:18:39,657 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 12:18:39,657 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 12:18:39,657 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message []
2017-10-24 12:18:39,657 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 12:18:39,657 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:18:39,658 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None))
2017-10-24 12:18:39,658 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None)
2017-10-24 12:18:39,658 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "", "Which step?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:18:39,658 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:39,658 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 12:18:39,659 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 12:18:39,659 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:18:39,661 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:39,661 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:18:39,681 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["", "", "Which step?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:18:39,681 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:18:39,681 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, , Which step?], sender=TextOutputComponent, reason=None))
2017-10-24 12:18:39,681 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, , Which step?], sender=TextOutputComponent, reason=None)
2017-10-24 12:18:39,681 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:18:39,681 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 12:18:39,681 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 12:18:39,682 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 12:18:39,682 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None))
2017-10-24 12:18:39,683 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840319.68
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:39,683 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:18:39,683 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:18:39,684 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:18:39,690 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
?            ^^
- tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:18:39,690 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:18:39,690 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:18:39,693 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:39,693 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:18:39,693 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:18:39,693 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:18:39,693 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:18:39,693 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:18:39,694 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:18:39,694 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:18:39,694 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:18:39,694 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:18:39,694 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:18:39,694 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:39,698 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 12:18:39,699 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:18:39,699 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:39,699 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:18:39,699 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:39,699 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:39,703 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
?                                                                       +++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:18:39,703 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:18:39,703 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:39,703 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:18:39,703 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:39,704 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:39,707 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.step_to_choose(X)])
-- END TIS changes --
2017-10-24 12:18:39,707 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:18:39,707 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:39,707 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:18:39,707 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:39,707 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:18:39,708 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:18:39,708 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:39,708 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:39,708 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:39,708 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:18:39,708 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:18:39,708 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:39,708 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:18:39,708 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:39,709 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:39,709 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:18:39,709 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:39,709 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:39,709 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:39,709 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:39,710 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:18:39,712 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:39,712 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:18:39,712 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:18:39,712 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:18:39,712 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:18:39,712 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:18:39,713 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:39,713 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 12:18:39,713 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:18:39,714 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:18:39,714 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:18:47,788 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "step one"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 12:18:47,788 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:18:47,789 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None))
2017-10-24 12:18:47,789 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 12:18:47,789 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 12:18:47,789 - session_2017-10-24T12_18_34_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "step one"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 12:18:47,790 - session_2017-10-24T12_18_34_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 12:18:47,793 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 12:18:47,794 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])} for DDD 'recipehelp'
2017-10-24 12:18:47,794 - session_2017-10-24T12_18_34_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
2017-10-24 12:18:47,794 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:18:47,795 - session_2017-10-24T12_18_34_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "step one"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "step one", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.CustomSort": {"_ontology_name": "RecipehelpOntology", "_dynamic": false, "_name": "step"}}, "value": "step1"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "step one", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 12:18:47,796 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 12:18:47,796 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None))
2017-10-24 12:18:47,797 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:18:47,797 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 12:18:47,797 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 12:18:47,797 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 12:18:47,798 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:47,799 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 12:18:47,799 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:18:47,799 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:18:47,800 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:18:47,801 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:18:47,802 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840327.8
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.step_to_choose(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:47,802 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:18:47,806 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
-- END TIS changes --
2017-10-24 12:18:47,806 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:18:47,811 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
- tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
-- END TIS changes --
2017-10-24 12:18:47,815 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^^
-- END TIS changes --
2017-10-24 12:18:47,816 - session_2017-10-24T12_18_34_0 - INFO - hypotheses reranking had no effect
2017-10-24 12:18:47,816 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:18:47,820 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')])
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 12:18:47,820 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:18:47,824 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
-- END TIS changes --
2017-10-24 12:18:47,825 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:18:47,825 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:18:47,827 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:47,827 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:18:47,827 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:18:47,833 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                                        ^^
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                                                      +++++++++++++++++++++++++++++++  ^^^^^^^^
- tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
+ tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
- tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                       ^ ^^
+ tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
?                                       ^^^^^^ ^^^^^^^
-- END TIS changes --
2017-10-24 12:18:47,834 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:18:47,834 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:18:47,834 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:18:47,835 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:18:47,835 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:18:47,835 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
2017-10-24 12:18:47,835 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:18:47,836 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
2017-10-24 12:18:47,836 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:47,840 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {step_to_choose(step1)}
- tis.shared.com: {}
+ tis.shared.com: {step_to_choose(step1)}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
-- END TIS changes --
2017-10-24 12:18:47,840 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:18:47,841 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:47,844 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {step_to_choose(step1)}
+ tis.shared.com: {step_to_choose(step1), resolved(?X.step_to_choose(X))}
- tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ------------------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 12:18:47,844 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:18:47,848 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
?                          -------------------------------
+ tis.private.plan: Stack([device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 12:18:47,848 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:47,848 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:18:47,848 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:18:47,848 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:47,849 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:47,849 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:47,849 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:18:47,849 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:18:47,849 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:47,849 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:18:47,849 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:47,853 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {}
+ tis.private.bel: {go_to_step("chose a step")}
- tis.private.plan: Stack([device_query(?X.go_to_step(X)), forget(step_to_choose)])
?                          --------------------------------
+ tis.private.plan: Stack([forget(step_to_choose)])
-- END TIS changes --
2017-10-24 12:18:47,854 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:47,854 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:47,856 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(step_to_choose)])
+ tis.private.plan: Stack([])
- tis.shared.com: {step_to_choose(step1), resolved(?X.step_to_choose(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 12:18:47,857 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:47,857 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:47,857 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:47,857 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:18:47,860 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.step_to_choose(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 12:18:47,860 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:47,860 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:47,860 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:47,861 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:47,861 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:18:47,861 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 12:18:47,861 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None)
2017-10-24 12:18:47,861 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 12:18:47,861 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:18:47,862 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840327.8
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')])
tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.bel: {go_to_step("chose a step")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:47,862 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:18:47,867 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                         ---------------------------------
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.bel: {go_to_step("chose a step")}
- tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 12:18:47,867 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:47,869 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                                                 +++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:18:47,870 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:18:47,874 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
-- END TIS changes --
2017-10-24 12:18:47,874 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:18:47,877 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose a step")))])
- tis.private.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:18:47,877 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:18:47,877 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:18:47,877 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:18:47,879 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:47,879 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:18:47,880 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:18:47,882 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 12:18:47,882 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')])
2017-10-24 12:18:47,883 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:18:47,884 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None))
2017-10-24 12:18:47,884 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 12:18:47,884 - session_2017-10-24T12_18_34_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 12:18:47,884 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None))
2017-10-24 12:18:47,884 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None)
2017-10-24 12:18:47,884 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": "step one", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 12:18:47,885 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:47,885 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None))
2017-10-24 12:18:47,885 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 12:18:47,885 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "go_to_step", "grammar_entry": null, "value": "chose a step"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:18:47,887 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:47,887 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)))
2017-10-24 12:18:47,887 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:18:47,888 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:18:47,888 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:47,888 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:47,889 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose a step")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:47,889 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp'), facts={go_to_step("chose a step")})
2017-10-24 12:18:47,890 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')
2017-10-24 12:18:47,890 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')
2017-10-24 12:18:47,890 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp') generated as u'Ok chose a step.'
2017-10-24 12:18:47,890 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose a step.], sender=GenerateModule, reason=None)
2017-10-24 12:18:47,891 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose a step")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:47,892 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok chose a step.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:18:47,893 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose a step")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:47,893 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:18:47,894 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')])
2017-10-24 12:18:47,894 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp'), facts={go_to_step("chose a step")})
2017-10-24 12:18:47,895 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')
2017-10-24 12:18:47,895 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.Popup instance at 0x7f066825bcb0>]
2017-10-24 12:18:47,896 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f066825bcb0>], sender=GuiBackend, reason=None)
2017-10-24 12:18:47,896 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:18:47,896 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose a step.], sender=GenerateModule, reason=None))
2017-10-24 12:18:47,896 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose a step.], sender=GenerateModule, reason=None)
2017-10-24 12:18:47,896 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok chose a step."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:18:47,896 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:47,897 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok chose a step.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 12:18:47,897 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok chose a step.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:18:47,897 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok chose a step."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 12:18:47,898 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:47,898 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f066825bcb0>], sender=GuiBackend, reason=None))
2017-10-24 12:18:47,898 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f066825bcb0>], sender=GuiBackend, reason=None)
2017-10-24 12:18:47,899 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok chose a step."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:18:47,900 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:47,900 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:18:47,909 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok chose a step."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:18:47,910 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:18:47,911 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok chose a step.], sender=TextOutputComponent, reason=None))
2017-10-24 12:18:47,911 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok chose a step.], sender=TextOutputComponent, reason=None)
2017-10-24 12:18:47,911 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:18:47,911 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
2017-10-24 12:18:47,911 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
2017-10-24 12:18:47,911 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
2017-10-24 12:18:47,912 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None))
2017-10-24 12:18:47,913 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840327.91
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose a step")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {go_to_step("chose a step")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose a step")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:47,913 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:18:47,913 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:18:47,913 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:18:47,919 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
?            ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:18:47,919 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:18:47,919 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:18:47,922 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:47,922 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:18:47,922 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:18:47,922 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:18:47,923 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:18:47,923 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:18:47,923 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:18:47,923 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:18:47,923 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:18:47,923 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:18:47,923 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:18:47,923 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:47,926 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {go_to_step("chose a step")}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:18:47,926 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:18:47,926 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:47,929 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {go_to_step("chose a step")}
+ tis.shared.com: {go_to_step("chose a step"), resolved(?X.go_to_step(X))}
?                                            ++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                             ---------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 12:18:47,930 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:18:47,930 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:47,930 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:18:47,930 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:18:47,930 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:47,930 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:47,930 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:47,930 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:18:47,930 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:18:47,930 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:47,931 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:18:47,931 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:47,931 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:47,931 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:18:47,931 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:47,931 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:47,931 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:47,932 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:47,932 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:18:47,934 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 12:18:47,934 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 12:18:47,934 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:18:47,934 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None))
2017-10-24 12:18:47,935 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 12:18:47,935 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "go_to_step", "grammar_entry": null, "value": "chose a step"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:18:47,935 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:47,935 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 12:18:47,936 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:18:47,936 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:18:47,937 - session_2017-10-24T12_18_34_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f0668a9f758>:1.0
2017-10-24 12:18:47,937 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:18:48,938 - session_2017-10-24T12_18_34_0 - DEBUG - Timeout fired
2017-10-24 12:18:48,938 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:18:48,939 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:18:48,939 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:18:48,939 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:18:48,940 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840328.94
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose a step")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {go_to_step("chose a step")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose a step")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {go_to_step("chose a step"), resolved(?X.go_to_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:48,940 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:18:48,940 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:18:48,943 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:18:48,943 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:18:48,947 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
-- END TIS changes --
2017-10-24 12:18:48,947 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:18:48,947 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:18:48,950 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:48,950 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:18:48,950 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:18:48,950 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:18:48,950 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:18:48,950 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:18:48,950 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:18:48,951 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:18:48,951 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:18:48,951 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:18:48,951 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:18:48,951 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:48,951 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:18:48,952 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:18:48,952 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:48,952 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:48,952 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:48,952 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:18:48,952 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:18:48,952 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:48,952 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:18:48,952 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:48,956 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 12:18:48,956 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:48,956 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:48,959 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {go_to_step("chose a step")}
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {go_to_step("chose a step"), resolved(?X.go_to_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 12:18:48,959 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:48,959 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:48,959 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:48,959 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:18:48,959 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:48,960 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:48,960 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:48,960 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:48,960 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:18:48,961 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:18:48,961 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:18:48,962 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840328.94
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose a step")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:48,962 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:18:48,966 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^  ^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                +++ ^^^^ +++ ^^^^^^^
- tis.private.tmp.sys.bel: {go_to_step("chose a step")}
+ tis.private.tmp.sys.bel: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                                      ---------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 12:18:48,966 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:48,969 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:18:48,970 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:18:48,972 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 12:18:48,972 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:18:48,975 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:18:48,975 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:18:48,975 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:18:48,975 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:18:48,977 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:48,977 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:18:48,978 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:18:48,980 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 12:18:48,980 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 12:18:48,980 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:18:51,869 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 12:18:51,870 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:18:51,870 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 12:18:51,870 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 12:18:51,870 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 12:18:51,871 - session_2017-10-24T12_18_34_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 12:18:51,871 - session_2017-10-24T12_18_34_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 12:18:51,872 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 12:18:51,872 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 12:18:51,873 - session_2017-10-24T12_18_34_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 12:18:51,873 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:18:51,873 - session_2017-10-24T12_18_34_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 12:18:51,873 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 12:18:51,873 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:18:51,874 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:18:51,874 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:18:51,874 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:51,874 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 12:18:51,875 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:18:51,875 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:18:51,875 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:51,876 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:51,877 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:51,877 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 12:18:51,877 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 12:18:51,877 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 12:18:51,877 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 12:18:51,877 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 12:18:51,878 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 12:18:51,878 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 12:18:51,878 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 12:18:51,878 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 12:18:51,879 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:51,880 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:51,881 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:18:51,881 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 12:18:51,881 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 12:18:51,881 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 12:18:51,881 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 12:18:51,881 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 12:18:51,882 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f066825a170>]
2017-10-24 12:18:51,882 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f066825a170>], sender=GuiBackend, reason=None)
2017-10-24 12:18:51,882 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:18:51,882 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 12:18:51,882 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:18:51,882 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 12:18:51,883 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 12:18:51,883 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 12:18:51,883 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:51,883 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 12:18:51,883 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 12:18:51,884 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:18:51,884 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:51,884 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f066825a170>], sender=GuiBackend, reason=None))
2017-10-24 12:18:51,885 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f066825a170>], sender=GuiBackend, reason=None)
2017-10-24 12:18:51,885 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:18:51,885 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:51,886 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:18:51,919 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:18:51,920 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:18:51,920 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 12:18:51,920 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 12:18:51,920 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:18:51,921 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 12:18:51,921 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 12:18:51,921 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 12:18:51,921 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 12:18:51,922 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840331.92
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:51,923 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:18:51,923 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:18:51,923 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:18:51,927 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 12:18:51,927 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:18:51,927 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:18:51,929 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:51,930 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:18:51,930 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:18:51,930 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:18:51,930 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:18:51,930 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:18:51,930 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:18:51,930 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:18:51,930 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:18:51,930 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:18:51,930 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:18:51,931 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:51,935 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 12:18:51,935 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:18:51,935 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:51,935 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:18:51,936 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:51,936 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:51,939 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 12:18:51,939 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:18:51,939 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:51,939 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:18:51,939 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:51,940 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:18:51,940 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:18:51,940 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:51,940 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:51,940 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:51,940 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:18:51,940 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:18:51,940 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:51,940 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:18:51,940 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:51,941 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:51,941 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:18:51,941 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:51,941 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:51,941 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:51,942 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:51,942 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:18:51,945 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 12:18:51,945 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:18:51,945 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:18:51,945 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:18:51,945 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:18:51,946 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:18:51,946 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:51,946 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 12:18:51,946 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:18:51,947 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:18:51,947 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:18:51,947 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:18:51,948 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:18:51,948 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:18:51,949 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840331.95
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:51,949 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:18:51,953 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 12:18:51,953 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:18:51,957 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
- tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                              ^
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                              ^
-- END TIS changes --
2017-10-24 12:18:51,957 - session_2017-10-24T12_18_34_0 - INFO - hypotheses reranking had no effect
2017-10-24 12:18:51,957 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:18:51,962 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 12:18:51,962 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:18:51,969 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 12:18:51,969 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:18:51,970 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:18:51,972 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:51,972 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:18:51,973 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:18:51,978 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                                                      -------------------------------  ^^^^^^^^
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                                        ^^
- tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
+ tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
- tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
?                                       ^^^^^^ ^^^^^^^
+ tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                       ^ ^^
-- END TIS changes --
2017-10-24 12:18:51,978 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:18:51,978 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:18:51,978 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:18:51,978 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:18:51,978 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:18:51,978 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
2017-10-24 12:18:51,978 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:18:51,978 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
2017-10-24 12:18:51,979 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:51,982 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateUsrRequest
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
?                          ++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 12:18:51,982 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:18:51,982 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:51,985 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateISSUES3
-- BEGIN TIS changes --
- tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                                                  --------------------------
+ tis.shared.goals: stackset([perform(go_to_next), perform(top)])
-- END TIS changes --
2017-10-24 12:18:51,985 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:18:51,985 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:51,988 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
+ tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
-- END TIS changes --
2017-10-24 12:18:51,988 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:18:51,989 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:18:51,989 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:51,989 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:51,989 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:51,989 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:18:51,989 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:18:51,989 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:51,989 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:18:51,989 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:51,992 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.bel: {}
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 12:18:51,992 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:51,993 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:51,993 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:51,993 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:18:51,995 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.goal(X)])
?                           ----------
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 12:18:51,995 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:51,996 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:51,996 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:51,996 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:51,996 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:18:51,996 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 12:18:51,996 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:18:51,996 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:18:51,997 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840331.95
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:51,997 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:18:52,001 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                              +++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 12:18:52,001 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:18:52,004 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
-- END TIS changes --
2017-10-24 12:18:52,004 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:18:52,007 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:18:52,007 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:18:52,007 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:18:52,007 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:18:52,009 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:52,009 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:18:52,010 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:18:52,012 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 12:18:52,012 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 12:18:52,013 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:18:52,013 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 12:18:52,013 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 12:18:52,013 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 12:18:52,013 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:52,013 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:18:52,014 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:18:52,014 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:18:52,015 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:52,015 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 12:18:52,016 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:18:52,016 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:18:52,016 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:52,016 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:52,017 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:52,017 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 12:18:52,017 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 12:18:52,018 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 12:18:52,018 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 12:18:52,018 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 12:18:52,018 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 12:18:52,018 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 12:18:52,019 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp') generated as u'Went to next'
2017-10-24 12:18:52,019 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None)
2017-10-24 12:18:52,020 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:52,021 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:18:52,021 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:52,022 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:18:52,022 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 12:18:52,022 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 12:18:52,022 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 12:18:52,022 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 12:18:52,022 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 12:18:52,023 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f0668233758>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825a7e8>]
2017-10-24 12:18:52,023 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f0668233758>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825a7e8>], sender=GuiBackend, reason=None)
2017-10-24 12:18:52,023 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:18:52,023 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None))
2017-10-24 12:18:52,023 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None)
2017-10-24 12:18:52,023 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Went to next"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:18:52,024 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:52,024 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None))
2017-10-24 12:18:52,024 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:18:52,024 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Went to next"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 12:18:52,025 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:52,026 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f0668233758>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825a7e8>], sender=GuiBackend, reason=None))
2017-10-24 12:18:52,026 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f0668233758>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825a7e8>], sender=GuiBackend, reason=None)
2017-10-24 12:18:52,026 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "go_to_next", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Went to next"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:18:52,026 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:52,027 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:18:52,045 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Went to next"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:18:52,045 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:18:52,046 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Went to next], sender=TextOutputComponent, reason=None))
2017-10-24 12:18:52,046 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Went to next], sender=TextOutputComponent, reason=None)
2017-10-24 12:18:52,046 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:18:52,046 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 12:18:52,046 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 12:18:52,047 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 12:18:52,047 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 12:18:52,048 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840332.05
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:52,048 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:18:52,048 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:18:52,049 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:18:52,054 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:18:52,054 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:18:52,054 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:18:52,057 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 12:18:52,057 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:18:52,057 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:18:52,057 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:18:52,058 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:18:52,058 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:18:52,058 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:18:52,058 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:18:52,058 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:18:52,058 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:18:52,058 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:18:52,058 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:52,062 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 12:18:52,062 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:18:52,062 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:52,062 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:18:52,063 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:52,063 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:52,065 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {device_activity_terminated(go_to_next)}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:18:52,066 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:18:52,066 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:52,069 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
- tis.shared.goals: stackset([perform(go_to_next), perform(top)])
?                                     ---------------------
+ tis.shared.goals: stackset([perform(top)])
- tis.shared.previous_goal: None
?                           ^
+ tis.shared.previous_goal: perform(go_to_next)
?                           ^^^^ +++++++++  +++
-- END TIS changes --
2017-10-24 12:18:52,069 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:18:52,070 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:52,070 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:18:52,070 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:18:52,070 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:52,070 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:52,070 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:52,070 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:18:52,070 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:18:52,070 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:52,070 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:18:52,070 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:52,074 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
?                          ^ ^^^^^ ^^^^^^                -
+ tis.private.plan: Stack([device_query(?X.say_step(X))])
?                          ^^^^^^^^ ^ ^
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:18:52,074 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:52,074 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:52,077 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
?                                                                                                              +++++++++++++++++++++++++++
- tis.private.plan: Stack([device_query(?X.say_step(X))])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 12:18:52,077 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:52,077 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:52,078 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:52,078 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:18:52,078 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:52,078 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:52,078 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:52,078 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:52,079 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:18:52,081 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 12:18:52,081 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: other example}], sender=DmeModule, reason=None)
2017-10-24 12:18:52,081 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:18:52,082 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840332.05
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next)}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:52,083 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:18:52,089 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
?                                                                                                                      +++++++++++++++++++++++++++
- tis.private.tmp.sys.com: {}
+ tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
- tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                       ------ ^^^^^^^^^^
+ tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      ++++++++++++++++++  ^^
-- END TIS changes --
2017-10-24 12:18:52,089 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:52,091 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), respond(?X.say_step(X))])
?                                                                  +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:18:52,092 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:18:52,094 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), respond(?X.say_step(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
-- END TIS changes --
2017-10-24 12:18:52,094 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:18:52,097 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("other example")))])
- tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:18:52,097 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:18:52,097 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:18:52,097 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:18:52,099 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:52,099 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:18:52,100 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:18:52,102 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:52,102 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')])
2017-10-24 12:18:52,102 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 12:18:52,102 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: other example}], sender=DmeModule, reason=None))
2017-10-24 12:18:52,103 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: other example}], sender=DmeModule, reason=None)
2017-10-24 12:18:52,103 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "other example"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:18:52,103 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:52,104 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)))
2017-10-24 12:18:52,104 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 12:18:52,104 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:18:52,105 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:52,105 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:52,106 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:52,106 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("other example")), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")})
2017-10-24 12:18:52,106 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("other example")), ddd_name=u'recipehelp')
2017-10-24 12:18:52,107 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(say_step("other example")), ddd_name=u'recipehelp')
2017-10-24 12:18:52,107 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move Move(answer(say_step("other example")), ddd_name=u'recipehelp') generated as u'Ok other example.'
2017-10-24 12:18:52,107 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok other example.], sender=GenerateModule, reason=None)
2017-10-24 12:18:52,108 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:52,109 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok other example.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:18:52,110 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:52,111 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:18:52,111 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')])
2017-10-24 12:18:52,111 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("other example")), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")})
2017-10-24 12:18:52,111 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("other example")), ddd_name=u'recipehelp')
2017-10-24 12:18:52,112 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f066825aa28>, <tdm.tdm_gui_protocol.Popup instance at 0x7f0668233050>]
2017-10-24 12:18:52,112 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f066825aa28>, <tdm.tdm_gui_protocol.Popup instance at 0x7f0668233050>], sender=GuiBackend, reason=None)
2017-10-24 12:18:52,112 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:18:52,112 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok other example.], sender=GenerateModule, reason=None))
2017-10-24 12:18:52,112 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok other example.], sender=GenerateModule, reason=None)
2017-10-24 12:18:52,112 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok other example."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:18:52,113 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:52,113 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok other example.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 12:18:52,113 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok other example.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:18:52,113 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok other example."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 12:18:52,114 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:52,114 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f066825aa28>, <tdm.tdm_gui_protocol.Popup instance at 0x7f0668233050>], sender=GuiBackend, reason=None))
2017-10-24 12:18:52,114 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f066825aa28>, <tdm.tdm_gui_protocol.Popup instance at 0x7f0668233050>], sender=GuiBackend, reason=None)
2017-10-24 12:18:52,114 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok other example."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:18:52,115 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:52,116 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:18:52,151 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok other example."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:18:52,151 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:18:52,151 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok other example.], sender=TextOutputComponent, reason=None))
2017-10-24 12:18:52,152 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok other example.], sender=TextOutputComponent, reason=None)
2017-10-24 12:18:52,152 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:18:52,152 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok other example.], sender=TurnManager, reason=None)
2017-10-24 12:18:52,152 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok other example.], sender=TurnManager, reason=None)
2017-10-24 12:18:52,152 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok other example.], sender=TurnManager, reason=None)
2017-10-24 12:18:52,152 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok other example.], sender=TurnManager, reason=None))
2017-10-24 12:18:52,154 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840332.15
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok other example.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("other example")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next)}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:52,154 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:18:52,154 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:18:52,154 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:18:52,158 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 12:18:52,158 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:18:52,158 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:18:52,161 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:52,161 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:18:52,162 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:18:52,162 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:18:52,162 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:18:52,162 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:18:52,162 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:18:52,162 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:18:52,162 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:18:52,162 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:18:52,162 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:18:52,162 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:52,166 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {device_activity_terminated(go_to_next)}
+ tis.shared.com: {device_activity_terminated(go_to_next), say_step("other example")}
?                                                        +++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:18:52,166 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:18:52,166 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:52,170 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), say_step("other example")}
+ tis.shared.com: {device_activity_terminated(go_to_next), say_step("other example"), resolved(?X.say_step(X))}
?                                                                                   ++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             -------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 12:18:52,170 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:18:52,170 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:52,170 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:18:52,170 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:18:52,170 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:52,170 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:52,170 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:52,171 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:18:52,171 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:18:52,171 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:52,171 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:18:52,171 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:52,171 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:52,171 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:18:52,171 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:52,172 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:52,172 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:52,172 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:52,172 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:18:52,175 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:52,175 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: other example}], sender=DmeModule, reason=None)
2017-10-24 12:18:52,175 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok other example.], latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:18:52,175 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: other example}], sender=DmeModule, reason=None))
2017-10-24 12:18:52,175 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: other example}], sender=DmeModule, reason=None)
2017-10-24 12:18:52,175 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "other example"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:18:52,176 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:52,176 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok other example.], latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 12:18:52,176 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok other example.], latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:18:52,177 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok other example.], latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:18:52,177 - session_2017-10-24T12_18_34_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f0668a8a7e8>:1.0
2017-10-24 12:18:52,177 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:18:53,177 - session_2017-10-24T12_18_34_0 - DEBUG - Timeout fired
2017-10-24 12:18:53,177 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:18:53,178 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:18:53,178 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:18:53,178 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:18:53,179 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840333.18
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("other example")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next), say_step("other example"), resolved(?X.say_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:53,179 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:18:53,179 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:18:53,181 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:18:53,181 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:18:53,186 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:18:53,186 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:18:53,186 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:18:53,189 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:53,189 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:18:53,189 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:18:53,189 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:18:53,189 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:18:53,189 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:18:53,189 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:18:53,189 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:18:53,190 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:18:53,190 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:18:53,190 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:18:53,190 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:53,190 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:18:53,190 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:18:53,190 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:53,190 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:53,190 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:53,190 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:18:53,191 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:18:53,191 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:53,191 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:18:53,191 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:53,194 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 12:18:53,194 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:53,194 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:53,197 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {device_activity_terminated(go_to_next), say_step("other example"), resolved(?X.say_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 12:18:53,197 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:53,197 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:53,198 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:53,198 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:18:53,198 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:53,198 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:53,198 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:53,198 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:53,199 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:18:53,199 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:18:53,199 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:18:53,200 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840333.18
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:53,200 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:18:53,205 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
?                                                                ^ ^^ ^^^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                ^^^^^^^^^^^^ ^^^^^ ^
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
- tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
+ tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.com: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      -------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 12:18:53,206 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:53,208 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:18:53,209 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:18:53,211 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 12:18:53,211 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:18:53,214 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:18:53,214 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:18:53,214 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:18:53,214 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:18:53,216 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:53,216 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:18:53,216 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:18:53,219 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 12:18:53,219 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 12:18:53,219 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:18:59,332 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 12:18:59,333 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:18:59,333 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 12:18:59,333 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 12:18:59,334 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 12:18:59,334 - session_2017-10-24T12_18_34_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 12:18:59,334 - session_2017-10-24T12_18_34_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 12:18:59,335 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 12:18:59,335 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 12:18:59,335 - session_2017-10-24T12_18_34_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 12:18:59,335 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:18:59,336 - session_2017-10-24T12_18_34_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 12:18:59,336 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 12:18:59,336 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:18:59,336 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:18:59,336 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:18:59,337 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:59,337 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 12:18:59,337 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:18:59,338 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:18:59,338 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:59,338 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:59,339 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:59,340 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 12:18:59,340 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 12:18:59,340 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 12:18:59,340 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 12:18:59,340 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 12:18:59,341 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 12:18:59,341 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 12:18:59,341 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 12:18:59,341 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 12:18:59,342 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:59,344 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:59,344 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:18:59,344 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 12:18:59,345 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 12:18:59,345 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 12:18:59,345 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 12:18:59,345 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 12:18:59,345 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0668a9fd40>]
2017-10-24 12:18:59,345 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0668a9fd40>], sender=GuiBackend, reason=None)
2017-10-24 12:18:59,346 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:18:59,346 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 12:18:59,346 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:18:59,346 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 12:18:59,346 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 12:18:59,346 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 12:18:59,347 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:59,347 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 12:18:59,347 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 12:18:59,347 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:18:59,348 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:59,348 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0668a9fd40>], sender=GuiBackend, reason=None))
2017-10-24 12:18:59,348 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0668a9fd40>], sender=GuiBackend, reason=None)
2017-10-24 12:18:59,348 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:18:59,349 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:59,349 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:18:59,358 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:18:59,358 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:18:59,359 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 12:18:59,359 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 12:18:59,359 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:18:59,359 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 12:18:59,359 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 12:18:59,359 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 12:18:59,360 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 12:18:59,361 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840339.36
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:59,361 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:18:59,362 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:18:59,362 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:18:59,365 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 12:18:59,365 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:18:59,366 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:18:59,368 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:59,368 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:18:59,368 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:18:59,368 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:18:59,368 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:18:59,368 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:18:59,368 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:18:59,368 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:18:59,368 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:18:59,369 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:18:59,369 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:18:59,369 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:59,373 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 12:18:59,373 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:18:59,374 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:59,374 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:18:59,374 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:59,374 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:59,377 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 12:18:59,377 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:18:59,377 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:59,377 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:18:59,377 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:59,377 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:18:59,377 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:18:59,378 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:59,378 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:59,378 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:59,378 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:18:59,378 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:18:59,378 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:59,378 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:18:59,378 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:59,378 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:59,378 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:18:59,379 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:59,379 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:59,379 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:59,379 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:59,379 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:18:59,381 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 12:18:59,382 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:18:59,382 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:18:59,382 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:18:59,382 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:18:59,382 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:18:59,383 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:59,383 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 12:18:59,384 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:18:59,384 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:18:59,384 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:18:59,384 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:18:59,385 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:18:59,385 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:18:59,386 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840339.39
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:59,386 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:18:59,390 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 12:18:59,390 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:18:59,394 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
- tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                              ^
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                              ^
-- END TIS changes --
2017-10-24 12:18:59,395 - session_2017-10-24T12_18_34_0 - INFO - hypotheses reranking had no effect
2017-10-24 12:18:59,395 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:18:59,400 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 12:18:59,400 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:18:59,407 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 12:18:59,407 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:18:59,407 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:18:59,410 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:59,410 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:18:59,410 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:18:59,413 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:59,413 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:18:59,413 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:18:59,414 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:18:59,414 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:18:59,414 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:18:59,414 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
2017-10-24 12:18:59,414 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:18:59,414 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
2017-10-24 12:18:59,414 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:59,418 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateUsrRequest
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
?                          ++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 12:18:59,418 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:18:59,418 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:59,421 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateISSUES3
-- BEGIN TIS changes --
- tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                                                  --------------------------
+ tis.shared.goals: stackset([perform(go_to_next), perform(top)])
-- END TIS changes --
2017-10-24 12:18:59,421 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:18:59,421 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:59,425 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
+ tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
-- END TIS changes --
2017-10-24 12:18:59,425 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:18:59,425 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:18:59,425 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:59,425 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:59,425 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:59,425 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:18:59,425 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:18:59,425 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:59,425 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:18:59,426 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:59,428 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.bel: {}
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 12:18:59,428 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:59,428 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:59,429 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:59,429 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:18:59,431 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.goal(X)])
?                           ----------
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 12:18:59,431 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:59,431 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:59,432 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:59,432 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:59,432 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:18:59,432 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 12:18:59,432 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:18:59,432 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:18:59,434 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840339.39
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:59,434 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:18:59,437 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                              +++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 12:18:59,437 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:18:59,441 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
-- END TIS changes --
2017-10-24 12:18:59,441 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:18:59,443 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:18:59,443 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:18:59,443 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:18:59,443 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:18:59,446 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:59,446 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:18:59,446 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:18:59,448 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 12:18:59,449 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 12:18:59,449 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:18:59,449 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 12:18:59,449 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 12:18:59,449 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 12:18:59,450 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:59,450 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:18:59,450 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:18:59,451 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:18:59,452 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:59,452 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 12:18:59,452 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:18:59,453 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:18:59,453 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:59,453 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:59,454 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:59,454 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 12:18:59,454 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 12:18:59,455 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 12:18:59,455 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 12:18:59,455 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 12:18:59,455 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 12:18:59,455 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 12:18:59,456 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp') generated as u'Went to next'
2017-10-24 12:18:59,456 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None)
2017-10-24 12:18:59,457 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:59,458 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:18:59,459 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:59,459 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:18:59,459 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 12:18:59,459 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 12:18:59,459 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 12:18:59,459 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 12:18:59,459 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 12:18:59,460 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f0668a82998>, <tdm.tdm_gui_protocol.Popup instance at 0x7f0668a8aea8>]
2017-10-24 12:18:59,460 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f0668a82998>, <tdm.tdm_gui_protocol.Popup instance at 0x7f0668a8aea8>], sender=GuiBackend, reason=None)
2017-10-24 12:18:59,460 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:18:59,460 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None))
2017-10-24 12:18:59,460 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None)
2017-10-24 12:18:59,460 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Went to next"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:18:59,461 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:59,461 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None))
2017-10-24 12:18:59,461 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:18:59,461 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Went to next"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 12:18:59,462 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:59,462 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f0668a82998>, <tdm.tdm_gui_protocol.Popup instance at 0x7f0668a8aea8>], sender=GuiBackend, reason=None))
2017-10-24 12:18:59,463 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f0668a82998>, <tdm.tdm_gui_protocol.Popup instance at 0x7f0668a8aea8>], sender=GuiBackend, reason=None)
2017-10-24 12:18:59,463 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "go_to_next", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Went to next"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:18:59,464 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:59,464 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:18:59,486 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Went to next"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:18:59,487 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:18:59,487 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Went to next], sender=TextOutputComponent, reason=None))
2017-10-24 12:18:59,487 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Went to next], sender=TextOutputComponent, reason=None)
2017-10-24 12:18:59,488 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:18:59,488 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 12:18:59,488 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 12:18:59,488 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 12:18:59,488 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 12:18:59,489 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840339.49
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:59,489 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:18:59,489 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:18:59,490 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:18:59,495 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:18:59,495 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:18:59,495 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:18:59,498 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 12:18:59,498 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:18:59,498 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:18:59,498 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:18:59,498 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:18:59,498 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:18:59,498 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:18:59,498 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:18:59,498 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:18:59,498 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:18:59,499 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:18:59,499 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:59,503 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 12:18:59,503 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:18:59,503 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:59,503 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:18:59,503 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:59,503 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:59,506 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {device_activity_terminated(go_to_next)}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:18:59,506 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:18:59,506 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:59,509 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
- tis.shared.goals: stackset([perform(go_to_next), perform(top)])
?                                     ---------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 12:18:59,509 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:18:59,509 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:59,509 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:18:59,509 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:18:59,509 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:59,509 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:59,509 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:59,510 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:18:59,510 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:18:59,510 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:59,510 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:18:59,510 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:59,513 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
?                          ^ ^^^^^ ^^^^^^                -
+ tis.private.plan: Stack([device_query(?X.say_step(X))])
?                          ^^^^^^^^ ^ ^
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:18:59,513 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:59,513 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:59,517 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}
?                                                                                                              +++++++++++++++++
- tis.private.plan: Stack([device_query(?X.say_step(X))])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 12:18:59,517 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:59,517 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:59,517 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:59,517 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:18:59,517 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:59,517 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:59,518 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:59,518 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:59,518 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:18:59,520 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 12:18:59,521 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: lol}], sender=DmeModule, reason=None)
2017-10-24 12:18:59,521 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:18:59,522 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840339.49
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next)}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:59,522 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:18:59,528 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}
?                                                                                                                      +++++++++++++++++
- tis.private.tmp.sys.com: {}
+ tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
- tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                       ------ ^^^^^^^^^^
+ tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      ++++++++++++++++++  ^^
-- END TIS changes --
2017-10-24 12:18:59,528 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:59,531 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), respond(?X.say_step(X))])
?                                                                  +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:18:59,531 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:18:59,534 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), respond(?X.say_step(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
-- END TIS changes --
2017-10-24 12:18:59,534 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:18:59,537 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("lol")))])
- tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:18:59,537 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:18:59,537 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:18:59,537 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:18:59,539 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:59,539 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:18:59,539 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:18:59,542 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:59,542 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp')])
2017-10-24 12:18:59,542 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("lol")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 12:18:59,542 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: lol}], sender=DmeModule, reason=None))
2017-10-24 12:18:59,542 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: lol}], sender=DmeModule, reason=None)
2017-10-24 12:18:59,543 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "lol"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:18:59,543 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:59,543 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("lol")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)))
2017-10-24 12:18:59,544 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("lol")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 12:18:59,544 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:18:59,545 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("lol")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:59,545 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("lol")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:59,546 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("lol")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:59,546 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("lol")), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")})
2017-10-24 12:18:59,547 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("lol")), ddd_name=u'recipehelp')
2017-10-24 12:18:59,547 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(say_step("lol")), ddd_name=u'recipehelp')
2017-10-24 12:18:59,547 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move Move(answer(say_step("lol")), ddd_name=u'recipehelp') generated as u'Ok lol.'
2017-10-24 12:18:59,547 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok lol.], sender=GenerateModule, reason=None)
2017-10-24 12:18:59,549 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("lol")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:59,550 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok lol.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:18:59,551 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("lol")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:18:59,551 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:18:59,551 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp')])
2017-10-24 12:18:59,552 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("lol")), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")})
2017-10-24 12:18:59,552 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("lol")), ddd_name=u'recipehelp')
2017-10-24 12:18:59,553 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0668233320>, <tdm.tdm_gui_protocol.Popup instance at 0x7f0668233d40>]
2017-10-24 12:18:59,553 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0668233320>, <tdm.tdm_gui_protocol.Popup instance at 0x7f0668233d40>], sender=GuiBackend, reason=None)
2017-10-24 12:18:59,553 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:18:59,553 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok lol.], sender=GenerateModule, reason=None))
2017-10-24 12:18:59,553 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok lol.], sender=GenerateModule, reason=None)
2017-10-24 12:18:59,553 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok lol."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:18:59,554 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:59,554 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok lol.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 12:18:59,554 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok lol.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:18:59,554 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok lol."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 12:18:59,555 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:59,555 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0668233320>, <tdm.tdm_gui_protocol.Popup instance at 0x7f0668233d40>], sender=GuiBackend, reason=None))
2017-10-24 12:18:59,555 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0668233320>, <tdm.tdm_gui_protocol.Popup instance at 0x7f0668233d40>], sender=GuiBackend, reason=None)
2017-10-24 12:18:59,555 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok lol."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:18:59,556 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:59,556 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:18:59,593 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok lol."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:18:59,594 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:18:59,594 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok lol.], sender=TextOutputComponent, reason=None))
2017-10-24 12:18:59,594 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok lol.], sender=TextOutputComponent, reason=None)
2017-10-24 12:18:59,594 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:18:59,594 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok lol.], sender=TurnManager, reason=None)
2017-10-24 12:18:59,594 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok lol.], sender=TurnManager, reason=None)
2017-10-24 12:18:59,595 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok lol.], sender=TurnManager, reason=None)
2017-10-24 12:18:59,595 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok lol.], sender=TurnManager, reason=None))
2017-10-24 12:18:59,596 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840339.6
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok lol.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("lol")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next)}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:18:59,596 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:18:59,596 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:18:59,597 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:18:59,602 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 12:18:59,602 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:18:59,602 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:18:59,604 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:59,604 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:18:59,605 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:18:59,605 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:18:59,605 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:18:59,605 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:18:59,605 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:18:59,605 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:18:59,605 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:18:59,605 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:18:59,605 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:18:59,605 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:18:59,609 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {device_activity_terminated(go_to_next)}
+ tis.shared.com: {device_activity_terminated(go_to_next), say_step("lol")}
?                                                        +++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:18:59,609 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:18:59,610 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:59,613 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), say_step("lol")}
+ tis.shared.com: {device_activity_terminated(go_to_next), say_step("lol"), resolved(?X.say_step(X))}
?                                                                         ++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             -------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 12:18:59,614 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:18:59,614 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:59,614 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:18:59,614 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:18:59,614 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:59,614 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:18:59,614 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:59,614 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:18:59,614 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:18:59,614 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:18:59,614 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:18:59,614 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:59,615 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:59,615 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:18:59,615 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:18:59,615 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:18:59,615 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:18:59,615 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:18:59,615 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:18:59,618 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:18:59,619 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: lol}], sender=DmeModule, reason=None)
2017-10-24 12:18:59,619 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok lol.], latest_moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:18:59,619 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: lol}], sender=DmeModule, reason=None))
2017-10-24 12:18:59,619 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: lol}], sender=DmeModule, reason=None)
2017-10-24 12:18:59,619 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "lol"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:18:59,620 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:18:59,620 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok lol.], latest_moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 12:18:59,620 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok lol.], latest_moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:18:59,620 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok lol.], latest_moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:18:59,621 - session_2017-10-24T12_18_34_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f0668a9f5a8>:1.0
2017-10-24 12:18:59,621 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:19:00,621 - session_2017-10-24T12_18_34_0 - DEBUG - Timeout fired
2017-10-24 12:19:00,621 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:19:00,622 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:19:00,622 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:19:00,622 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:19:00,623 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840340.62
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("lol")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next), say_step("lol"), resolved(?X.say_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:19:00,623 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:19:00,623 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:19:00,626 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:19:00,626 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:19:00,630 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:19:00,630 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:19:00,630 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:19:00,632 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:19:00,632 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:19:00,632 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:19:00,632 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:19:00,633 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:19:00,633 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:19:00,633 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:19:00,633 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:19:00,633 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:19:00,633 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:19:00,633 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:19:00,633 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:19:00,633 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:19:00,633 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:19:00,633 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:19:00,633 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:19:00,634 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:19:00,634 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:19:00,634 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:19:00,634 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:19:00,634 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:19:00,634 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:19:00,637 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 12:19:00,637 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:19:00,637 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:19:00,640 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {device_activity_terminated(go_to_next), say_step("lol"), resolved(?X.say_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 12:19:00,640 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:19:00,641 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:19:00,641 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:19:00,641 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:19:00,641 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:19:00,641 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:19:00,641 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:19:00,642 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:19:00,642 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:19:00,642 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:19:00,642 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:19:00,643 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840340.62
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:19:00,643 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:19:00,648 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
?                                                                ^ ^^ ^^^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                ^^^^^^^^^^^^ ^^^^^ ^
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), say_step("lol")}
- tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
+ tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.com: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      -------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 12:19:00,648 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:19:00,651 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:19:00,651 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:19:00,653 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 12:19:00,653 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:19:00,656 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:19:00,656 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:19:00,656 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:19:00,656 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:19:00,658 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:19:00,658 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:19:00,659 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:19:00,661 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 12:19:00,661 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 12:19:00,661 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:19:03,516 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 12:19:03,517 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:19:03,517 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 12:19:03,517 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 12:19:03,517 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 12:19:03,517 - session_2017-10-24T12_18_34_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 12:19:03,517 - session_2017-10-24T12_18_34_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 12:19:03,518 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 12:19:03,518 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 12:19:03,518 - session_2017-10-24T12_18_34_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 12:19:03,519 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:19:03,519 - session_2017-10-24T12_18_34_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 12:19:03,519 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 12:19:03,519 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:19:03,519 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:19:03,519 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:19:03,520 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:19:03,520 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 12:19:03,521 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:19:03,521 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:19:03,521 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:19:03,521 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:19:03,522 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:19:03,522 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 12:19:03,522 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 12:19:03,523 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 12:19:03,523 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 12:19:03,523 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 12:19:03,523 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 12:19:03,523 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 12:19:03,524 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 12:19:03,524 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 12:19:03,525 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:19:03,526 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:19:03,526 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:19:03,526 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 12:19:03,527 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 12:19:03,527 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 12:19:03,527 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 12:19:03,527 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 12:19:03,527 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0668a857a0>]
2017-10-24 12:19:03,527 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0668a857a0>], sender=GuiBackend, reason=None)
2017-10-24 12:19:03,527 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:19:03,528 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 12:19:03,528 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:19:03,528 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 12:19:03,528 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 12:19:03,528 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 12:19:03,529 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:19:03,529 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 12:19:03,529 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 12:19:03,529 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:19:03,530 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:19:03,530 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0668a857a0>], sender=GuiBackend, reason=None))
2017-10-24 12:19:03,530 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0668a857a0>], sender=GuiBackend, reason=None)
2017-10-24 12:19:03,530 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:19:03,531 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:19:03,531 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:19:03,557 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:19:03,557 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:19:03,557 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 12:19:03,558 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 12:19:03,558 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:19:03,558 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 12:19:03,558 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 12:19:03,558 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 12:19:03,558 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 12:19:03,560 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840343.56
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:19:03,560 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:19:03,560 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:19:03,560 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:19:03,563 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(say_step("lol")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 12:19:03,564 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:19:03,564 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:19:03,566 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:19:03,566 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:19:03,567 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:19:03,567 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:19:03,567 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:19:03,567 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:19:03,567 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:19:03,567 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:19:03,567 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:19:03,567 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:19:03,567 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:19:03,567 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:19:03,571 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 12:19:03,571 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:19:03,571 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:19:03,571 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:19:03,571 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:19:03,571 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:19:03,574 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 12:19:03,574 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:19:03,574 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:19:03,575 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:19:03,575 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:19:03,576 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:19:03,576 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:19:03,576 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:19:03,576 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:19:03,576 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:19:03,576 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:19:03,576 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:19:03,576 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:19:03,576 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:19:03,576 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:19:03,576 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:19:03,577 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:19:03,577 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:19:03,577 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:19:03,577 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:19:03,577 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:19:03,577 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:19:03,580 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 12:19:03,580 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:19:03,580 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:19:03,580 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:19:03,580 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:19:03,580 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:19:03,581 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:19:03,581 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 12:19:03,581 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:19:03,581 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:19:03,582 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:19:03,582 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:19:03,583 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:19:03,583 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:19:03,584 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840343.58
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:19:03,584 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:19:03,588 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 12:19:03,588 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:19:03,593 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
- tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                              ^
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                              ^
-- END TIS changes --
2017-10-24 12:19:03,594 - session_2017-10-24T12_18_34_0 - INFO - hypotheses reranking had no effect
2017-10-24 12:19:03,594 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:19:03,600 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 12:19:03,601 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:19:03,608 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 12:19:03,608 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:19:03,608 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:19:03,612 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:19:03,612 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:19:03,612 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:19:03,615 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:19:03,615 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:19:03,615 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:19:03,615 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:19:03,615 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:19:03,616 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:19:03,616 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
2017-10-24 12:19:03,616 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:19:03,616 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
2017-10-24 12:19:03,616 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:19:03,621 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateUsrRequest
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
?                          ++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 12:19:03,621 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:19:03,621 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:19:03,624 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateISSUES3
-- BEGIN TIS changes --
- tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                                                  --------------------------
+ tis.shared.goals: stackset([perform(go_to_next), perform(top)])
-- END TIS changes --
2017-10-24 12:19:03,624 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:19:03,624 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:19:03,627 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
+ tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
-- END TIS changes --
2017-10-24 12:19:03,627 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:19:03,627 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:19:03,627 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:19:03,627 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:19:03,627 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:19:03,627 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:19:03,627 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:19:03,627 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:19:03,627 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:19:03,628 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:19:03,631 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], False, undefined_failure)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.bel: {}
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], False, undefined_failure))])
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
- tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 12:19:03,631 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:19:03,631 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:19:03,631 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:19:03,631 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:19:03,634 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.goal(X)])
?                           ----------
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 12:19:03,634 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:19:03,634 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:19:03,634 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:19:03,634 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:19:03,634 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:19:03,635 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 12:19:03,635 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:19:03,635 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:19:03,636 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840343.58
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], False, undefined_failure)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], False, undefined_failure))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:19:03,636 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:19:03,640 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], False, undefined_failure))])
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                              +++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 12:19:03,640 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:19:03,643 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], False, undefined_failure))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], False, undefined_failure))])
-- END TIS changes --
2017-10-24 12:19:03,644 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:19:03,646 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], False, undefined_failure))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:19:03,646 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:19:03,646 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:19:03,646 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:19:03,649 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:19:03,649 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:19:03,649 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:19:03,651 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 12:19:03,652 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp')])
2017-10-24 12:19:03,652 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], False, undefined_failure)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:19:03,652 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 12:19:03,652 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 12:19:03,652 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 12:19:03,653 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:19:03,653 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:19:03,653 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:19:03,653 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:19:03,654 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:19:03,654 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], False, undefined_failure)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 12:19:03,655 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], False, undefined_failure)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:19:03,655 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:19:03,655 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], False, undefined_failure)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:19:03,655 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], False, undefined_failure)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:19:03,656 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], False, undefined_failure)]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:19:03,657 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)})
2017-10-24 12:19:03,657 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp')
2017-10-24 12:19:03,657 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp')
2017-10-24 12:19:03,657 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp') generated as u"I'm sorry, something went wrong."
2017-10-24 12:19:03,657 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [I'm sorry, something went wrong.], sender=GenerateModule, reason=None)
2017-10-24 12:19:03,658 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], False, undefined_failure)]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:19:03,659 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: I'm sorry, something went wrong.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:19:03,660 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], False, undefined_failure)]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:19:03,660 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:19:03,660 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp')])
2017-10-24 12:19:03,660 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)})
2017-10-24 12:19:03,660 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp')
2017-10-24 12:19:03,661 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f066825a1b8>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825a128>]
2017-10-24 12:19:03,661 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f066825a1b8>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825a128>], sender=GuiBackend, reason=None)
2017-10-24 12:19:03,661 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:19:03,662 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [I'm sorry, something went wrong.], sender=GenerateModule, reason=None))
2017-10-24 12:19:03,662 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [I'm sorry, something went wrong.], sender=GenerateModule, reason=None)
2017-10-24 12:19:03,662 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["I'm sorry, something went wrong."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:19:03,662 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:19:03,662 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: I'm sorry, something went wrong.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 12:19:03,663 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: I'm sorry, something went wrong.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:19:03,663 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "I'm sorry, something went wrong."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 12:19:03,663 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:19:03,664 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f066825a1b8>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825a128>], sender=GuiBackend, reason=None))
2017-10-24 12:19:03,664 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f066825a1b8>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825a128>], sender=GuiBackend, reason=None)
2017-10-24 12:19:03,665 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "go_to_next", "result": false, "arguments": {}, "failure_reason": "undefined_failure"}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "I'm sorry, something went wrong."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:19:03,665 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:19:03,665 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:19:03,685 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["I'm sorry, something went wrong."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:19:03,686 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:19:03,686 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [I'm sorry, something went wrong.], sender=TextOutputComponent, reason=None))
2017-10-24 12:19:03,686 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [I'm sorry, something went wrong.], sender=TextOutputComponent, reason=None)
2017-10-24 12:19:03,686 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:19:03,686 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [I'm sorry, something went wrong.], sender=TurnManager, reason=None)
2017-10-24 12:19:03,686 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [I'm sorry, something went wrong.], sender=TurnManager, reason=None)
2017-10-24 12:19:03,687 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [I'm sorry, something went wrong.], sender=TurnManager, reason=None)
2017-10-24 12:19:03,687 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [I'm sorry, something went wrong.], sender=TurnManager, reason=None))
2017-10-24 12:19:03,688 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840343.69
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], False, undefined_failure)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [I'm sorry, something went wrong.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], False, undefined_failure))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:19:03,688 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:19:03,688 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:19:03,688 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:19:03,694 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:19:03,694 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:19:03,694 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:19:03,697 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], False, undefined_failure)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 12:19:03,697 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:19:03,697 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:19:03,697 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:19:03,698 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:19:03,698 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:19:03,698 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:19:03,698 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:19:03,698 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:19:03,698 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:19:03,699 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:19:03,699 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:19:03,701 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:19:03,701 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:19:03,701 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:19:03,701 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:19:03,701 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:19:03,702 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:19:03,702 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:19:03,702 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:19:03,702 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:19:03,702 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:19:03,702 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:19:03,702 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:19:03,702 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:19:03,702 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:19:03,702 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:19:03,703 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:19:03,703 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:19:03,703 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:19:03,703 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:19:03,703 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:19:03,703 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:19:03,703 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:19:03,706 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 12:19:03,706 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:19:03,706 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [I'm sorry, something went wrong.], latest_moves: OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:19:03,706 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:19:03,706 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:19:03,706 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:19:03,707 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:19:03,707 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [I'm sorry, something went wrong.], latest_moves: OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 12:19:03,707 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [I'm sorry, something went wrong.], latest_moves: OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:19:03,707 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [I'm sorry, something went wrong.], latest_moves: OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:19:03,708 - session_2017-10-24T12_18_34_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f066823e5f0>:1.0
2017-10-24 12:19:03,708 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:19:04,708 - session_2017-10-24T12_18_34_0 - DEBUG - Timeout fired
2017-10-24 12:19:04,708 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:19:04,709 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:19:04,709 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:19:04,709 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:19:04,710 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840344.71
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], False, undefined_failure))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:19:04,710 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:19:04,711 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:19:04,713 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:19:04,713 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:19:04,717 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 12:19:04,717 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:19:04,717 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:19:04,719 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:19:04,720 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:19:04,720 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:19:04,720 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:19:04,720 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:19:04,720 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:19:04,720 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:19:04,720 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:19:04,720 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:19:04,721 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:19:04,721 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:19:04,721 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:19:04,721 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:19:04,721 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:19:04,721 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:19:04,721 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:19:04,721 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:19:04,721 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:19:04,721 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:19:04,722 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:19:04,722 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:19:04,722 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:19:04,722 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:19:04,722 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:19:04,722 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:19:04,722 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:19:04,723 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:19:04,723 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:19:04,723 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:19:04,723 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:19:04,723 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:19:04,724 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840344.71
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], False, undefined_failure))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:19:04,724 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:19:04,727 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], False, undefined_failure))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:19:04,727 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:19:04,727 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:19:04,727 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:19:04,727 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:19:04,729 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:19:04,729 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:19:04,729 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:19:04,731 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:19:04,732 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#])
2017-10-24 12:19:04,732 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:20:21,273 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go back"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 12:20:21,274 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:20:21,274 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go back}], sender=TextInputComponent, reason=None))
2017-10-24 12:20:21,274 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go back}], sender=TextInputComponent, reason=None)
2017-10-24 12:20:21,274 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go back}], sender=TextInputComponent, reason=None)
2017-10-24 12:20:21,274 - session_2017-10-24T12_18_34_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go back"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 12:20:21,275 - session_2017-10-24T12_18_34_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 12:20:21,276 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 12:20:21,276 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])} for DDD 'recipehelp'
2017-10-24 12:20:21,276 - session_2017-10-24T12_18_34_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
2017-10-24 12:20:21,277 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:20:21,277 - session_2017-10-24T12_18_34_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go back"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go back", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_back"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go back", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 12:20:21,277 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go back}], sender=TextInputComponent, reason=None)
2017-10-24 12:20:21,277 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:20:21,277 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:20:21,277 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:20:21,278 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:20:21,279 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 12:20:21,279 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:20:21,279 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:20:21,279 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:20:21,280 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:20:21,280 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:20:21,280 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [], sender=GenerateModule, reason=None)
2017-10-24 12:20:21,281 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:20:21,282 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_to_next), moves: OpenQueue([#]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:20:21,283 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:20:21,283 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#])
2017-10-24 12:20:21,284 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f066825ae60>]
2017-10-24 12:20:21,284 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f066825ae60>], sender=GuiBackend, reason=None)
2017-10-24 12:20:21,284 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:20:21,285 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=InterpretModule, reason=None))
2017-10-24 12:20:21,285 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:20:21,285 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 12:20:21,285 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 12:20:21,285 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 12:20:21,287 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:20:21,287 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [], sender=GenerateModule, reason=None))
2017-10-24 12:20:21,287 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [], sender=GenerateModule, reason=None)
2017-10-24 12:20:21,288 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:20:21,289 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:20:21,290 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f066825ae60>], sender=GuiBackend, reason=None))
2017-10-24 12:20:21,290 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f066825ae60>], sender=GuiBackend, reason=None)
2017-10-24 12:20:21,290 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:20:21,292 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:20:21,292 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:20:21,293 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": [], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:20:21,293 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:20:21,294 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [], sender=TextOutputComponent, reason=None))
2017-10-24 12:20:21,295 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [], sender=TextOutputComponent, reason=None)
2017-10-24 12:20:21,295 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:20:21,295 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [], sender=TurnManager, reason=None)
2017-10-24 12:20:21,295 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [], sender=TurnManager, reason=None)
2017-10-24 12:20:21,295 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [], sender=TurnManager, reason=None)
2017-10-24 12:20:21,295 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [], sender=TurnManager, reason=None))
2017-10-24 12:20:21,296 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840421.3
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:20:21,296 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:20:21,297 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:20:21,297 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:20:21,300 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {report(DeviceResultProposition(go_to_next, [], False, undefined_failure), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 12:20:21,300 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:20:21,301 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:20:21,303 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:21,303 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:20:21,303 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:20:21,303 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:20:21,303 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:20:21,303 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:20:21,303 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:20:21,303 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:20:21,303 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:20:21,303 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:20:21,304 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:20:21,304 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:20:21,304 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:20:21,304 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:20:21,304 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:20:21,304 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:20:21,305 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:20:21,305 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:20:21,305 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:20:21,305 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:20:21,305 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:20:21,305 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:20:21,305 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:21,306 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:20:21,306 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:20:21,306 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:20:21,306 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:21,306 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:20:21,306 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:20:21,308 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:21,308 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:20:21,308 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [], latest_moves: OpenQueue([#])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:20:21,309 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:20:21,309 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:20:21,309 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:20:21,309 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:20:21,309 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [], latest_moves: OpenQueue([#])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 12:20:21,310 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [], latest_moves: OpenQueue([#])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:20:21,310 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [], latest_moves: OpenQueue([#])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:20:21,310 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:20:21,311 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:20:21,311 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:20:21,311 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:20:21,312 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840421.31
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:20:21,312 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:20:21,317 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
-- END TIS changes --
2017-10-24 12:20:21,317 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:20:21,317 - session_2017-10-24T12_18_34_0 - INFO - hypotheses reranking had no effect
2017-10-24 12:20:21,318 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:20:21,321 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#])
+ tis.latest_moves: OpenQueue([#, Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back')])
-- END TIS changes --
2017-10-24 12:20:21,321 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:20:21,324 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
-- END TIS changes --
2017-10-24 12:20:21,324 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:20:21,325 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:20:21,327 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:21,327 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:20:21,327 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:20:21,332 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.bel: {}
+ tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
- tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                      ^^^^^^^^^^   ---  ^^^^^
+ tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
?                                      ^  ++++   ^^^^^^^^
- tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.usr.plan: Stack([])
- tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                    ----------
+ tis.private.tmp.usr.qud: stackset([])
-- END TIS changes --
2017-10-24 12:20:21,332 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:20:21,332 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:20:21,332 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:20:21,333 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:20:21,333 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:20:21,333 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])
2017-10-24 12:20:21,333 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:20:21,333 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])
2017-10-24 12:20:21,333 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:20:21,336 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateUsrRequest
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])
+ tis.private.nim: OpenQueue([#])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([do(go_back)])
?                          +++++++++++
- tis.shared.goals: stackset([perform(go_to_next), perform(top)])
+ tis.shared.goals: stackset([perform(go_back), perform(go_to_next), perform(top)])
?                                        ++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back')}
-- END TIS changes --
2017-10-24 12:20:21,336 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:20:21,337 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:20:21,337 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:20:21,337 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:21,340 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.plan: Stack([do(go_back)])
+ tis.private.plan: Stack([dev_perform(go_back, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
-- END TIS changes --
2017-10-24 12:20:21,340 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:20:21,340 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:20:21,340 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:20:21,341 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:20:21,341 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:20:21,341 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:20:21,341 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:20:21,341 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:20:21,341 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:20:21,341 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:20:21,345 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
- tis.private.plan: Stack([dev_perform(go_back, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 12:20:21,345 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:21,345 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:20:21,345 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:21,345 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:20:21,345 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:20:21,346 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:20:21,346 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:21,346 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:20:21,346 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:20:21,346 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go back, sender=DmeModule, reason=None)
2017-10-24 12:20:21,346 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:20:21,346 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:20:21,347 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840421.31
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back')])
tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_back), perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back')}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:20:21,347 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:20:21,352 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
?                                                                                                                                    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
+ tis.private.tmp.sys.goals: stackset([perform(go_back), perform(go_to_next), perform(top)])
?                                                 ++++++++++++++++++
-- END TIS changes --
2017-10-24 12:20:21,352 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:20:21,355 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_back, [], True, None))])
-- END TIS changes --
2017-10-24 12:20:21,355 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:20:21,358 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_back, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:20:21,358 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:20:21,358 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:20:21,358 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:20:21,361 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:21,361 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:20:21,361 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:20:21,365 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:21,365 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 12:20:21,366 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), top_perform_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:20:21,366 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go back, sender=DmeModule, reason=None))
2017-10-24 12:20:21,366 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go back, sender=DmeModule, reason=None)
2017-10-24 12:20:21,366 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": "go back", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 12:20:21,367 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:20:21,367 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:20:21,368 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:20:21,369 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:20:21,370 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:20:21,371 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), top_perform_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)))
2017-10-24 12:20:21,371 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), top_perform_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:20:21,371 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:20:21,371 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), top_perform_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:20:21,372 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), top_perform_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:20:21,373 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:20:21,373 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)})
2017-10-24 12:20:21,373 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 12:20:21,373 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)})
2017-10-24 12:20:21,373 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')
2017-10-24 12:20:21,373 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 12:20:21,374 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 12:20:21,374 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')
2017-10-24 12:20:21,375 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp') generated as u'Went to the previous step'
2017-10-24 12:20:21,375 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to the previous step], sender=GenerateModule, reason=None)
2017-10-24 12:20:21,376 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:20:21,377 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Went to the previous step}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:20:21,378 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:20:21,378 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:20:21,378 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 12:20:21,378 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)})
2017-10-24 12:20:21,378 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 12:20:21,378 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)})
2017-10-24 12:20:21,378 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')
2017-10-24 12:20:21,379 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f066825a710>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825acf8>]
2017-10-24 12:20:21,379 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f066825a710>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825acf8>], sender=GuiBackend, reason=None)
2017-10-24 12:20:21,379 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:20:21,379 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to the previous step], sender=GenerateModule, reason=None))
2017-10-24 12:20:21,380 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to the previous step], sender=GenerateModule, reason=None)
2017-10-24 12:20:21,380 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Went to the previous step"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:20:21,381 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:20:21,381 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Went to the previous step}, sender=IndependentGuiBackend, reason=None))
2017-10-24 12:20:21,381 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Went to the previous step}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:20:21,381 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Went to the previous step"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 12:20:21,383 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:20:21,383 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f066825a710>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825acf8>], sender=GuiBackend, reason=None))
2017-10-24 12:20:21,383 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f066825a710>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825acf8>], sender=GuiBackend, reason=None)
2017-10-24 12:20:21,383 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "go_back", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Went to the previous step"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:20:21,384 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:20:21,384 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:20:21,393 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Went to the previous step"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:20:21,393 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:20:21,393 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Went to the previous step], sender=TextOutputComponent, reason=None))
2017-10-24 12:20:21,393 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Went to the previous step], sender=TextOutputComponent, reason=None)
2017-10-24 12:20:21,393 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:20:21,394 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None)
2017-10-24 12:20:21,394 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None)
2017-10-24 12:20:21,394 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None)
2017-10-24 12:20:21,394 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None))
2017-10-24 12:20:21,395 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840421.39
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_back), perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_back), perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back')}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:20:21,395 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:20:21,396 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:20:21,396 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:20:21,402 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back')}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 12:20:21,402 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:20:21,402 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:20:21,405 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 12:20:21,405 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:20:21,405 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:20:21,406 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:20:21,406 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:20:21,406 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:20:21,406 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:20:21,406 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:20:21,406 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:20:21,406 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:20:21,407 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:20:21,407 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:20:21,410 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 12:20:21,410 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:20:21,410 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:20:21,410 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:20:21,411 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:21,411 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:20:21,413 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {device_activity_terminated(go_back)}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:20:21,413 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:20:21,413 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:20:21,417 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
- tis.shared.goals: stackset([perform(go_back), perform(go_to_next), perform(top)])
?                                        ------------------
+ tis.shared.goals: stackset([perform(go_to_next), perform(top)])
- tis.shared.previous_goal: perform(go_to_next)
?                                      ^^^^^^^
+ tis.shared.previous_goal: perform(go_back)
?                                      ^^^^
-- END TIS changes --
2017-10-24 12:20:21,417 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:20:21,417 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:21,417 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:20:21,417 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:20:21,417 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:20:21,418 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:20:21,418 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:20:21,418 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:20:21,418 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:20:21,418 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:20:21,418 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:20:21,418 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:20:21,418 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:21,419 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:20:21,419 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:20:21,419 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:20:21,419 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:21,419 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:20:21,419 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:20:21,421 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:21,422 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:20:21,422 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Went to the previous step], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:20:21,422 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:20:21,422 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:20:21,422 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:20:21,423 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:20:21,423 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Went to the previous step], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 12:20:21,423 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Went to the previous step], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:20:21,424 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Went to the previous step], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:20:21,424 - session_2017-10-24T12_18_34_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f0668a8a830>:1.0
2017-10-24 12:20:21,424 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:20:22,425 - session_2017-10-24T12_18_34_0 - DEBUG - Timeout fired
2017-10-24 12:20:22,425 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:20:22,425 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:20:22,425 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:20:22,425 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:20:22,426 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840422.43
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_back), perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back)}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back')}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:20:22,426 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:20:22,427 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:20:22,429 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:20:22,429 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:20:22,434 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back')}
-- END TIS changes --
2017-10-24 12:20:22,434 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:20:22,434 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:20:22,437 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:22,437 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:20:22,437 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:20:22,437 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:20:22,437 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:20:22,438 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:20:22,438 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:20:22,438 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:20:22,438 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:20:22,438 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:20:22,438 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:20:22,438 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:20:22,438 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:20:22,438 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:20:22,438 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:20:22,438 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:20:22,438 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:20:22,439 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:20:22,439 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:20:22,439 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:20:22,439 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:20:22,439 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:20:22,439 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:22,439 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:20:22,440 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:20:22,440 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:20:22,440 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:22,440 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:20:22,440 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:20:22,440 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:20:22,440 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:20:22,441 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840422.43
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_back), perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back)}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:20:22,442 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:20:22,446 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
- tis.private.tmp.sys.com: {}
+ tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
- tis.private.tmp.sys.goals: stackset([perform(go_back), perform(go_to_next), perform(top)])
?                                                 ------------------
+ tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([jumpto(resolve(?X.say_step(X)))])
-- END TIS changes --
2017-10-24 12:20:22,446 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:20:22,446 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:20:22,446 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:20:22,446 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:20:22,448 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:22,448 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:20:22,449 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:20:22,451 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:22,451 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#])
2017-10-24 12:20:22,451 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:20:57,224 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": ""}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 12:20:57,225 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:20:57,225 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: }], sender=TextInputComponent, reason=None))
2017-10-24 12:20:57,225 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: }], sender=TextInputComponent, reason=None)
2017-10-24 12:20:57,225 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: }], sender=TextInputComponent, reason=None)
2017-10-24 12:20:57,225 - session_2017-10-24T12_18_34_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": ""}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 12:20:57,225 - session_2017-10-24T12_18_34_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 12:20:57,227 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Found no valid exact interpretations, returning an empty result.
2017-10-24 12:20:57,227 - session_2017-10-24T12_18_34_0 - DEBUG - Result from 'ExactInterpreter': []
2017-10-24 12:20:57,227 - session_2017-10-24T12_18_34_0 - DEBUG - Starting 'RobustInterpreter'
2017-10-24 12:20:57,227 - session_2017-10-24T12_18_34_0 - DEBUG - DddInterpreter.interpret_partially: timeout=1.99835515022
2017-10-24 12:20:57,229 - session_2017-10-24T12_18_34_0 - DEBUG - robust grammatical interpretations: []
2017-10-24 12:20:57,231 - session_2017-10-24T12_18_34_0 - DEBUG - _remove_literals(): Got no valid interpretations of partial utterances
2017-10-24 12:20:57,231 - session_2017-10-24T12_18_34_0 - DEBUG - RobustInterpreter: Partial interpretation failed.
2017-10-24 12:20:57,231 - session_2017-10-24T12_18_34_0 - DEBUG - RobustInterpreter: use_word_list_correction disabled, skipping interpretation with word correction
2017-10-24 12:20:57,231 - session_2017-10-24T12_18_34_0 - DEBUG - RobustInterpreter: Found no robust interpretations, returning an empty result.
2017-10-24 12:20:57,231 - session_2017-10-24T12_18_34_0 - DEBUG - Result from 'RobustInterpreter': []
2017-10-24 12:20:57,231 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {}, sender=InterpretModule, reason=None)
2017-10-24 12:20:57,231 - session_2017-10-24T12_18_34_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 12:20:57,232 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: }], sender=TextInputComponent, reason=None)
2017-10-24 12:20:57,232 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:20:57,232 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:20:57,232 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:20:57,233 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:20:57,233 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 12:20:57,234 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:20:57,234 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:20:57,234 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:20:57,234 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:20:57,235 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(go_to_next), moves: OpenQueue([#]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:20:57,235 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [], sender=GenerateModule, reason=None)
2017-10-24 12:20:57,236 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(go_to_next), moves: OpenQueue([#]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:20:57,238 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(go_to_next), moves: OpenQueue([#]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:20:57,238 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:20:57,238 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#])
2017-10-24 12:20:57,238 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0668205cb0>]
2017-10-24 12:20:57,238 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0668205cb0>], sender=GuiBackend, reason=None)
2017-10-24 12:20:57,238 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:20:57,239 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {}, sender=InterpretModule, reason=None))
2017-10-24 12:20:57,239 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {}, sender=InterpretModule, reason=None)
2017-10-24 12:20:57,239 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 12:20:57,239 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 12:20:57,239 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 12:20:57,239 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:20:57,240 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [], sender=GenerateModule, reason=None))
2017-10-24 12:20:57,240 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [], sender=GenerateModule, reason=None)
2017-10-24 12:20:57,240 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:20:57,241 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:20:57,241 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0668205cb0>], sender=GuiBackend, reason=None))
2017-10-24 12:20:57,241 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0668205cb0>], sender=GuiBackend, reason=None)
2017-10-24 12:20:57,242 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:20:57,242 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:20:57,242 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:20:57,264 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": [], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:20:57,265 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:20:57,265 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [], sender=TextOutputComponent, reason=None))
2017-10-24 12:20:57,265 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [], sender=TextOutputComponent, reason=None)
2017-10-24 12:20:57,265 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:20:57,266 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [], sender=TurnManager, reason=None)
2017-10-24 12:20:57,266 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [], sender=TurnManager, reason=None)
2017-10-24 12:20:57,266 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [], sender=TurnManager, reason=None)
2017-10-24 12:20:57,266 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [], sender=TurnManager, reason=None))
2017-10-24 12:20:57,267 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840457.27
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back)}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:20:57,267 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:20:57,267 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:20:57,267 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:20:57,271 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 12:20:57,271 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:20:57,271 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:20:57,273 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:57,273 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:20:57,273 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:20:57,273 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:20:57,274 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:20:57,274 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:20:57,274 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:20:57,274 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:20:57,274 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:20:57,274 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:20:57,274 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:20:57,274 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:20:57,274 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:20:57,274 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:20:57,274 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:20:57,275 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:20:57,275 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:20:57,275 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:20:57,275 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:20:57,276 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:20:57,276 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:20:57,276 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:20:57,276 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:57,276 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:20:57,276 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:20:57,276 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:20:57,277 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:57,277 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:20:57,277 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:20:57,279 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:57,279 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:20:57,279 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [], latest_moves: OpenQueue([#])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:20:57,279 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:20:57,280 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:20:57,280 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:20:57,280 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:20:57,280 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [], latest_moves: OpenQueue([#])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 12:20:57,281 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [], latest_moves: OpenQueue([#])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:20:57,281 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [], latest_moves: OpenQueue([#])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:20:57,281 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 12:20:57,281 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 12:20:57,282 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 12:20:57,282 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 12:20:57,283 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840457.28
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back)}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:20:57,283 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:20:57,283 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:20:57,286 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:57,286 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:20:57,289 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
-- END TIS changes --
2017-10-24 12:20:57,289 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:20:57,289 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:20:57,291 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:57,292 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:20:57,292 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:20:57,292 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:20:57,292 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:20:57,292 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:20:57,292 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:20:57,292 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:20:57,292 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:20:57,292 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:20:57,293 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:20:57,293 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:20:57,294 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:20:57,294 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:20:57,294 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:20:57,294 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:20:57,294 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:20:57,294 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:20:57,294 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:20:57,294 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:20:57,294 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:20:57,295 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:20:57,295 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:57,295 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:20:57,295 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:20:57,295 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:20:57,296 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:57,296 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:20:57,296 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:20:57,296 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:20:57,296 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:20:57,297 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840457.28
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back)}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:20:57,297 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:20:57,300 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:57,300 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:20:57,300 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:20:57,302 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmSemNeg
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)])
-- END TIS changes --
2017-10-24 12:20:57,302 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:20:57,302 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:20:57,302 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:20:57,302 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:20:57,305 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:57,305 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:20:57,305 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:20:57,307 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:57,308 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)])
2017-10-24 12:20:57,308 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 12:20:57,308 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:20:57,309 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:20:57,309 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:20:57,309 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:20:57,309 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None)))
2017-10-24 12:20:57,310 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 12:20:57,310 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:20:57,310 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:20:57,310 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:20:57,312 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:20:57,312 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:per*pos:""), facts={device_activity_terminated(go_back), device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), DeviceResultProposition(go_back, [], True, None)})
2017-10-24 12:20:57,312 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:per*pos:"")
2017-10-24 12:20:57,312 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:sem*neg), facts={device_activity_terminated(go_back), device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), DeviceResultProposition(go_back, [], True, None)})
2017-10-24 12:20:57,312 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:sem*neg)
2017-10-24 12:20:57,312 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:per*pos:"")
2017-10-24 12:20:57,312 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move ICMMove(icm:per*pos:"") generated as u'I heard you say.'
2017-10-24 12:20:57,313 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:sem*neg)
2017-10-24 12:20:57,313 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move ICMMove(icm:sem*neg) generated as u"I don't understand."
2017-10-24 12:20:57,313 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say., I don't understand.], sender=GenerateModule, reason=None)
2017-10-24 12:20:57,314 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:20:57,316 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:20:57,316 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:20:57,316 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)])
2017-10-24 12:20:57,316 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:per*pos:""), facts={device_activity_terminated(go_back), device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), DeviceResultProposition(go_back, [], True, None)})
2017-10-24 12:20:57,316 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:per*pos:"")
2017-10-24 12:20:57,316 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:sem*neg), facts={device_activity_terminated(go_back), device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), DeviceResultProposition(go_back, [], True, None)})
2017-10-24 12:20:57,316 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:sem*neg)
2017-10-24 12:20:57,317 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message []
2017-10-24 12:20:57,317 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 12:20:57,317 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:20:57,317 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say., I don't understand.], sender=GenerateModule, reason=None))
2017-10-24 12:20:57,317 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say., I don't understand.], sender=GenerateModule, reason=None)
2017-10-24 12:20:57,317 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["I heard you say.", "I don't understand."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:20:57,318 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:20:57,318 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 12:20:57,318 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 12:20:57,318 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:20:57,318 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:20:57,319 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:20:57,359 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["I heard you say.", "I don't understand."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:20:57,360 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:20:57,360 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [I heard you say., I don't understand.], sender=TextOutputComponent, reason=None))
2017-10-24 12:20:57,360 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [I heard you say., I don't understand.], sender=TextOutputComponent, reason=None)
2017-10-24 12:20:57,360 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:20:57,360 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [I heard you say., I don't understand.], sender=TurnManager, reason=None)
2017-10-24 12:20:57,360 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [I heard you say., I don't understand.], sender=TurnManager, reason=None)
2017-10-24 12:20:57,360 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [I heard you say., I don't understand.], sender=TurnManager, reason=None)
2017-10-24 12:20:57,361 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [I heard you say., I don't understand.], sender=TurnManager, reason=None))
2017-10-24 12:20:57,362 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840457.36
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [I heard you say., I don't understand.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back)}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:20:57,362 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:20:57,362 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:20:57,362 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:20:57,365 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
-- END TIS changes --
2017-10-24 12:20:57,365 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:20:57,366 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:20:57,368 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:57,368 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:20:57,368 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:20:57,368 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:20:57,368 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:20:57,368 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:20:57,368 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:20:57,369 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:20:57,369 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
2017-10-24 12:20:57,369 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:20:57,369 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
2017-10-24 12:20:57,369 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:20:57,372 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
?                             -------------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 12:20:57,372 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:20:57,373 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:20:57,373 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:20:57,373 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:57,373 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:20:57,376 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
?                                                                          ++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:20:57,376 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:20:57,377 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:20:57,377 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:20:57,377 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:57,377 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:20:57,377 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:20:57,377 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:20:57,377 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:20:57,377 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:20:57,377 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:20:57,378 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:20:57,378 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:20:57,378 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:20:57,378 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:20:57,378 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:57,379 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:20:57,379 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:20:57,379 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:20:57,379 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:57,379 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:20:57,379 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:20:57,381 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:57,382 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:20:57,382 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [I heard you say., I don't understand.], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:20:57,382 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:20:57,382 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:20:57,382 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:20:57,383 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:20:57,383 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [I heard you say., I don't understand.], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 12:20:57,383 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [I heard you say., I don't understand.], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:20:57,383 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [I heard you say., I don't understand.], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:20:57,384 - session_2017-10-24T12_18_34_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f0668a8acb0>:1.0
2017-10-24 12:20:57,384 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:20:58,384 - session_2017-10-24T12_18_34_0 - DEBUG - Timeout fired
2017-10-24 12:20:58,384 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:20:58,384 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:20:58,384 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:20:58,384 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:20:58,386 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840458.38
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back)}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:20:58,386 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:20:58,386 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:20:58,388 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:20:58,388 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:20:58,396 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 12:20:58,396 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:20:58,397 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:20:58,399 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:58,399 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:20:58,399 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:20:58,399 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:20:58,399 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:20:58,399 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:20:58,399 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:20:58,400 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:20:58,400 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:20:58,400 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:20:58,400 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:20:58,400 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:20:58,400 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:20:58,400 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:20:58,400 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:20:58,400 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:20:58,400 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:20:58,400 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:20:58,401 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:20:58,401 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:20:58,401 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:20:58,401 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:20:58,401 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:58,401 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:20:58,401 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:20:58,402 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:20:58,402 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:20:58,402 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:20:58,402 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:20:58,402 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:20:58,402 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:20:58,403 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840458.38
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back)}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:20:58,403 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:20:58,406 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:58,407 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:20:58,407 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:20:58,408 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:20:58,408 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:20:58,410 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:58,410 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:20:58,410 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:20:58,412 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:20:58,412 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#])
2017-10-24 12:20:58,412 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:21:03,136 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go back"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 12:21:03,136 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:21:03,137 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go back}], sender=TextInputComponent, reason=None))
2017-10-24 12:21:03,137 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go back}], sender=TextInputComponent, reason=None)
2017-10-24 12:21:03,137 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go back}], sender=TextInputComponent, reason=None)
2017-10-24 12:21:03,137 - session_2017-10-24T12_18_34_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go back"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 12:21:03,137 - session_2017-10-24T12_18_34_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 12:21:03,138 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 12:21:03,138 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])} for DDD 'recipehelp'
2017-10-24 12:21:03,138 - session_2017-10-24T12_18_34_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
2017-10-24 12:21:03,138 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:21:03,139 - session_2017-10-24T12_18_34_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go back"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go back", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_back"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go back", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 12:21:03,139 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go back}], sender=TextInputComponent, reason=None)
2017-10-24 12:21:03,139 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:21:03,139 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:21:03,139 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:21:03,140 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:03,141 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 12:21:03,141 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:21:03,141 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:21:03,141 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:03,142 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:03,142 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(go_to_next), moves: OpenQueue([#]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:03,143 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [], sender=GenerateModule, reason=None)
2017-10-24 12:21:03,143 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(go_to_next), moves: OpenQueue([#]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:03,145 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(go_to_next), moves: OpenQueue([#]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:03,145 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:21:03,145 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#])
2017-10-24 12:21:03,146 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message []
2017-10-24 12:21:03,146 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 12:21:03,146 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:21:03,146 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=InterpretModule, reason=None))
2017-10-24 12:21:03,146 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:21:03,146 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 12:21:03,146 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 12:21:03,146 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 12:21:03,147 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:03,147 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [], sender=GenerateModule, reason=None))
2017-10-24 12:21:03,147 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [], sender=GenerateModule, reason=None)
2017-10-24 12:21:03,147 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:21:03,148 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:03,148 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 12:21:03,148 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 12:21:03,149 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:21:03,149 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:03,149 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:21:03,166 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": [], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:21:03,167 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:21:03,167 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [], sender=TextOutputComponent, reason=None))
2017-10-24 12:21:03,167 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [], sender=TextOutputComponent, reason=None)
2017-10-24 12:21:03,167 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:21:03,167 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [], sender=TurnManager, reason=None)
2017-10-24 12:21:03,167 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [], sender=TurnManager, reason=None)
2017-10-24 12:21:03,168 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [], sender=TurnManager, reason=None)
2017-10-24 12:21:03,168 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [], sender=TurnManager, reason=None))
2017-10-24 12:21:03,169 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840463.17
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back)}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:21:03,169 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:21:03,169 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:21:03,169 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:21:03,172 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 12:21:03,172 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:21:03,172 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:21:03,175 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:03,175 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:21:03,175 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:21:03,175 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:21:03,175 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:21:03,175 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:21:03,175 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:21:03,175 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:21:03,175 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:21:03,175 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:21:03,175 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:21:03,176 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:21:03,176 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:21:03,176 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:21:03,176 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:21:03,176 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:21:03,176 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:21:03,176 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:21:03,177 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:21:03,177 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:21:03,177 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:21:03,177 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:03,177 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:03,177 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:21:03,177 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:21:03,177 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:03,178 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:03,178 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:21:03,178 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:21:03,180 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:03,180 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:21:03,180 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [], latest_moves: OpenQueue([#])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:21:03,180 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:21:03,180 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:21:03,181 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:21:03,181 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:03,181 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [], latest_moves: OpenQueue([#])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 12:21:03,182 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [], latest_moves: OpenQueue([#])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:21:03,182 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [], latest_moves: OpenQueue([#])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:21:03,182 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:21:03,183 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:21:03,183 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:21:03,183 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:21:03,184 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840463.18
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back)}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:21:03,185 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:21:03,189 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
-- END TIS changes --
2017-10-24 12:21:03,189 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:21:03,190 - session_2017-10-24T12_18_34_0 - INFO - hypotheses reranking had no effect
2017-10-24 12:21:03,190 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:21:03,193 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#])
+ tis.latest_moves: OpenQueue([#, Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back')])
-- END TIS changes --
2017-10-24 12:21:03,193 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:21:03,197 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
-- END TIS changes --
2017-10-24 12:21:03,197 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:21:03,197 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:21:03,199 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:03,200 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:21:03,200 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:21:03,204 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure)}
+ tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
?                                                                                                                                    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.tmp.usr.com: {}
+ tis.private.tmp.usr.com: {device_activity_terminated(go_back)}
- tis.private.tmp.usr.plan: Stack([])
+ tis.private.tmp.usr.plan: Stack([jumpto(resolve(?X.say_step(X)))])
-- END TIS changes --
2017-10-24 12:21:03,204 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:21:03,204 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:21:03,204 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:21:03,204 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:21:03,204 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:21:03,204 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])
2017-10-24 12:21:03,205 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:21:03,206 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])
2017-10-24 12:21:03,206 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:21:03,209 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateUsrRequest
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])
+ tis.private.nim: OpenQueue([#])
- tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
+ tis.private.plan: Stack([do(go_back), jumpto(resolve(?X.say_step(X)))])
?                          +++++++++++++
- tis.shared.com: {device_activity_terminated(go_back)}
+ tis.shared.com: {}
- tis.shared.goals: stackset([perform(go_to_next), perform(top)])
+ tis.shared.goals: stackset([perform(go_back), perform(go_to_next), perform(top)])
?                                        ++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back')}
-- END TIS changes --
2017-10-24 12:21:03,209 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:21:03,209 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:21:03,210 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:21:03,210 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:03,212 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.plan: Stack([do(go_back), jumpto(resolve(?X.say_step(X)))])
+ tis.private.plan: Stack([dev_perform(go_back, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
-- END TIS changes --
2017-10-24 12:21:03,212 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:21:03,212 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:21:03,213 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:21:03,213 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:21:03,213 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:21:03,213 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:21:03,213 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:21:03,213 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:21:03,213 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:21:03,213 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:03,216 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
- tis.private.plan: Stack([dev_perform(go_back, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 12:21:03,216 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:03,216 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:03,217 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:03,217 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:21:03,217 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:21:03,217 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:03,217 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:03,217 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:21:03,217 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:21:03,217 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go back, sender=DmeModule, reason=None)
2017-10-24 12:21:03,218 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:21:03,218 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:21:03,219 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840463.18
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back')])
tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back)}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_back), perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back')}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:21:03,219 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:21:03,223 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
- tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
+ tis.private.tmp.sys.com: {}
- tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
+ tis.private.tmp.sys.goals: stackset([perform(go_back), perform(go_to_next), perform(top)])
?                                                 ++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([jumpto(resolve(?X.say_step(X)))])
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 12:21:03,223 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:21:03,226 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_back, [], True, None))])
-- END TIS changes --
2017-10-24 12:21:03,226 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:21:03,229 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_back, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:21:03,229 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:21:03,230 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:21:03,230 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:21:03,232 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:03,232 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:21:03,232 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:21:03,234 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:03,235 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 12:21:03,235 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), top_perform_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:21:03,235 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go back, sender=DmeModule, reason=None))
2017-10-24 12:21:03,235 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go back, sender=DmeModule, reason=None)
2017-10-24 12:21:03,235 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": "go back", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 12:21:03,236 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:03,236 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:21:03,236 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:21:03,236 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:21:03,237 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:03,237 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), top_perform_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)))
2017-10-24 12:21:03,238 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), top_perform_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:21:03,238 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:21:03,238 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), top_perform_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:03,239 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), top_perform_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:03,240 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:03,240 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)})
2017-10-24 12:21:03,240 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 12:21:03,240 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)})
2017-10-24 12:21:03,240 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')
2017-10-24 12:21:03,240 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 12:21:03,240 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 12:21:03,240 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')
2017-10-24 12:21:03,241 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp') generated as u'Went to the previous step'
2017-10-24 12:21:03,241 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to the previous step], sender=GenerateModule, reason=None)
2017-10-24 12:21:03,242 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:03,243 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Went to the previous step}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:21:03,244 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:03,244 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:21:03,244 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 12:21:03,244 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)})
2017-10-24 12:21:03,244 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 12:21:03,244 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)})
2017-10-24 12:21:03,244 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')
2017-10-24 12:21:03,245 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f066825ae18>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825a7a0>]
2017-10-24 12:21:03,245 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f066825ae18>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825a7a0>], sender=GuiBackend, reason=None)
2017-10-24 12:21:03,245 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:21:03,245 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to the previous step], sender=GenerateModule, reason=None))
2017-10-24 12:21:03,246 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to the previous step], sender=GenerateModule, reason=None)
2017-10-24 12:21:03,246 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Went to the previous step"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:21:03,246 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:03,246 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Went to the previous step}, sender=IndependentGuiBackend, reason=None))
2017-10-24 12:21:03,247 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Went to the previous step}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:21:03,247 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Went to the previous step"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 12:21:03,247 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:03,247 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f066825ae18>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825a7a0>], sender=GuiBackend, reason=None))
2017-10-24 12:21:03,248 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f066825ae18>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825a7a0>], sender=GuiBackend, reason=None)
2017-10-24 12:21:03,248 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "go_back", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Went to the previous step"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:21:03,248 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:03,248 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:21:03,266 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Went to the previous step"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:21:03,266 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:21:03,267 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Went to the previous step], sender=TextOutputComponent, reason=None))
2017-10-24 12:21:03,267 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Went to the previous step], sender=TextOutputComponent, reason=None)
2017-10-24 12:21:03,267 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:21:03,267 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None)
2017-10-24 12:21:03,267 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None)
2017-10-24 12:21:03,267 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None)
2017-10-24 12:21:03,268 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None))
2017-10-24 12:21:03,269 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840463.27
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_back), perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back)}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_back), perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back')}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:21:03,269 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:21:03,270 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:21:03,270 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:21:03,275 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back')}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 12:21:03,275 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:21:03,276 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:21:03,278 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 12:21:03,278 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:21:03,278 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:21:03,278 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:21:03,279 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:21:03,279 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:21:03,279 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:21:03,279 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:21:03,280 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:21:03,280 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:21:03,280 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:21:03,280 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:21:03,283 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 12:21:03,283 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:21:03,284 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:21:03,284 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:21:03,284 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:03,284 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:21:03,287 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {device_activity_terminated(go_back)}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:21:03,287 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:21:03,287 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:21:03,290 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
- tis.shared.goals: stackset([perform(go_back), perform(go_to_next), perform(top)])
?                                        ------------------
+ tis.shared.goals: stackset([perform(go_to_next), perform(top)])
-- END TIS changes --
2017-10-24 12:21:03,291 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:21:03,291 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:03,291 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:21:03,291 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:21:03,291 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:21:03,291 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:21:03,291 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:21:03,291 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:21:03,291 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:21:03,291 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:21:03,291 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:21:03,292 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:03,292 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:03,292 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:21:03,292 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:21:03,292 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:03,292 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:03,293 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:21:03,293 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:21:03,295 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:03,295 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:21:03,295 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Went to the previous step], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:21:03,295 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:21:03,295 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:21:03,296 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:21:03,296 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:03,296 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Went to the previous step], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 12:21:03,297 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Went to the previous step], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:21:03,297 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Went to the previous step], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:21:03,297 - session_2017-10-24T12_18_34_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f066825b368>:1.0
2017-10-24 12:21:03,298 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:21:04,297 - session_2017-10-24T12_18_34_0 - DEBUG - Timeout fired
2017-10-24 12:21:04,298 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:21:04,298 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:21:04,298 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:21:04,298 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:21:04,299 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840464.3
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_back), perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back)}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back)}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back')}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:21:04,299 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:21:04,299 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:21:04,302 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:21:04,302 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:21:04,306 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back')}
-- END TIS changes --
2017-10-24 12:21:04,306 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:21:04,306 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:21:04,309 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:04,309 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:21:04,309 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:21:04,309 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:21:04,309 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:21:04,309 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:21:04,309 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:21:04,310 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:21:04,310 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:21:04,310 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:21:04,310 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:21:04,310 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:21:04,310 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:21:04,310 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:21:04,310 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:21:04,310 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:21:04,310 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:21:04,310 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:21:04,311 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:21:04,311 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:21:04,311 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:21:04,311 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:04,311 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:04,311 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:21:04,311 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:21:04,312 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:04,312 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:04,312 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:21:04,312 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:21:04,312 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:21:04,312 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:21:04,313 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840464.3
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_back), perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back)}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back)}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:21:04,313 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:21:04,317 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
- tis.private.tmp.sys.com: {}
+ tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
- tis.private.tmp.sys.goals: stackset([perform(go_back), perform(go_to_next), perform(top)])
?                                                 ------------------
+ tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([jumpto(resolve(?X.say_step(X)))])
-- END TIS changes --
2017-10-24 12:21:04,318 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:21:04,318 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:21:04,318 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:21:04,318 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:21:04,321 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:04,321 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:21:04,321 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:21:04,323 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:04,323 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#])
2017-10-24 12:21:04,324 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:21:08,517 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 12:21:08,518 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:21:08,518 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 12:21:08,518 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 12:21:08,518 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 12:21:08,518 - session_2017-10-24T12_18_34_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 12:21:08,518 - session_2017-10-24T12_18_34_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 12:21:08,519 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 12:21:08,520 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 12:21:08,520 - session_2017-10-24T12_18_34_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 12:21:08,520 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:21:08,520 - session_2017-10-24T12_18_34_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 12:21:08,520 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 12:21:08,521 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:21:08,521 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:21:08,521 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:21:08,522 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:08,522 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 12:21:08,523 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:21:08,523 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:21:08,523 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:08,523 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:08,524 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(go_to_next), moves: OpenQueue([#]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:08,524 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [], sender=GenerateModule, reason=None)
2017-10-24 12:21:08,525 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(go_to_next), moves: OpenQueue([#]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:08,527 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([jumpto(resolve(?X.say_step(X)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(go_to_next), moves: OpenQueue([#]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:08,528 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:21:08,528 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#])
2017-10-24 12:21:08,529 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f066823ea70>]
2017-10-24 12:21:08,530 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f066823ea70>], sender=GuiBackend, reason=None)
2017-10-24 12:21:08,530 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:21:08,530 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 12:21:08,530 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:21:08,530 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 12:21:08,530 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 12:21:08,531 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 12:21:08,531 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:08,531 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [], sender=GenerateModule, reason=None))
2017-10-24 12:21:08,531 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [], sender=GenerateModule, reason=None)
2017-10-24 12:21:08,532 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:21:08,533 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:08,533 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f066823ea70>], sender=GuiBackend, reason=None))
2017-10-24 12:21:08,533 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f066823ea70>], sender=GuiBackend, reason=None)
2017-10-24 12:21:08,533 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:21:08,534 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:08,535 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:21:08,537 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": [], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:21:08,537 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:21:08,537 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [], sender=TextOutputComponent, reason=None))
2017-10-24 12:21:08,538 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [], sender=TextOutputComponent, reason=None)
2017-10-24 12:21:08,538 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:21:08,538 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [], sender=TurnManager, reason=None)
2017-10-24 12:21:08,538 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [], sender=TurnManager, reason=None)
2017-10-24 12:21:08,538 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [], sender=TurnManager, reason=None)
2017-10-24 12:21:08,538 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [], sender=TurnManager, reason=None))
2017-10-24 12:21:08,540 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840468.54
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back)}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back)}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:21:08,540 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:21:08,540 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:21:08,540 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:21:08,544 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 12:21:08,544 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:21:08,544 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:21:08,546 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:08,546 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:21:08,546 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:21:08,546 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:21:08,547 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:21:08,547 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:21:08,547 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:21:08,547 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:21:08,547 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:21:08,547 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:21:08,547 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:21:08,547 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:21:08,547 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:21:08,547 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:21:08,547 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:21:08,548 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:21:08,548 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:21:08,548 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:21:08,548 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:21:08,548 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:21:08,548 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:21:08,548 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:08,549 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:08,549 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:21:08,549 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:21:08,549 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:08,549 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:08,549 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:21:08,549 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:21:08,552 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:08,552 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:21:08,553 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [], latest_moves: OpenQueue([#])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:21:08,553 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:21:08,553 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:21:08,553 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:21:08,553 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:08,553 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [], latest_moves: OpenQueue([#])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 12:21:08,554 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [], latest_moves: OpenQueue([#])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:21:08,554 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [], latest_moves: OpenQueue([#])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:21:08,554 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:21:08,554 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:21:08,555 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:21:08,555 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:21:08,556 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840468.56
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back)}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back)}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:21:08,557 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:21:08,562 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 12:21:08,562 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:21:08,563 - session_2017-10-24T12_18_34_0 - INFO - hypotheses reranking had no effect
2017-10-24 12:21:08,563 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:21:08,566 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#])
+ tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next')])
-- END TIS changes --
2017-10-24 12:21:08,566 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:21:08,569 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
-- END TIS changes --
2017-10-24 12:21:08,569 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:21:08,569 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:21:08,572 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:08,572 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:21:08,572 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:21:08,575 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:08,575 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:21:08,575 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:21:08,575 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:21:08,575 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:21:08,575 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:21:08,576 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])
2017-10-24 12:21:08,576 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:21:08,576 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])
2017-10-24 12:21:08,576 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:21:08,580 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateUsrRequest
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
+ tis.private.plan: Stack([do(go_to_next), jumpto(resolve(?X.say_step(X)))])
?                          ++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 12:21:08,580 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:21:08,580 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:21:08,580 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:21:08,580 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:08,583 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.plan: Stack([do(go_to_next), jumpto(resolve(?X.say_step(X)))])
+ tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
-- END TIS changes --
2017-10-24 12:21:08,583 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:21:08,583 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:21:08,583 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:21:08,584 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:21:08,584 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:21:08,584 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:21:08,584 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:21:08,584 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:21:08,584 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:21:08,584 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:08,588 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None)}
?                                                                                                                                                                                                                   +++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 12:21:08,588 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:08,588 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:08,588 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:08,588 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:21:08,588 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:21:08,589 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:08,589 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:08,589 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:21:08,589 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:21:08,589 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 12:21:08,589 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:21:08,589 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:21:08,590 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840468.56
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back)}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back)}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next')}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:21:08,590 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:21:08,594 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None)}
?                                                                                                                                                                                                                           +++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([jumpto(resolve(?X.say_step(X)))])
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 12:21:08,594 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:21:08,598 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
-- END TIS changes --
2017-10-24 12:21:08,598 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:21:08,601 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:21:08,601 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:21:08,601 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:21:08,601 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:21:08,604 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:08,604 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:21:08,604 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:21:08,606 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:08,606 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 12:21:08,607 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:21:08,607 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 12:21:08,607 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 12:21:08,607 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 12:21:08,607 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:08,608 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:21:08,608 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:21:08,608 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:21:08,609 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:08,609 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 12:21:08,610 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:21:08,610 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:21:08,610 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:08,610 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:08,611 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:08,612 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_back), device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 12:21:08,613 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 12:21:08,614 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_back), device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 12:21:08,614 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 12:21:08,614 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 12:21:08,614 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 12:21:08,614 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 12:21:08,615 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp') generated as u'Went to next'
2017-10-24 12:21:08,615 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None)
2017-10-24 12:21:08,616 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:08,617 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:21:08,618 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:08,618 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:21:08,618 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 12:21:08,618 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_back), device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 12:21:08,618 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 12:21:08,618 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_back), device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 12:21:08,619 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 12:21:08,619 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f066825a3f8>, <tdm.tdm_gui_protocol.Popup instance at 0x7f0668a7fdd0>]
2017-10-24 12:21:08,619 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f066825a3f8>, <tdm.tdm_gui_protocol.Popup instance at 0x7f0668a7fdd0>], sender=GuiBackend, reason=None)
2017-10-24 12:21:08,619 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:21:08,620 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None))
2017-10-24 12:21:08,620 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None)
2017-10-24 12:21:08,620 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Went to next"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:21:08,620 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:08,620 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None))
2017-10-24 12:21:08,621 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:21:08,621 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Went to next"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 12:21:08,622 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:08,622 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f066825a3f8>, <tdm.tdm_gui_protocol.Popup instance at 0x7f0668a7fdd0>], sender=GuiBackend, reason=None))
2017-10-24 12:21:08,623 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f066825a3f8>, <tdm.tdm_gui_protocol.Popup instance at 0x7f0668a7fdd0>], sender=GuiBackend, reason=None)
2017-10-24 12:21:08,623 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "go_to_next", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Went to next"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:21:08,624 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:08,624 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:21:08,639 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Went to next"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:21:08,639 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:21:08,639 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Went to next], sender=TextOutputComponent, reason=None))
2017-10-24 12:21:08,639 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Went to next], sender=TextOutputComponent, reason=None)
2017-10-24 12:21:08,640 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:21:08,640 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 12:21:08,640 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 12:21:08,640 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 12:21:08,640 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 12:21:08,641 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840468.64
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back)}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back)}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next')}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:21:08,642 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:21:08,642 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:21:08,642 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:21:08,648 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 12:21:08,648 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:21:08,648 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:21:08,651 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 12:21:08,651 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:21:08,652 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:21:08,652 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:21:08,652 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:21:08,652 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:21:08,652 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:21:08,652 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:21:08,652 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:21:08,652 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:21:08,653 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:21:08,653 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:21:08,657 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 12:21:08,657 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:21:08,657 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:21:08,657 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:21:08,657 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:08,657 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:21:08,660 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {device_activity_terminated(go_back)}
+ tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next)}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:21:08,660 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:21:08,660 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:21:08,663 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
- tis.shared.goals: stackset([perform(go_to_next), perform(top)])
?                                     ---------------------
+ tis.shared.goals: stackset([perform(top)])
- tis.shared.previous_goal: perform(go_back)
?                                      ^^^^
+ tis.shared.previous_goal: perform(go_to_next)
?                                      ^^^^^^^
-- END TIS changes --
2017-10-24 12:21:08,663 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:21:08,664 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:08,664 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:21:08,664 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:21:08,664 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:21:08,664 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:21:08,664 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:21:08,664 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:21:08,664 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:21:08,664 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:21:08,664 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:21:08,664 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:08,668 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
?                          ^ ^^^^^ ^^^^^^                -
+ tis.private.plan: Stack([device_query(?X.say_step(X))])
?                          ^^^^^^^^ ^ ^
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:21:08,668 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:08,668 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:08,671 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None)}
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
?                                                                                                                                                                                                                                                                        +++++++++++++++++++++++++++
- tis.private.plan: Stack([device_query(?X.say_step(X))])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 12:21:08,671 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:08,672 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:08,672 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:08,672 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:21:08,672 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:21:08,672 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:08,673 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:08,673 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:21:08,673 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:21:08,675 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:08,675 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: other example}], sender=DmeModule, reason=None)
2017-10-24 12:21:08,675 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:21:08,676 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840468.64
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back)}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next)}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:21:08,677 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:21:08,682 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None)}
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
?                                                                                                                                                                                                                                                                                +++++++++++++++++++++++++++
- tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
+ tis.private.tmp.sys.com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next)}
?                                                              ++++++++++++++++++++++++++++++++++++++++
- tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                       ------ ^^^^^^^^^^
+ tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      ++++++++++++++++++  ^^
-- END TIS changes --
2017-10-24 12:21:08,683 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:21:08,685 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), respond(?X.say_step(X))])
?                                                                  +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:21:08,685 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:21:08,688 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), respond(?X.say_step(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
-- END TIS changes --
2017-10-24 12:21:08,688 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:21:08,691 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("other example")))])
- tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:21:08,691 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:21:08,691 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:21:08,691 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:21:08,694 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:08,694 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:21:08,694 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:21:08,696 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:08,697 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')])
2017-10-24 12:21:08,697 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 12:21:08,697 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: other example}], sender=DmeModule, reason=None))
2017-10-24 12:21:08,697 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: other example}], sender=DmeModule, reason=None)
2017-10-24 12:21:08,697 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "other example"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:21:08,698 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:08,698 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)))
2017-10-24 12:21:08,699 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 12:21:08,699 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:21:08,699 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:08,700 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:08,702 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:08,702 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("other example")), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_back), device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")})
2017-10-24 12:21:08,702 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("other example")), ddd_name=u'recipehelp')
2017-10-24 12:21:08,702 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(say_step("other example")), ddd_name=u'recipehelp')
2017-10-24 12:21:08,703 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move Move(answer(say_step("other example")), ddd_name=u'recipehelp') generated as u'Ok other example.'
2017-10-24 12:21:08,703 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok other example.], sender=GenerateModule, reason=None)
2017-10-24 12:21:08,704 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:08,705 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok other example.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:21:08,707 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("other example")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:21:08,707 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:21:08,707 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp')])
2017-10-24 12:21:08,707 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("other example")), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_back), device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")})
2017-10-24 12:21:08,707 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("other example")), ddd_name=u'recipehelp')
2017-10-24 12:21:08,708 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f066825ab48>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825bea8>]
2017-10-24 12:21:08,708 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f066825ab48>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825bea8>], sender=GuiBackend, reason=None)
2017-10-24 12:21:08,708 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:21:08,708 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok other example.], sender=GenerateModule, reason=None))
2017-10-24 12:21:08,708 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok other example.], sender=GenerateModule, reason=None)
2017-10-24 12:21:08,708 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok other example."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:21:08,709 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:08,709 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok other example.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 12:21:08,710 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok other example.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:21:08,710 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok other example."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 12:21:08,711 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:08,711 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f066825ab48>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825bea8>], sender=GuiBackend, reason=None))
2017-10-24 12:21:08,711 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f066825ab48>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825bea8>], sender=GuiBackend, reason=None)
2017-10-24 12:21:08,711 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok other example."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:21:08,713 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:08,713 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:21:08,747 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok other example."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:21:08,747 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:21:08,747 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok other example.], sender=TextOutputComponent, reason=None))
2017-10-24 12:21:08,747 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok other example.], sender=TextOutputComponent, reason=None)
2017-10-24 12:21:08,747 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:21:08,747 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok other example.], sender=TurnManager, reason=None)
2017-10-24 12:21:08,747 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok other example.], sender=TurnManager, reason=None)
2017-10-24 12:21:08,748 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok other example.], sender=TurnManager, reason=None)
2017-10-24 12:21:08,748 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok other example.], sender=TurnManager, reason=None))
2017-10-24 12:21:08,749 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840468.75
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok other example.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("other example")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
tis.private.tmp.sys.com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back)}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next)}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:21:08,749 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:21:08,749 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:21:08,750 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:21:08,754 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 12:21:08,754 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:21:08,754 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:21:08,757 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:08,757 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:21:08,758 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:21:08,758 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:21:08,758 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:21:08,758 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:21:08,758 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:21:08,758 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:21:08,758 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:21:08,758 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:21:08,758 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:21:08,758 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:21:08,762 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next)}
+ tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next), say_step("other example")}
?                                                                                             +++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:21:08,762 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:21:08,762 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:21:08,767 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next), say_step("other example")}
+ tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next), say_step("other example"), resolved(?X.say_step(X))}
?                                                                                                                        ++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             -------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 12:21:08,767 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:21:08,767 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:08,767 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:21:08,768 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:21:08,768 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:21:08,768 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:21:08,768 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:21:08,768 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:21:08,768 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:21:08,768 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:21:08,768 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:21:08,768 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:08,769 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:08,769 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:21:08,769 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:21:08,769 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:08,769 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:08,769 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:21:08,770 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:21:08,772 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:08,772 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: other example}], sender=DmeModule, reason=None)
2017-10-24 12:21:08,773 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok other example.], latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:21:08,773 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: other example}], sender=DmeModule, reason=None))
2017-10-24 12:21:08,773 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: other example}], sender=DmeModule, reason=None)
2017-10-24 12:21:08,773 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "other example"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:21:08,773 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:21:08,774 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok other example.], latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 12:21:08,774 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok other example.], latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:21:08,775 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok other example.], latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:21:08,775 - session_2017-10-24T12_18_34_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f0668a9f1b8>:1.0
2017-10-24 12:21:08,775 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:21:09,775 - session_2017-10-24T12_18_34_0 - DEBUG - Timeout fired
2017-10-24 12:21:09,775 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:21:09,775 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:21:09,775 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:21:09,776 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:21:09,777 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840469.78
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("other example")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
tis.private.tmp.sys.com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back)}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next), say_step("other example"), resolved(?X.say_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:21:09,777 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:21:09,777 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:21:09,779 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:21:09,780 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:21:09,784 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:21:09,784 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:21:09,784 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:21:09,787 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:09,787 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:21:09,787 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:21:09,788 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:21:09,788 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:21:09,788 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:21:09,788 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:21:09,788 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:21:09,788 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:21:09,789 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:21:09,789 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:21:09,789 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:21:09,789 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:21:09,789 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:21:09,789 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:21:09,789 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:21:09,789 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:21:09,789 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:21:09,790 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:21:09,790 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:21:09,790 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:21:09,790 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:09,795 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 12:21:09,795 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:09,795 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:09,799 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next), say_step("other example"), resolved(?X.say_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 12:21:09,799 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:09,799 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:09,799 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:09,800 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:21:09,800 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:21:09,800 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:21:09,800 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:21:09,800 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:21:09,800 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:21:09,800 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:21:09,801 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:21:09,802 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840469.78
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
tis.private.tmp.sys.com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back)}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:21:09,802 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:21:09,807 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
?                                                                ^ ^^ ^^^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                ^^^^^^^^^^^^ ^^^^^ ^
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), DeviceResultProposition(go_to_next, [], True, None), say_step("other example")}
- tis.private.tmp.sys.com: {device_activity_terminated(go_back), device_activity_terminated(go_to_next)}
+ tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.com: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      -------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 12:21:09,807 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:21:09,811 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:21:09,811 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:21:09,813 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 12:21:09,813 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:21:09,816 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:21:09,816 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:21:09,816 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:21:09,816 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:21:09,818 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:21:09,818 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:21:09,819 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:21:09,821 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 12:21:09,822 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 12:21:09,822 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:28:02,310 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go back"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 12:28:02,310 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:28:02,310 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go back}], sender=TextInputComponent, reason=None))
2017-10-24 12:28:02,311 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go back}], sender=TextInputComponent, reason=None)
2017-10-24 12:28:02,311 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go back}], sender=TextInputComponent, reason=None)
2017-10-24 12:28:02,311 - session_2017-10-24T12_18_34_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go back"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 12:28:02,311 - session_2017-10-24T12_18_34_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 12:28:02,312 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 12:28:02,312 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])} for DDD 'recipehelp'
2017-10-24 12:28:02,312 - session_2017-10-24T12_18_34_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
2017-10-24 12:28:02,312 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:28:02,313 - session_2017-10-24T12_18_34_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go back"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go back", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_back"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go back", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 12:28:02,313 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go back}], sender=TextInputComponent, reason=None)
2017-10-24 12:28:02,313 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:28:02,313 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:28:02,313 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:28:02,314 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:28:02,315 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 12:28:02,315 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:28:02,315 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:28:02,316 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:28:02,316 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:28:02,317 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:28:02,317 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 12:28:02,317 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 12:28:02,318 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 12:28:02,318 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 12:28:02,318 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 12:28:02,318 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 12:28:02,318 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 12:28:02,319 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 12:28:02,319 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 12:28:02,320 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:28:02,321 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:28:02,322 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:28:02,322 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 12:28:02,322 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 12:28:02,322 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 12:28:02,322 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 12:28:02,322 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 12:28:02,323 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0668223368>]
2017-10-24 12:28:02,323 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0668223368>], sender=GuiBackend, reason=None)
2017-10-24 12:28:02,323 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:28:02,323 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=InterpretModule, reason=None))
2017-10-24 12:28:02,323 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:28:02,324 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 12:28:02,324 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 12:28:02,324 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 12:28:02,324 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:28:02,324 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 12:28:02,325 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 12:28:02,325 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:28:02,326 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:28:02,326 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0668223368>], sender=GuiBackend, reason=None))
2017-10-24 12:28:02,326 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0668223368>], sender=GuiBackend, reason=None)
2017-10-24 12:28:02,326 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:28:02,327 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:28:02,327 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:28:02,346 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:28:02,346 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:28:02,346 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 12:28:02,347 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 12:28:02,347 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:28:02,347 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 12:28:02,347 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 12:28:02,347 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 12:28:02,347 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 12:28:02,349 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840882.35
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back)}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:28:02,349 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:28:02,349 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:28:02,349 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:28:02,352 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(say_step("other example")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 12:28:02,352 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:28:02,352 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:28:02,355 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:28:02,355 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:28:02,355 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:28:02,356 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:28:02,356 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:28:02,356 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:28:02,356 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:28:02,356 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:28:02,356 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:28:02,356 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:28:02,356 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:28:02,356 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:28:02,360 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 12:28:02,360 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:28:02,360 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:28:02,360 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:28:02,360 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:02,360 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:28:02,363 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 12:28:02,363 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:28:02,363 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:28:02,364 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:28:02,364 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:02,364 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:28:02,364 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:28:02,364 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:28:02,364 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:28:02,364 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:28:02,364 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:28:02,365 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:28:02,365 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:28:02,365 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:28:02,365 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:28:02,365 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:02,365 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:28:02,365 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:28:02,366 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:28:02,366 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:02,366 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:28:02,366 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:28:02,369 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 12:28:02,369 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:28:02,369 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:28:02,369 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:28:02,369 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:28:02,369 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:28:02,370 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:28:02,370 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 12:28:02,370 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:28:02,371 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:28:02,371 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:28:02,371 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:28:02,372 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:28:02,372 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:28:02,373 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840882.37
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_back)}
tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.usr.plan: Stack([jumpto(resolve(?X.say_step(X)))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:28:02,373 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:28:02,377 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("go back"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #]), OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
-- END TIS changes --
2017-10-24 12:28:02,377 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:28:02,382 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                            ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                            ^
- tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go back'), #])}
?                                                                                                                           ^
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}
?                                                                                                                           ^
-- END TIS changes --
2017-10-24 12:28:02,383 - session_2017-10-24T12_18_34_0 - INFO - hypotheses reranking had no effect
2017-10-24 12:28:02,384 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:28:02,390 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 12:28:02,390 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:28:02,397 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 12:28:02,397 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:28:02,398 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:28:02,400 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:28:02,400 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:28:02,400 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:28:02,409 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], False, undefined_failure), device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
- tis.private.tmp.usr.com: {device_activity_terminated(go_back)}
+ tis.private.tmp.usr.bel: {}
+ tis.private.tmp.usr.com: {}
- tis.private.tmp.usr.goals: stackset([perform(go_to_next), perform(top)])
?                                      ^  ----   ^^^^^^^^
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                      ^^^^^^^^^^   +++  ^^^^^
- tis.private.tmp.usr.plan: Stack([jumpto(resolve(?X.say_step(X)))])
?                                  ^ -- ---------    ^ ^^^^^^  -
+ tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
?                                  ^^^^^      ^^ ^
- tis.private.tmp.usr.qud: stackset([])
+ tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                    ++++++++++
-- END TIS changes --
2017-10-24 12:28:02,409 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:28:02,409 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:28:02,409 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:28:02,409 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:28:02,409 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:28:02,409 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])
2017-10-24 12:28:02,409 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:28:02,410 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])
2017-10-24 12:28:02,410 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:28:02,413 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateUsrRequest
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])
+ tis.private.nim: OpenQueue([#])
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([do(go_back), findout(?X.goal(X))])
?                          +++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([perform(go_back), resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back')}
-- END TIS changes --
2017-10-24 12:28:02,413 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:28:02,413 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:28:02,416 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateISSUES3
-- BEGIN TIS changes --
- tis.shared.goals: stackset([perform(go_back), resolve_user(?X.goal(X)), perform(top)])
?                                               --------------------------
+ tis.shared.goals: stackset([perform(go_back), perform(top)])
-- END TIS changes --
2017-10-24 12:28:02,416 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:28:02,416 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:02,419 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.plan: Stack([do(go_back), findout(?X.goal(X))])
+ tis.private.plan: Stack([dev_perform(go_back, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
-- END TIS changes --
2017-10-24 12:28:02,419 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:28:02,420 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:28:02,420 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:28:02,420 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:28:02,420 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:28:02,420 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:28:02,420 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:28:02,421 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:28:02,421 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:28:02,421 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:28:02,423 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.bel: {}
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
+ tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
- tis.private.plan: Stack([dev_perform(go_back, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 12:28:02,424 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:02,424 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:28:02,424 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:02,424 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:28:02,426 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.goal(X)])
?                           ----------
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 12:28:02,426 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:28:02,427 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:28:02,427 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:02,427 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:28:02,427 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:28:02,427 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go back, sender=DmeModule, reason=None)
2017-10-24 12:28:02,427 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:28:02,427 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:28:02,428 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840882.37
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back')])
tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_back), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:28:02,429 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:28:02,433 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([perform(go_back), perform(top)])
?                                              ++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 12:28:02,433 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:28:02,436 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_back, [], True, None))])
-- END TIS changes --
2017-10-24 12:28:02,436 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:28:02,439 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_back, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:28:02,439 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:28:02,439 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:28:02,439 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:28:02,441 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:28:02,441 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:28:02,441 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:28:02,444 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 12:28:02,444 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 12:28:02,444 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), top_perform_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:28:02,445 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go back, sender=DmeModule, reason=None))
2017-10-24 12:28:02,445 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go back, sender=DmeModule, reason=None)
2017-10-24 12:28:02,445 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": "go back", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 12:28:02,445 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:28:02,446 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:28:02,446 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:28:02,448 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:28:02,448 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:28:02,449 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), top_perform_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None)))
2017-10-24 12:28:02,449 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), top_perform_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:28:02,450 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:28:02,450 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), top_perform_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:28:02,450 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), top_perform_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:28:02,451 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:28:02,451 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)})
2017-10-24 12:28:02,451 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 12:28:02,451 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)})
2017-10-24 12:28:02,452 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')
2017-10-24 12:28:02,452 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 12:28:02,452 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 12:28:02,452 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')
2017-10-24 12:28:02,452 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp') generated as u'Went to the previous step'
2017-10-24 12:28:02,453 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to the previous step], sender=GenerateModule, reason=None)
2017-10-24 12:28:02,453 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:28:02,454 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Went to the previous step}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:28:02,455 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_back), device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(go_back), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:28:02,455 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:28:02,456 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 12:28:02,456 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)})
2017-10-24 12:28:02,456 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 12:28:02,456 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)})
2017-10-24 12:28:02,456 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp')
2017-10-24 12:28:02,457 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f0668a8ac68>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825ab90>]
2017-10-24 12:28:02,457 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f0668a8ac68>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825ab90>], sender=GuiBackend, reason=None)
2017-10-24 12:28:02,457 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:28:02,457 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to the previous step], sender=GenerateModule, reason=None))
2017-10-24 12:28:02,457 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to the previous step], sender=GenerateModule, reason=None)
2017-10-24 12:28:02,457 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Went to the previous step"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:28:02,458 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:28:02,459 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Went to the previous step}, sender=IndependentGuiBackend, reason=None))
2017-10-24 12:28:02,459 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Went to the previous step}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:28:02,459 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Went to the previous step"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 12:28:02,460 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:28:02,460 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f0668a8ac68>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825ab90>], sender=GuiBackend, reason=None))
2017-10-24 12:28:02,461 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f0668a8ac68>, <tdm.tdm_gui_protocol.Popup instance at 0x7f066825ab90>], sender=GuiBackend, reason=None)
2017-10-24 12:28:02,461 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "go_back", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Went to the previous step"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:28:02,462 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:28:02,462 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:28:02,473 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Went to the previous step"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:28:02,474 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:28:02,474 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Went to the previous step], sender=TextOutputComponent, reason=None))
2017-10-24 12:28:02,474 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Went to the previous step], sender=TextOutputComponent, reason=None)
2017-10-24 12:28:02,474 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:28:02,474 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None)
2017-10-24 12:28:02,475 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None)
2017-10-24 12:28:02,475 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None)
2017-10-24 12:28:02,475 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None))
2017-10-24 12:28:02,477 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840882.48
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_back, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_back), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_back), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:28:02,477 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:28:02,477 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:28:02,477 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:28:02,483 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back')}
?            ^^
- tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:28:02,483 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:28:02,484 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:28:02,486 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(go_back, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 12:28:02,486 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:28:02,486 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:28:02,486 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:28:02,486 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:28:02,487 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:28:02,487 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:28:02,487 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:28:02,487 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:28:02,487 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:28:02,487 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:28:02,487 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:28:02,492 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 12:28:02,492 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:28:02,492 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:28:02,492 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:28:02,492 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:02,492 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:28:02,495 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {device_activity_terminated(go_back)}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:28:02,495 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:28:02,495 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:28:02,498 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
- tis.shared.goals: stackset([perform(go_back), perform(top)])
?                                     ------------------
+ tis.shared.goals: stackset([perform(top)])
- tis.shared.previous_goal: perform(go_to_next)
?                                      ^^^^^^^
+ tis.shared.previous_goal: perform(go_back)
?                                      ^^^^
-- END TIS changes --
2017-10-24 12:28:02,498 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:28:02,498 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:02,498 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:28:02,498 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:28:02,499 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:28:02,499 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:28:02,499 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:28:02,499 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:28:02,499 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:28:02,499 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:28:02,499 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:28:02,500 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:28:02,503 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
?                          ^ ^^^^^ ^^^^^^                -
+ tis.private.plan: Stack([device_query(?X.say_step(X))])
?                          ^^^^^^^^ ^ ^
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:28:02,503 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:02,503 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:28:02,506 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
+ tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), say_step(" Step one: Chop onions and garlic.")}
?                                                                                                        ++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([device_query(?X.say_step(X))])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 12:28:02,506 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:02,507 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:28:02,507 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:02,507 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:28:02,507 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:28:02,507 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:28:02,507 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:02,508 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:28:02,508 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:28:02,510 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 12:28:02,510 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value:  Step one: Chop onions and garlic.}], sender=DmeModule, reason=None)
2017-10-24 12:28:02,510 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:28:02,512 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840882.48
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), say_step(" Step one: Chop onions and garlic.")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_back), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_back)}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back')}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:28:02,512 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:28:02,519 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_back, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None)}
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), say_step(" Step one: Chop onions and garlic.")}
?                                                                                                                ++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.tmp.sys.com: {}
+ tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
- tis.private.tmp.sys.goals: stackset([perform(go_back), perform(top)])
?                                       ------ ^^^^^^^
+ tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      ++++++++++++++++++  ^^
-- END TIS changes --
2017-10-24 12:28:02,519 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:28:02,522 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), respond(?X.say_step(X))])
?                                                                  +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:28:02,522 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:28:02,525 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), respond(?X.say_step(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
-- END TIS changes --
2017-10-24 12:28:02,525 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:28:02,527 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))])
- tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:28:02,528 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:28:02,528 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:28:02,528 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:28:02,530 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:28:02,530 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:28:02,530 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:28:02,532 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:28:02,533 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')])
2017-10-24 12:28:02,533 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), say_step(" Step one: Chop onions and garlic.")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None))
2017-10-24 12:28:02,533 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value:  Step one: Chop onions and garlic.}], sender=DmeModule, reason=None))
2017-10-24 12:28:02,533 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value:  Step one: Chop onions and garlic.}], sender=DmeModule, reason=None)
2017-10-24 12:28:02,533 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": " Step one: Chop onions and garlic."}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:28:02,534 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:28:02,534 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), say_step(" Step one: Chop onions and garlic.")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None)))
2017-10-24 12:28:02,534 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), say_step(" Step one: Chop onions and garlic.")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Went to the previous step], sender=TurnManager, reason=None))
2017-10-24 12:28:02,535 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:28:02,536 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), say_step(" Step one: Chop onions and garlic.")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:28:02,536 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), say_step(" Step one: Chop onions and garlic.")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:28:02,537 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), say_step(" Step one: Chop onions and garlic.")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:28:02,537 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), say_step(" Step one: Chop onions and garlic.")})
2017-10-24 12:28:02,537 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')
2017-10-24 12:28:02,538 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')
2017-10-24 12:28:02,538 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp') generated as u'Ok  Step one: Chop onions and garlic..'
2017-10-24 12:28:02,538 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok  Step one: Chop onions and garlic..], sender=GenerateModule, reason=None)
2017-10-24 12:28:02,539 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), say_step(" Step one: Chop onions and garlic.")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:28:02,540 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok  Step one: Chop onions and garlic..}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:28:02,541 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), say_step(" Step one: Chop onions and garlic.")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_back)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:28:02,541 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:28:02,542 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')])
2017-10-24 12:28:02,542 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), say_step(" Step one: Chop onions and garlic.")})
2017-10-24 12:28:02,542 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp')
2017-10-24 12:28:02,543 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f06681f2b00>, <tdm.tdm_gui_protocol.Popup instance at 0x7f06681f2050>]
2017-10-24 12:28:02,543 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f06681f2b00>, <tdm.tdm_gui_protocol.Popup instance at 0x7f06681f2050>], sender=GuiBackend, reason=None)
2017-10-24 12:28:02,543 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:28:02,543 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok  Step one: Chop onions and garlic..], sender=GenerateModule, reason=None))
2017-10-24 12:28:02,543 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok  Step one: Chop onions and garlic..], sender=GenerateModule, reason=None)
2017-10-24 12:28:02,543 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok  Step one: Chop onions and garlic.."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:28:02,544 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:28:02,544 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok  Step one: Chop onions and garlic..}, sender=IndependentGuiBackend, reason=None))
2017-10-24 12:28:02,544 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok  Step one: Chop onions and garlic..}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:28:02,544 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok  Step one: Chop onions and garlic.."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 12:28:02,545 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:28:02,545 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f06681f2b00>, <tdm.tdm_gui_protocol.Popup instance at 0x7f06681f2050>], sender=GuiBackend, reason=None))
2017-10-24 12:28:02,545 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f06681f2b00>, <tdm.tdm_gui_protocol.Popup instance at 0x7f06681f2050>], sender=GuiBackend, reason=None)
2017-10-24 12:28:02,545 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok  Step one: Chop onions and garlic.."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:28:02,546 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:28:02,546 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:28:02,585 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok  Step one: Chop onions and garlic.."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:28:02,586 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:28:02,586 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok  Step one: Chop onions and garlic..], sender=TextOutputComponent, reason=None))
2017-10-24 12:28:02,586 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok  Step one: Chop onions and garlic..], sender=TextOutputComponent, reason=None)
2017-10-24 12:28:02,586 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:28:02,586 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok  Step one: Chop onions and garlic..], sender=TurnManager, reason=None)
2017-10-24 12:28:02,586 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok  Step one: Chop onions and garlic..], sender=TurnManager, reason=None)
2017-10-24 12:28:02,586 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok  Step one: Chop onions and garlic..], sender=TurnManager, reason=None)
2017-10-24 12:28:02,587 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok  Step one: Chop onions and garlic..], sender=TurnManager, reason=None))
2017-10-24 12:28:02,588 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840882.59
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok  Step one: Chop onions and garlic..], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), say_step(" Step one: Chop onions and garlic.")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), say_step(" Step one: Chop onions and garlic.")}
tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_back)}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back')}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:28:02,588 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:28:02,589 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:28:02,589 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:28:02,593 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(request(go_back), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go back')}
-- END TIS changes --
2017-10-24 12:28:02,593 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:28:02,593 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:28:02,596 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:28:02,596 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:28:02,596 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:28:02,597 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:28:02,597 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:28:02,597 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:28:02,597 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:28:02,597 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:28:02,597 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:28:02,597 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:28:02,597 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:28:02,597 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:28:02,600 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {device_activity_terminated(go_back)}
+ tis.shared.com: {device_activity_terminated(go_back), say_step(" Step one: Chop onions and garlic.")}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:28:02,600 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:28:02,601 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:28:02,604 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_back), say_step(" Step one: Chop onions and garlic.")}
+ tis.shared.com: {device_activity_terminated(go_back), say_step(" Step one: Chop onions and garlic."), resolved(?X.say_step(X))}
?                                                                                                     ++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             -------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 12:28:02,604 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:28:02,605 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:02,605 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:28:02,605 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:28:02,605 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:28:02,605 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:28:02,605 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:28:02,605 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:28:02,606 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:28:02,606 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:28:02,606 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:28:02,606 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:28:02,606 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:02,607 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:28:02,607 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:28:02,607 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:28:02,607 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:02,607 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:28:02,607 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:28:02,609 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:28:02,610 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value:  Step one: Chop onions and garlic.}], sender=DmeModule, reason=None)
2017-10-24 12:28:02,610 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok  Step one: Chop onions and garlic..], latest_moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:28:02,610 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value:  Step one: Chop onions and garlic.}], sender=DmeModule, reason=None))
2017-10-24 12:28:02,610 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value:  Step one: Chop onions and garlic.}], sender=DmeModule, reason=None)
2017-10-24 12:28:02,610 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": " Step one: Chop onions and garlic."}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:28:02,611 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:28:02,611 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok  Step one: Chop onions and garlic..], latest_moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 12:28:02,611 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok  Step one: Chop onions and garlic..], latest_moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:28:02,611 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok  Step one: Chop onions and garlic..], latest_moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:28:02,612 - session_2017-10-24T12_18_34_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f0668a9f248>:1.0
2017-10-24 12:28:02,613 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:28:03,613 - session_2017-10-24T12_18_34_0 - DEBUG - Timeout fired
2017-10-24 12:28:03,613 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:28:03,614 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:28:03,614 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:28:03,614 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:28:03,615 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840883.61
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), say_step(" Step one: Chop onions and garlic.")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), say_step(" Step one: Chop onions and garlic.")}
tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_back), say_step(" Step one: Chop onions and garlic."), resolved(?X.say_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:28:03,615 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:28:03,615 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:28:03,617 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:28:03,617 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:28:03,622 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_back, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:28:03,622 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:28:03,622 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:28:03,624 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:28:03,625 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:28:03,625 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:28:03,625 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:28:03,625 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:28:03,625 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:28:03,625 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:28:03,625 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:28:03,626 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:28:03,626 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:28:03,626 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:28:03,626 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:28:03,626 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:28:03,626 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:28:03,626 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:28:03,627 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:28:03,627 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:28:03,627 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:28:03,627 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:28:03,627 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:28:03,627 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:28:03,627 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:28:03,630 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 12:28:03,630 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:03,630 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:28:03,633 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), say_step(" Step one: Chop onions and garlic.")}
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {device_activity_terminated(go_back), say_step(" Step one: Chop onions and garlic."), resolved(?X.say_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 12:28:03,633 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:03,633 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:28:03,633 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:03,634 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:28:03,634 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:28:03,634 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:28:03,634 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:28:03,634 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:28:03,634 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:28:03,634 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:28:03,635 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:28:03,636 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840883.61
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), say_step(" Step one: Chop onions and garlic.")}
tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go back
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:28:03,636 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:28:03,641 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
?                                                                ^ ^^ ^^^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                ^^^^^^^^^^^^ ^^^^^ ^
- tis.private.tmp.sys.bel: {device_activity_terminated(go_back), DeviceResultProposition(go_back, [], True, None), say_step(" Step one: Chop onions and garlic.")}
- tis.private.tmp.sys.com: {device_activity_terminated(go_back)}
+ tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.com: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      -------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 12:28:03,641 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:28:03,643 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:28:03,643 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:28:03,645 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 12:28:03,645 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:28:03,648 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:28:03,648 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:28:03,648 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:28:03,649 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:28:03,651 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:28:03,651 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:28:03,651 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:28:03,653 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 12:28:03,653 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 12:28:03,654 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:29:34,732 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to a step"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 12:29:34,732 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:29:34,732 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None))
2017-10-24 12:29:34,732 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 12:29:34,733 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 12:29:34,733 - session_2017-10-24T12_18_34_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to a step"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 12:29:34,733 - session_2017-10-24T12_18_34_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 12:29:34,734 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 12:29:34,734 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])} for DDD 'recipehelp'
2017-10-24 12:29:34,734 - session_2017-10-24T12_18_34_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
2017-10-24 12:29:34,734 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:29:34,735 - session_2017-10-24T12_18_34_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AskMove": {"_type": "ask", "_ddd_name": "recipehelp", "_content": {"445f2b7f7189027ce75dac332c96dde0.WhQuestion": {"_type": "WHQ", "_content": {"24b0f339529d53d987534676834bafa7.LambdaAbstractedPredicateProposition": {"_ontology_name": "RecipehelpOntology", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.BuiltinSort": {"_dynamic": false, "_name": "string"}}, "name": "go_to_step", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to a step", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to a step"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to a step", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 12:29:34,735 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 12:29:34,735 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:29:34,735 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:29:34,735 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:29:34,736 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:29:34,736 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 12:29:34,737 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:29:34,737 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:29:34,737 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:29:34,738 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:29:34,739 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:29:34,739 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 12:29:34,739 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 12:29:34,739 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 12:29:34,739 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 12:29:34,739 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 12:29:34,740 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 12:29:34,740 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 12:29:34,740 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 12:29:34,740 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 12:29:34,741 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:29:34,743 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:29:34,743 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:29:34,743 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 12:29:34,743 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 12:29:34,743 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 12:29:34,744 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 12:29:34,744 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 12:29:34,744 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f06681f22d8>]
2017-10-24 12:29:34,744 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f06681f22d8>], sender=GuiBackend, reason=None)
2017-10-24 12:29:34,744 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:29:34,744 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None))
2017-10-24 12:29:34,745 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:29:34,745 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 12:29:34,745 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 12:29:34,745 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 12:29:34,745 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:29:34,747 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 12:29:34,747 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 12:29:34,747 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:29:34,748 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:29:34,748 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f06681f22d8>], sender=GuiBackend, reason=None))
2017-10-24 12:29:34,748 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f06681f22d8>], sender=GuiBackend, reason=None)
2017-10-24 12:29:34,748 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:29:34,749 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:29:34,749 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:29:34,774 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:29:34,774 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:29:34,775 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 12:29:34,775 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 12:29:34,775 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:29:34,775 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 12:29:34,775 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 12:29:34,775 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 12:29:34,776 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 12:29:34,777 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840974.78
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:29:34,777 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:29:34,777 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:29:34,777 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:29:34,780 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(say_step(" Step one: Chop onions and garlic.")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 12:29:34,781 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:29:34,781 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:29:34,784 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:29:34,784 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:29:34,784 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:29:34,784 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:29:34,784 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:29:34,784 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:29:34,784 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:29:34,784 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:29:34,784 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:29:34,785 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:29:34,785 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:29:34,785 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:29:34,788 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 12:29:34,788 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:29:34,788 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:29:34,789 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:29:34,789 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:34,789 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:29:34,792 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 12:29:34,792 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:29:34,792 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:29:34,792 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:29:34,792 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:34,793 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:29:34,793 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:29:34,793 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:29:34,793 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:29:34,793 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:29:34,793 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:29:34,793 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:29:34,793 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:29:34,793 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:29:34,793 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:29:34,794 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:34,794 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:29:34,794 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:29:34,794 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:29:34,795 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:34,795 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:29:34,795 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:29:34,797 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 12:29:34,797 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:29:34,797 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:29:34,797 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:29:34,798 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:29:34,798 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:29:34,798 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:29:34,799 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 12:29:34,799 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:29:34,799 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:29:34,800 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:29:34,800 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:29:34,800 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:29:34,801 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:29:34,802 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840974.8
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:29:34,802 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:29:34,805 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
-- END TIS changes --
2017-10-24 12:29:34,805 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:29:34,811 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                 ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                 ^
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
?                                                                                                                                ^
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
?                                                                                                                                ^
-- END TIS changes --
2017-10-24 12:29:34,812 - session_2017-10-24T12_18_34_0 - INFO - hypotheses reranking had no effect
2017-10-24 12:29:34,812 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:29:34,817 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 12:29:34,817 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:29:34,823 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 12:29:34,824 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:29:34,824 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:29:34,826 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:29:34,826 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:29:34,826 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:29:34,829 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:29:34,829 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:29:34,829 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:29:34,830 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:29:34,830 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:29:34,830 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:29:34,830 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
2017-10-24 12:29:34,830 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:29:34,830 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
2017-10-24 12:29:34,830 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:29:34,833 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateUsrAsk
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
- tis.private.nim: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
- tis.shared.qud: stackset([?X.goal(X)])
+ tis.shared.qud: stackset([?X.go_to_step(X), ?X.goal(X)])
?                                ++++++++++++++++++
-- END TIS changes --
2017-10-24 12:29:34,834 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:29:34,834 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:29:34,836 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateISSUES2
-- BEGIN TIS changes --
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                                                        --------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 12:29:34,836 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:29:34,837 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:34,841 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: findIssuePlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                                                   - ^ ^ -----------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^ ^^
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 12:29:34,841 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:29:34,841 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:29:34,841 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:29:34,841 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:29:34,841 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:29:34,841 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:29:34,842 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:29:34,842 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:29:34,842 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:29:34,842 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:29:34,842 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:34,842 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:29:34,845 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.go_to_step(X), ?X.goal(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 12:29:34,845 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:29:34,845 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:29:34,846 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:34,846 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:29:34,846 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:29:34,846 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None)
2017-10-24 12:29:34,846 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:29:34,846 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:29:34,847 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840974.8
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:29:34,847 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:29:34,852 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                ^ ^^ ^^^^^^^^^  ^  ^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                ^^^^^^^^^^^ ^ ^^^^  ^^^^ +++++++++++ ^^^
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                                      +++++++++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
+ tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 12:29:34,852 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:29:34,855 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                                                                                  +++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:29:34,855 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:29:34,859 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
-- END TIS changes --
2017-10-24 12:29:34,859 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:29:34,859 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:29:34,862 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.step_to_choose(X))])
-- END TIS changes --
2017-10-24 12:29:34,862 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:29:34,865 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
?                                                                                    +++++++++++++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.step_to_choose(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:29:34,865 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:29:34,865 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:29:34,866 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:29:34,868 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:29:34,868 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:29:34,868 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:29:34,871 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:29:34,871 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')])
2017-10-24 12:29:34,871 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:29:34,872 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None))
2017-10-24 12:29:34,872 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None)
2017-10-24 12:29:34,872 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to a step", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 12:29:34,872 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:29:34,872 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:29:34,872 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:29:34,873 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:29:34,873 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:29:34,874 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)))
2017-10-24 12:29:34,875 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:29:34,875 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:29:34,875 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:29:34,875 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:29:34,877 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:29:34,877 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={})
2017-10-24 12:29:34,877 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 12:29:34,877 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 12:29:34,877 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 12:29:34,877 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 12:29:34,877 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 12:29:34,878 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 12:29:34,878 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 12:29:34,878 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 12:29:34,878 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 12:29:34,878 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 12:29:34,879 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp') generated as u'Which step?'
2017-10-24 12:29:34,879 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None)
2017-10-24 12:29:34,880 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:29:34,882 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:29:34,883 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:29:34,883 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')])
2017-10-24 12:29:34,883 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={})
2017-10-24 12:29:34,883 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 12:29:34,883 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 12:29:34,883 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 12:29:34,883 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 12:29:34,883 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 12:29:34,884 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message []
2017-10-24 12:29:34,884 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 12:29:34,884 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:29:34,884 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None))
2017-10-24 12:29:34,884 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None)
2017-10-24 12:29:34,885 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "", "Which step?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:29:34,885 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:29:34,885 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 12:29:34,885 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 12:29:34,886 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:29:34,886 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:29:34,886 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:29:34,894 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["", "", "Which step?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:29:34,895 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:29:34,895 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, , Which step?], sender=TextOutputComponent, reason=None))
2017-10-24 12:29:34,896 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, , Which step?], sender=TextOutputComponent, reason=None)
2017-10-24 12:29:34,896 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:29:34,896 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 12:29:34,896 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 12:29:34,896 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 12:29:34,897 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None))
2017-10-24 12:29:34,898 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840974.9
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:29:34,898 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:29:34,898 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:29:34,898 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:29:34,904 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
?            ^^
- tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:29:34,904 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:29:34,904 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:29:34,907 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:29:34,907 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:29:34,907 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:29:34,907 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:29:34,907 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:29:34,907 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:29:34,907 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:29:34,907 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:29:34,908 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:29:34,908 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:29:34,908 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:29:34,908 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:29:34,911 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 12:29:34,912 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:29:34,912 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:29:34,912 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:29:34,912 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:34,912 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:29:34,916 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
?                                                                       +++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:29:34,916 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:29:34,916 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:29:34,917 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:29:34,917 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:34,917 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:29:34,920 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.step_to_choose(X)])
-- END TIS changes --
2017-10-24 12:29:34,920 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:29:34,920 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:29:34,920 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:29:34,920 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:34,921 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:29:34,921 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:29:34,921 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:29:34,921 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:29:34,921 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:29:34,921 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:29:34,921 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:29:34,921 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:29:34,922 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:29:34,922 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:29:34,922 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:34,922 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:29:34,922 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:29:34,922 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:29:34,923 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:34,923 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:29:34,923 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:29:34,925 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:29:34,925 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:29:34,926 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:29:34,926 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:29:34,926 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:29:34,926 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:29:34,926 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:29:34,926 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 12:29:34,927 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:29:34,927 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 12:29:34,927 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:29:38,599 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "step one"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 12:29:38,599 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:29:38,599 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None))
2017-10-24 12:29:38,600 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 12:29:38,600 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 12:29:38,600 - session_2017-10-24T12_18_34_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "step one"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 12:29:38,600 - session_2017-10-24T12_18_34_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 12:29:38,601 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 12:29:38,601 - session_2017-10-24T12_18_34_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])} for DDD 'recipehelp'
2017-10-24 12:29:38,601 - session_2017-10-24T12_18_34_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
2017-10-24 12:29:38,601 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:29:38,602 - session_2017-10-24T12_18_34_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "step one"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "step one", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.CustomSort": {"_ontology_name": "RecipehelpOntology", "_dynamic": false, "_name": "step"}}, "value": "step1"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "step one", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 12:29:38,602 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 12:29:38,602 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None))
2017-10-24 12:29:38,602 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None)
2017-10-24 12:29:38,602 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 12:29:38,602 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 12:29:38,603 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 12:29:38,603 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:29:38,603 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 12:29:38,603 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:29:38,604 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:29:38,604 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 12:29:38,605 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:29:38,606 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840978.61
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([?X.step_to_choose(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:29:38,606 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:29:38,611 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
-- END TIS changes --
2017-10-24 12:29:38,611 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:29:38,615 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
- tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
-- END TIS changes --
2017-10-24 12:29:38,619 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^^
-- END TIS changes --
2017-10-24 12:29:38,620 - session_2017-10-24T12_18_34_0 - INFO - hypotheses reranking had no effect
2017-10-24 12:29:38,620 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:29:38,623 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')])
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 12:29:38,623 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:29:38,627 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
-- END TIS changes --
2017-10-24 12:29:38,627 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:29:38,627 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:29:38,630 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:29:38,630 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:29:38,630 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:29:38,635 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                                        ^^
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                                                      +++++++++++++++++++++++++++++++  ^^^^^^^^
- tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
+ tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
- tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                       ^ ^^
+ tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
?                                       ^^^^^^ ^^^^^^^
-- END TIS changes --
2017-10-24 12:29:38,635 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:29:38,635 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:29:38,636 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:29:38,636 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:29:38,636 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:29:38,636 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
2017-10-24 12:29:38,636 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:29:38,636 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
2017-10-24 12:29:38,636 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:29:38,639 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {step_to_choose(step1)}
- tis.shared.com: {}
+ tis.shared.com: {step_to_choose(step1)}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
-- END TIS changes --
2017-10-24 12:29:38,639 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:29:38,640 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:29:38,643 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {step_to_choose(step1)}
+ tis.shared.com: {step_to_choose(step1), resolved(?X.step_to_choose(X))}
- tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ------------------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 12:29:38,643 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:29:38,647 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
?                          -------------------------------
+ tis.private.plan: Stack([device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 12:29:38,648 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:38,648 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:29:38,648 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:29:38,648 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:29:38,648 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:29:38,648 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:29:38,648 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:29:38,649 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:29:38,649 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:29:38,649 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:29:38,649 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:29:38,652 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {}
+ tis.private.bel: {go_to_step("chose a step")}
- tis.private.plan: Stack([device_query(?X.go_to_step(X)), forget(step_to_choose)])
?                          --------------------------------
+ tis.private.plan: Stack([forget(step_to_choose)])
-- END TIS changes --
2017-10-24 12:29:38,653 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:38,653 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:29:38,656 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(step_to_choose)])
+ tis.private.plan: Stack([])
- tis.shared.com: {step_to_choose(step1), resolved(?X.step_to_choose(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 12:29:38,656 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:38,656 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:29:38,657 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:38,657 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:29:38,660 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.step_to_choose(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 12:29:38,660 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:29:38,660 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:29:38,660 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:38,661 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:29:38,661 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:29:38,661 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 12:29:38,661 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None)
2017-10-24 12:29:38,661 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 12:29:38,661 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:29:38,662 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840978.61
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')])
tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.bel: {go_to_step("chose a step")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:29:38,662 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:29:38,666 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                         ---------------------------------
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.bel: {go_to_step("chose a step")}
- tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 12:29:38,666 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:29:38,669 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                                                 +++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:29:38,669 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:29:38,672 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
-- END TIS changes --
2017-10-24 12:29:38,672 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:29:38,675 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose a step")))])
- tis.private.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:29:38,675 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:29:38,675 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:29:38,675 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:29:38,677 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:29:38,677 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:29:38,678 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:29:38,680 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 12:29:38,680 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')])
2017-10-24 12:29:38,681 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:29:38,681 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None))
2017-10-24 12:29:38,681 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 12:29:38,681 - session_2017-10-24T12_18_34_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 12:29:38,681 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None))
2017-10-24 12:29:38,681 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None)
2017-10-24 12:29:38,682 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": "step one", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 12:29:38,682 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:29:38,682 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None))
2017-10-24 12:29:38,682 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 12:29:38,682 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "go_to_step", "grammar_entry": null, "value": "chose a step"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:29:38,684 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:29:38,684 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)))
2017-10-24 12:29:38,684 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 12:29:38,685 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:29:38,685 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:29:38,685 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:29:38,687 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose a step")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:29:38,687 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp'), facts={go_to_step("chose a step")})
2017-10-24 12:29:38,687 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')
2017-10-24 12:29:38,687 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')
2017-10-24 12:29:38,688 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule: Move Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp') generated as u'Ok chose a step.'
2017-10-24 12:29:38,688 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose a step.], sender=GenerateModule, reason=None)
2017-10-24 12:29:38,689 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose a step")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:29:38,690 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok chose a step.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:29:38,691 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose a step")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:29:38,691 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 12:29:38,691 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')])
2017-10-24 12:29:38,691 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp'), facts={go_to_step("chose a step")})
2017-10-24 12:29:38,692 - session_2017-10-24T12_18_34_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')
2017-10-24 12:29:38,693 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.Popup instance at 0x7f066825a248>]
2017-10-24 12:29:38,693 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f066825a248>], sender=GuiBackend, reason=None)
2017-10-24 12:29:38,693 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posted event
2017-10-24 12:29:38,693 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose a step.], sender=GenerateModule, reason=None))
2017-10-24 12:29:38,693 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose a step.], sender=GenerateModule, reason=None)
2017-10-24 12:29:38,693 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok chose a step."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 12:29:38,694 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:29:38,694 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok chose a step.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 12:29:38,694 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok chose a step.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:29:38,695 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok chose a step."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 12:29:38,695 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:29:38,696 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f066825a248>], sender=GuiBackend, reason=None))
2017-10-24 12:29:38,696 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f066825a248>], sender=GuiBackend, reason=None)
2017-10-24 12:29:38,696 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok chose a step."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 12:29:38,697 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:29:38,697 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:29:38,718 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok chose a step."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 12:29:38,719 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:29:38,719 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok chose a step.], sender=TextOutputComponent, reason=None))
2017-10-24 12:29:38,719 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok chose a step.], sender=TextOutputComponent, reason=None)
2017-10-24 12:29:38,719 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 12:29:38,719 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
2017-10-24 12:29:38,720 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
2017-10-24 12:29:38,720 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
2017-10-24 12:29:38,720 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None))
2017-10-24 12:29:38,721 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840978.72
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose a step")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {go_to_step("chose a step")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose a step")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:29:38,721 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:29:38,722 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:29:38,722 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:29:38,728 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
?            ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:29:38,728 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:29:38,728 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:29:38,731 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:29:38,731 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:29:38,731 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:29:38,731 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:29:38,731 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:29:38,731 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:29:38,731 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:29:38,731 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:29:38,731 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:29:38,731 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:29:38,732 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 12:29:38,732 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:29:38,734 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {go_to_step("chose a step")}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 12:29:38,734 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 12:29:38,734 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:29:38,738 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {go_to_step("chose a step")}
+ tis.shared.com: {go_to_step("chose a step"), resolved(?X.go_to_step(X))}
?                                            ++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                             ---------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 12:29:38,738 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 12:29:38,738 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:38,738 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:29:38,738 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:29:38,739 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:29:38,739 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:29:38,739 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:29:38,739 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:29:38,739 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:29:38,739 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:29:38,739 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:29:38,739 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:29:38,740 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:38,740 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:29:38,740 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:29:38,740 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:29:38,740 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:38,740 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:29:38,740 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:29:38,743 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 12:29:38,743 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 12:29:38,743 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:29:38,743 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None))
2017-10-24 12:29:38,743 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 12:29:38,744 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "go_to_step", "grammar_entry": null, "value": "chose a step"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:29:38,744 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:29:38,744 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 12:29:38,745 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:29:38,745 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 12:29:38,745 - session_2017-10-24T12_18_34_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f06681f2758>:1.0
2017-10-24 12:29:38,746 - session_2017-10-24T12_18_34_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 12:29:39,745 - session_2017-10-24T12_18_34_0 - DEBUG - Timeout fired
2017-10-24 12:29:39,746 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:29:39,746 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:29:39,746 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 12:29:39,746 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:29:39,747 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840979.75
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose a step")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {go_to_step("chose a step")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose a step")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {go_to_step("chose a step"), resolved(?X.go_to_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:29:39,747 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:filterReadings
2017-10-24 12:29:39,747 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 12:29:39,749 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:29:39,749 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 12:29:39,754 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
-- END TIS changes --
2017-10-24 12:29:39,754 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 12:29:39,754 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 12:29:39,756 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:29:39,756 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 12:29:39,756 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 12:29:39,757 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 12:29:39,757 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 12:29:39,757 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 12:29:39,757 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 12:29:39,757 - session_2017-10-24T12_18_34_0 - INFO - BEGIN integrate_moves
2017-10-24 12:29:39,757 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:29:39,757 - session_2017-10-24T12_18_34_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 12:29:39,757 - session_2017-10-24T12_18_34_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 12:29:39,757 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:integrate
2017-10-24 12:29:39,757 - session_2017-10-24T12_18_34_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 12:29:39,757 - session_2017-10-24T12_18_34_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 12:29:39,758 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:29:39,758 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:29:39,758 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:29:39,758 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:accommodate
2017-10-24 12:29:39,758 - session_2017-10-24T12_18_34_0 - INFO - breaking out of accommodate
2017-10-24 12:29:39,758 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_reject
2017-10-24 12:29:39,758 - session_2017-10-24T12_18_34_0 - INFO - END integrate_moves
2017-10-24 12:29:39,758 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:29:39,761 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 12:29:39,761 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:39,761 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:29:39,764 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {go_to_step("chose a step")}
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {go_to_step("chose a step"), resolved(?X.go_to_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 12:29:39,764 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:39,764 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:29:39,764 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:39,764 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 12:29:39,764 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 12:29:39,765 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:exec_plan
2017-10-24 12:29:39,765 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:load_plan
2017-10-24 12:29:39,765 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 12:29:39,765 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 12:29:39,765 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:29:39,765 - session_2017-10-24T12_18_34_0 - INFO - running ISU module: select
2017-10-24 12:29:39,766 - session_2017-10-24T12_18_34_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f066b190e90>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0668a8d590>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508840979.75
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose a step")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(go_back)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 12:29:39,766 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 12:29:39,770 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^  ^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                +++ ^^^^ +++ ^^^^^^^
- tis.private.tmp.sys.bel: {go_to_step("chose a step")}
+ tis.private.tmp.sys.bel: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                                      ---------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 12:29:39,770 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_action
2017-10-24 12:29:39,773 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 12:29:39,773 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:29:39,776 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 12:29:39,776 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:29:39,778 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 12:29:39,779 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_icm
2017-10-24 12:29:39,779 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:select_move
2017-10-24 12:29:39,779 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 12:29:39,781 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 12:29:39,781 - session_2017-10-24T12_18_34_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 12:29:39,781 - session_2017-10-24T12_18_34_0 - DEBUG - rulegroup:set_timeout
2017-10-24 12:29:39,783 - session_2017-10-24T12_18_34_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 12:29:39,784 - session_2017-10-24T12_18_34_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 12:29:39,784 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:34:56,297 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 12:34:56,297 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(STOP, None, sender=Backend, reason=None))
2017-10-24 12:34:56,298 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(STOP, None, sender=Backend, reason=None)
2017-10-24 12:34:56,298 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 12:34:56,298 - session_2017-10-24T12_18_34_0 - DEBUG - InterpretModule posts Event(STOPPED, None, sender=InterpretModule, reason=None)
2017-10-24 12:34:56,298 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 12:34:56,299 - session_2017-10-24T12_18_34_0 - DEBUG - DmeModule posts Event(STOPPED, None, sender=DmeModule, reason=None)
2017-10-24 12:34:56,299 - session_2017-10-24T12_18_34_0 - DEBUG - DeviceManager handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 12:34:56,299 - session_2017-10-24T12_18_34_0 - DEBUG - DeviceManager posts Event(STOPPED, None, sender=DeviceManager, reason=None)
2017-10-24 12:34:56,300 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 12:34:56,300 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule posts Event(STOPPED, None, sender=GenerateModule, reason=None)
2017-10-24 12:34:56,300 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 12:34:56,300 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend posts Event(STOPPED, None, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:34:56,301 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 12:34:56,301 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend posts Event(STOPPED, None, sender=GuiBackend, reason=None)
2017-10-24 12:34:56,301 - session_2017-10-24T12_18_34_0 - DEBUG - CogloadModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 12:34:56,301 - session_2017-10-24T12_18_34_0 - DEBUG - CogloadModule posts Event(STOPPED, None, sender=CogloadModule, reason=None)
2017-10-24 12:34:56,301 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 12:34:56,301 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 12:34:56,301 - session_2017-10-24T12_18_34_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 12:34:56,302 - session_2017-10-24T12_18_34_0 - DEBUG - Sent.
2017-10-24 12:34:56,302 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 12:34:56,302 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 12:34:56,302 - session_2017-10-24T12_18_34_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 12:34:56,303 - session_2017-10-24T12_18_34_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:34:56,303 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:34:56,304 - session_2017-10-24T12_18_34_0 - DEBUG - GenerateModule ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:34:56,305 - session_2017-10-24T12_18_34_0 - DEBUG - IndependentGuiBackend ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:34:56,306 - session_2017-10-24T12_18_34_0 - DEBUG - GuiBackend ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_back), current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 12:34:56,306 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=InterpretModule, reason=None))
2017-10-24 12:34:56,306 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=InterpretModule, reason=None)
2017-10-24 12:34:56,306 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=DmeModule, reason=None))
2017-10-24 12:34:56,306 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=DmeModule, reason=None)
2017-10-24 12:34:56,306 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=DeviceManager, reason=None))
2017-10-24 12:34:56,306 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=DeviceManager, reason=None)
2017-10-24 12:34:56,307 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=GenerateModule, reason=None))
2017-10-24 12:34:56,307 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=GenerateModule, reason=None)
2017-10-24 12:34:56,307 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=IndependentGuiBackend, reason=None))
2017-10-24 12:34:56,307 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=IndependentGuiBackend, reason=None)
2017-10-24 12:34:56,307 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=GuiBackend, reason=None))
2017-10-24 12:34:56,307 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=GuiBackend, reason=None)
2017-10-24 12:34:56,307 - session_2017-10-24T12_18_34_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=CogloadModule, reason=None))
2017-10-24 12:34:56,308 - session_2017-10-24T12_18_34_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=CogloadModule, reason=None)

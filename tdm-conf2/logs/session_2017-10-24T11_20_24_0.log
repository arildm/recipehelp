2017-10-24 11:20:24,768 - session_2017-10-24T11_20_24_0 - DEBUG - Backend()
2017-10-24 11:20:24,769 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.initialize()
2017-10-24 11:20:24,798 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.add_module(DmeModule, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f0b027a2e50>>, False])
2017-10-24 11:20:24,799 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.add_module(GenerateModule, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f0b027a2e50>>, 'eng'])
2017-10-24 11:20:24,799 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.add_module(DeviceManager, args=[])
2017-10-24 11:20:24,799 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.add_module(CogloadModule, args=[])
2017-10-24 11:20:24,799 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(IDLE, __init__) (previous state was None)
2017-10-24 11:20:24,799 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.add_module(GuiBackend, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f0b027a2e50>>, True, 'disabled'])
2017-10-24 11:20:24,799 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.add_module(IndependentGuiBackend, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f0b027a2e50>>])
2017-10-24 11:20:24,799 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.add_module(InterpretModule, args=[<bound method Backend.get_device_manager of <tdm.backend.Backend object at 0x7f0b027a2e50>>, <bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f0b027a2e50>>, 'eng', False, True])
2017-10-24 11:20:24,799 - session_2017-10-24T11_20_24_0 - DEBUG - Backend initialized
2017-10-24 11:20:24,799 - session_2017-10-24T11_20_24_0 - DEBUG - Backend started in directory '/home/gusmatssar/recipedialogue/tdm'
2017-10-24 11:20:24,799 - session_2017-10-24T11_20_24_0 - DEBUG - Backend uses TDM version '5.0.0'
2017-10-24 11:20:24,799 - session_2017-10-24T11_20_24_0 - DEBUG - Backend uses backend config {u'active_ddd': u'recipehelp', u'ddds': [u'recipehelp'], u'asr': u'none', u'use_recognition_profile': False, u'use_word_list_correction': False, u'supported_languages': [u'eng'], u'repeat_questions': False}
2017-10-24 11:20:24,800 - session_2017-10-24T11_20_24_0 - DEBUG - Backend uses language 'eng'
2017-10-24 11:20:24,800 - session_2017-10-24T11_20_24_0 - DEBUG - running module InterpretModule
2017-10-24 11:20:24,800 - session_2017-10-24T11_20_24_0 - DEBUG - running module DmeModule
2017-10-24 11:20:24,801 - session_2017-10-24T11_20_24_0 - DEBUG - running module DeviceManager
2017-10-24 11:20:24,801 - session_2017-10-24T11_20_24_0 - DEBUG - running module GenerateModule
2017-10-24 11:20:24,802 - session_2017-10-24T11_20_24_0 - DEBUG - running module IndependentGuiBackend
2017-10-24 11:20:24,802 - session_2017-10-24T11_20_24_0 - DEBUG - running module GuiBackend
2017-10-24 11:20:24,802 - session_2017-10-24T11_20_24_0 - DEBUG - running module CogloadModule
2017-10-24 11:20:24,802 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:20:24,802 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:20:24,803 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(REGISTER_BACKEND, None, sender=Backend, reason=None))
2017-10-24 11:20:24,803 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(REGISTER_BACKEND, None, sender=Backend, reason=None)
2017-10-24 11:20:24,803 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "Backend", "_reason": null, "event_type": "REGISTER_BACKEND"}
2017-10-24 11:20:24,804 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:20:24,804 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:20:24,836 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": null, "_sender": "Frontend", "_reason": null, "event_type": "FRONTEND_READY"}
2017-10-24 11:20:24,836 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:20:24,837 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FRONTEND_READY, None, sender=Frontend, reason=None))
2017-10-24 11:20:24,838 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FRONTEND_READY, None, sender=Frontend, reason=None)
2017-10-24 11:20:24,838 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(BACKEND_READY, None, sender=Backend, reason=None))
2017-10-24 11:20:24,838 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(BACKEND_READY, None, sender=Backend, reason=None)
2017-10-24 11:20:24,838 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "Backend", "_reason": null, "event_type": "BACKEND_READY"}
2017-10-24 11:20:24,838 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:20:24,839 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:20:24,845 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": null, "_sender": "Frontend", "_reason": null, "event_type": "START"}
2017-10-24 11:20:24,845 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:20:24,845 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(START, None, sender=Frontend, reason=None))
2017-10-24 11:20:24,845 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:20:24,845 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:20:24,846 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:20:24,846 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 11:20:24,846 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(START, None, sender=Frontend, reason=None))
2017-10-24 11:20:24,847 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836824.85
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(START, None, sender=Frontend, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: None
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([do(top)])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: None
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:20:24,847 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:20:24,848 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:20:24,848 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:20:24,850 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:20:24,850 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:20:24,851 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:20:24,852 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:20:24,852 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:20:24,853 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:20:24,853 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:20:24,853 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:20:24,853 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:20:24,853 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:20:24,853 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:20:24,853 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:20:24,853 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:20:24,853 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:20:24,853 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:20:24,854 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:20:24,854 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:20:24,854 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:20:24,854 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:20:24,854 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:20:24,854 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:20:24,854 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:20:24,854 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:20:24,854 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:20:24,854 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:20:24,855 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:20:24,857 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([do(top)])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:20:24,857 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:20:24,860 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:20:24,860 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:20:24,860 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:20:24,860 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:20:24,860 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:20:24,860 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:20:24,860 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:20:24,861 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:20:24,861 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:20:24,861 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:20:24,861 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:20:24,861 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: select
2017-10-24 11:20:24,862 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836824.85
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(START, None, sender=Frontend, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: None
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: None
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:20:24,862 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:20:24,865 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.goals: stackset([])
+ tis.private.tmp.sys.goals: stackset([perform(top)])
?                                      ++++++++++++
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 11:20:24,866 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:20:24,868 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.goal(X))])
?                                                                  +++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:20:24,868 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:20:24,870 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
?                                       +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.goal(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:20:24,870 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:20:24,873 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
?                                                              +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:20:24,873 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:20:24,873 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:20:24,873 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:20:24,875 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:20:24,875 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:20:24,875 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:20:24,878 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: None
?                       ^^^^
+ tis.timeout.duration: 5.0
?                       ^^^
-- END TIS changes --
2017-10-24 11:20:24,878 - session_2017-10-24T11_20_24_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:20:24,878 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None))
2017-10-24 11:20:24,878 - session_2017-10-24T11_20_24_0 - DEBUG - DeviceManager handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:20:24,878 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:20:24,879 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:20:24,879 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:20:24,879 - session_2017-10-24T11_20_24_0 - DEBUG - CogloadModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:20:24,879 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None))
2017-10-24 11:20:24,879 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 11:20:24,879 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend handles Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 11:20:24,879 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend handles Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 11:20:24,879 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": {"ddd_name": "recipehelp", "language_code": "eng"}, "_sender": "DmeModule", "_reason": null, "event_type": "SET_DDD"}
2017-10-24 11:20:24,880 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:20:24,880 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:20:24,880 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:20:24,880 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:20:24,881 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:20:24,882 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None)))
2017-10-24 11:20:24,883 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None))
2017-10-24 11:20:24,883 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:20:24,884 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:20:24,884 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:20:24,885 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:20:24,886 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 11:20:24,886 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 11:20:24,886 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:20:24,886 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:20:24,886 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 11:20:24,887 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 11:20:24,887 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:20:24,887 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 11:20:24,887 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:20:24,888 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:20:24,891 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:20:24,891 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:20:24,891 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:20:24,891 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 11:20:24,891 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 11:20:24,891 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:20:24,891 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:20:24,892 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend generated message []
2017-10-24 11:20:24,892 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:20:24,892 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posted event
2017-10-24 11:20:24,892 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 11:20:24,892 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:20:24,892 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:20:24,893 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:20:24,893 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 11:20:24,893 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:20:24,893 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:20:24,894 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:20:24,894 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:20:24,952 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": ["", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:20:24,952 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:20:24,952 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 11:20:24,953 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 11:20:24,953 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:20:24,953 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:20:24,953 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:20:24,953 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:20:24,953 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 11:20:24,955 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836824.95
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:20:24,955 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:20:24,955 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:20:24,955 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:20:24,958 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: None
?                        ^^^^
+ tis.shared.lu.speaker: SYS
?                        ^^^
-- END TIS changes --
2017-10-24 11:20:24,958 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:20:24,958 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:20:24,960 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:20:24,960 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:20:24,960 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:20:24,961 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:20:24,961 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:20:24,961 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:20:24,961 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:20:24,961 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:20:24,961 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:20:24,961 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:20:24,961 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:20:24,961 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:20:24,964 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:20:24,964 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:20:24,964 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:20:24,964 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:20:24,965 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:20:24,965 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:20:24,968 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 11:20:24,968 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:20:24,968 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:20:24,968 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:20:24,968 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:20:24,968 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:20:24,968 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:20:24,968 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:20:24,969 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:20:24,969 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:20:24,969 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:20:24,969 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:20:24,969 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:20:24,969 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:20:24,969 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:20:24,969 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:20:24,969 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:20:24,969 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:20:24,970 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:20:24,970 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:20:24,970 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:20:24,970 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:20:24,972 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:20:24,972 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:20:24,972 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:20:24,972 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:20:24,972 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:20:24,973 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:20:24,973 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:20:24,973 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:20:24,974 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:20:24,974 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:20:24,975 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:17,032 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "tell me what to do"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:23:17,032 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:17,032 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None))
2017-10-24 11:23:17,032 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:17,033 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:17,033 - session_2017-10-24T11_20_24_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "tell me what to do"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:23:17,033 - session_2017-10-24T11_20_24_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:23:17,038 - session_2017-10-24T11_20_24_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 11:23:17,038 - session_2017-10-24T11_20_24_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])} for DDD 'recipehelp'
2017-10-24 11:23:17,039 - session_2017-10-24T11_20_24_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
2017-10-24 11:23:17,039 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:23:17,039 - session_2017-10-24T11_20_24_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AskMove": {"_type": "ask", "_ddd_name": "recipehelp", "_content": {"445f2b7f7189027ce75dac332c96dde0.WhQuestion": {"_type": "WHQ", "_content": {"24b0f339529d53d987534676834bafa7.LambdaAbstractedPredicateProposition": {"_ontology_name": "RecipehelpOntology", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.BuiltinSort": {"_dynamic": false, "_name": "string"}}, "name": "say_step", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "tell me what to do", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "tell me what to do"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "tell me what to do", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:23:17,039 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:17,040 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None))
2017-10-24 11:23:17,040 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:23:17,040 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:23:17,040 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:23:17,040 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 11:23:17,041 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:17,041 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 11:23:17,041 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:17,042 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:17,043 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:17,044 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:17,045 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836997.04
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:17,045 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:17,049 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
-- END TIS changes --
2017-10-24 11:23:17,049 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:17,054 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
?                                                                                                                              ^
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
?                                                                                                                              ^
-- END TIS changes --
2017-10-24 11:23:17,055 - session_2017-10-24T11_20_24_0 - INFO - hypotheses reranking had no effect
2017-10-24 11:23:17,055 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:17,060 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 11:23:17,060 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:17,067 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:23:17,067 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:17,067 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:17,070 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:17,070 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:17,070 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:17,074 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([])
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
- tis.private.tmp.usr.plan: Stack([])
+ tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
- tis.private.tmp.usr.qud: stackset([])
+ tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                    ++++++++++
-- END TIS changes --
2017-10-24 11:23:17,074 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:17,074 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:17,074 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:17,074 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:17,074 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:17,075 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
2017-10-24 11:23:17,075 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:17,075 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
2017-10-24 11:23:17,075 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:17,078 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateUsrAsk
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
- tis.private.nim: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
- tis.shared.qud: stackset([?X.goal(X)])
+ tis.shared.qud: stackset([?X.say_step(X), ?X.goal(X)])
?                              ++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:17,078 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:17,078 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:17,082 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateISSUES2
-- BEGIN TIS changes --
- tis.shared.goals: stackset([resolve(?X.say_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                                                      --------------------------
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 11:23:17,082 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:17,082 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:17,085 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: findIssuePlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                                                 -------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.plan: Stack([findout(?X.goal(X))])
?                          ^ ^^^ ^    ^^ ^
+ tis.private.plan: Stack([device_query(?X.say_step(X))])
?                          ^^^ ^^^^ ^^^    ^ ^^^^^^
-- END TIS changes --
2017-10-24 11:23:17,085 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:17,085 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:17,085 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:17,085 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:17,086 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:17,086 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:17,086 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:17,086 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:17,086 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:17,086 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:17,089 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {}
+ tis.private.bel: {say_step("0")}
?                   +++++++++++++
- tis.private.plan: Stack([device_query(?X.say_step(X))])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 11:23:17,089 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:17,089 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:17,089 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:17,089 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:17,092 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.say_step(X), ?X.goal(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:23:17,092 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:17,092 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:17,092 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:17,092 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:17,092 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:17,092 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None)
2017-10-24 11:23:17,093 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:23:17,093 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: select
2017-10-24 11:23:17,094 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836997.04
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:17,094 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:23:17,098 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
?                                                                ^ ^^^^^^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                ^^^^^ ^
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.bel: {say_step("0")}
?                           +++++++++++++
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      +++++++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 11:23:17,098 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:17,101 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                                                 +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:17,101 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:17,104 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
-- END TIS changes --
2017-10-24 11:23:17,104 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:17,107 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                         ---     ---- ^^^ ^^
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
?                                               ^^^^^^^^^^^^^ ^^^^^^
- tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:17,107 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:17,107 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:17,107 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:23:17,109 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:17,109 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:23:17,109 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:23:17,112 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 11:23:17,112 - session_2017-10-24T11_20_24_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')])
2017-10-24 11:23:17,112 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:17,112 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None))
2017-10-24 11:23:17,113 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None)
2017-10-24 11:23:17,113 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": "tell me what to do", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 11:23:17,113 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:17,114 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None))
2017-10-24 11:23:17,114 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:23:17,114 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "0"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:17,114 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:17,115 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)))
2017-10-24 11:23:17,116 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:17,116 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:23:17,116 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:17,116 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:17,117 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:17,118 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("0")), ddd_name=u'recipehelp'), facts={say_step("0")})
2017-10-24 11:23:17,118 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:23:17,118 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:23:17,118 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move Move(answer(say_step("0")), ddd_name=u'recipehelp') generated as u'Ok 0.'
2017-10-24 11:23:17,118 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None)
2017-10-24 11:23:17,119 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:17,121 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:23:17,121 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:17,122 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:23:17,122 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')])
2017-10-24 11:23:17,122 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("0")), ddd_name=u'recipehelp'), facts={say_step("0")})
2017-10-24 11:23:17,122 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:23:17,123 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.Popup instance at 0x7f0b000a9e60>]
2017-10-24 11:23:17,123 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f0b000a9e60>], sender=GuiBackend, reason=None)
2017-10-24 11:23:17,124 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posted event
2017-10-24 11:23:17,124 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None))
2017-10-24 11:23:17,124 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None)
2017-10-24 11:23:17,125 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok 0."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:23:17,127 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:17,127 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:23:17,127 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:23:17,127 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok 0."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:23:17,129 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:17,129 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f0b000a9e60>], sender=GuiBackend, reason=None))
2017-10-24 11:23:17,129 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f0b000a9e60>], sender=GuiBackend, reason=None)
2017-10-24 11:23:17,129 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok 0."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:23:17,130 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:17,131 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:17,132 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok 0."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:23:17,133 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:17,133 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok 0.], sender=TextOutputComponent, reason=None))
2017-10-24 11:23:17,134 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok 0.], sender=TextOutputComponent, reason=None)
2017-10-24 11:23:17,134 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:23:17,134 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:23:17,134 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:23:17,134 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:23:17,134 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None))
2017-10-24 11:23:17,136 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836997.13
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:17,136 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:17,137 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:17,137 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:17,143 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
?            ^^
- tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:23:17,143 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:17,143 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:17,145 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:17,145 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:17,145 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:17,145 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:17,145 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:17,146 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:17,146 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:17,146 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:17,146 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:17,146 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:17,146 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:17,146 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:17,149 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {say_step("0")}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:23:17,149 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:17,149 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:17,152 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {say_step("0")}
+ tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
- tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             -------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 11:23:17,153 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:17,153 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:17,153 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:17,153 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:17,153 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:17,153 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:17,153 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:17,153 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:17,153 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:17,153 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:17,153 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:17,154 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:17,154 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:17,155 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:17,155 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:17,155 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:17,155 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:17,155 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:17,155 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:17,158 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 11:23:17,158 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:23:17,158 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:23:17,158 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None))
2017-10-24 11:23:17,158 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:23:17,158 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "0"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:17,159 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:17,159 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 11:23:17,159 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:23:17,159 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:23:17,160 - session_2017-10-24T11_20_24_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f0b000afb90>:1.0
2017-10-24 11:23:17,160 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:18,160 - session_2017-10-24T11_20_24_0 - DEBUG - Timeout fired
2017-10-24 11:23:18,160 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:23:18,160 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:23:18,161 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:23:18,161 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:23:18,162 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836998.16
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:18,162 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:18,162 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:18,164 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:18,164 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:18,168 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
-- END TIS changes --
2017-10-24 11:23:18,168 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:18,168 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:18,170 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:18,170 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:18,170 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:18,171 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:18,171 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:18,171 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:18,171 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:18,171 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:18,171 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:23:18,171 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:18,171 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:23:18,171 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:18,172 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:18,172 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:18,172 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:18,172 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:18,172 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:18,172 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:18,172 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:18,172 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:18,173 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:18,173 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:18,176 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:23:18,176 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:18,176 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:18,178 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {say_step("0")}
?                   -------------
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 11:23:18,179 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:18,179 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:18,179 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:18,179 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:18,179 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:18,179 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:18,180 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:18,180 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:18,180 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:18,180 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:18,180 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: select
2017-10-24 11:23:18,181 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836998.16
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:18,181 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:23:18,186 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^  ^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                +++ ^^^^ +++ ^^^^^^^
- tis.private.tmp.sys.bel: {say_step("0")}
?                           -------------
+ tis.private.tmp.sys.bel: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      -------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:18,186 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:18,189 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:18,189 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:18,191 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:23:18,191 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:18,194 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:18,194 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:18,194 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:18,195 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:23:18,197 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:18,197 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:23:18,197 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:23:18,199 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 11:23:18,200 - session_2017-10-24T11_20_24_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:23:18,200 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:23:23,505 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "tell me what to do"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:23:23,505 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:23,506 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None))
2017-10-24 11:23:23,506 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:23,506 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:23,506 - session_2017-10-24T11_20_24_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "tell me what to do"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:23:23,506 - session_2017-10-24T11_20_24_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:23:23,507 - session_2017-10-24T11_20_24_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 11:23:23,507 - session_2017-10-24T11_20_24_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])} for DDD 'recipehelp'
2017-10-24 11:23:23,507 - session_2017-10-24T11_20_24_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
2017-10-24 11:23:23,508 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:23:23,508 - session_2017-10-24T11_20_24_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AskMove": {"_type": "ask", "_ddd_name": "recipehelp", "_content": {"445f2b7f7189027ce75dac332c96dde0.WhQuestion": {"_type": "WHQ", "_content": {"24b0f339529d53d987534676834bafa7.LambdaAbstractedPredicateProposition": {"_ontology_name": "RecipehelpOntology", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.BuiltinSort": {"_dynamic": false, "_name": "string"}}, "name": "say_step", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "tell me what to do", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "tell me what to do"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "tell me what to do", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:23:23,508 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:23,508 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:23:23,508 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:23,508 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:23,509 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:23,509 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 11:23:23,510 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:23:23,510 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:23:23,510 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:23,510 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:23,511 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:23,511 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:23:23,512 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:23:23,512 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:23:23,512 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:23:23,512 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 11:23:23,512 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 11:23:23,512 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:23:23,513 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 11:23:23,513 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:23:23,514 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:23,515 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:23,515 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:23:23,515 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:23:23,516 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:23:23,516 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:23:23,516 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:23:23,516 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:23:23,517 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b000a9cf8>]
2017-10-24 11:23:23,517 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b000a9cf8>], sender=GuiBackend, reason=None)
2017-10-24 11:23:23,517 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posted event
2017-10-24 11:23:23,517 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None))
2017-10-24 11:23:23,517 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:23:23,517 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:23:23,517 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:23:23,517 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 11:23:23,518 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:23,518 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 11:23:23,518 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:23:23,518 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:23:23,519 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:23,519 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b000a9cf8>], sender=GuiBackend, reason=None))
2017-10-24 11:23:23,519 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b000a9cf8>], sender=GuiBackend, reason=None)
2017-10-24 11:23:23,520 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:23:23,521 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:23,521 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:23,542 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:23:23,543 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:23,543 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 11:23:23,543 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 11:23:23,543 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:23:23,543 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:23:23,543 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:23:23,543 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:23:23,544 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 11:23:23,545 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837003.54
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:23,545 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:23,545 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:23,545 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:23,549 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:23:23,549 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:23,549 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:23,552 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:23,552 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:23,552 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:23,552 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:23,552 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:23,552 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:23,552 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:23,552 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:23,552 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:23,553 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:23,553 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:23,553 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:23,557 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:23:23,557 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:23,557 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:23,557 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:23,557 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:23,557 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:23,560 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 11:23:23,560 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:23,560 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:23,561 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:23,561 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:23,561 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:23,561 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:23,561 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:23,561 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:23,561 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:23,561 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:23,562 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:23,562 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:23,562 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:23,562 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:23,562 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:23,562 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:23,562 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:23,562 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:23,563 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:23,563 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:23,563 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:23,565 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 11:23:23,566 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:23,566 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:23,566 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:23:23,566 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:23,566 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:23,567 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:23,567 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:23:23,567 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:23,567 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:23,568 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:23,568 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:23,569 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:23,569 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:23,570 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837003.57
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:23,570 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:23,573 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
-- END TIS changes --
2017-10-24 11:23:23,573 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:23,577 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
?                                                                                                                              ^
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
?                                                                                                                              ^
-- END TIS changes --
2017-10-24 11:23:23,578 - session_2017-10-24T11_20_24_0 - INFO - hypotheses reranking had no effect
2017-10-24 11:23:23,578 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:23,583 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 11:23:23,583 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:23,591 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:23:23,591 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:23,591 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:23,593 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:23,593 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:23,593 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:23,597 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:23,597 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:23,597 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:23,597 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:23,597 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:23,597 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:23,598 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
2017-10-24 11:23:23,598 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:23,598 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
2017-10-24 11:23:23,598 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:23,601 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateUsrAsk
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
- tis.private.nim: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
- tis.shared.qud: stackset([?X.goal(X)])
+ tis.shared.qud: stackset([?X.say_step(X), ?X.goal(X)])
?                              ++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:23,601 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:23,601 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:23,604 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateISSUES2
-- BEGIN TIS changes --
- tis.shared.goals: stackset([resolve(?X.say_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                                                      --------------------------
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 11:23:23,605 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:23,605 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:23,609 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: findIssuePlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                                                 -------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.plan: Stack([findout(?X.goal(X))])
?                          ^ ^^^ ^    ^^ ^
+ tis.private.plan: Stack([device_query(?X.say_step(X))])
?                          ^^^ ^^^^ ^^^    ^ ^^^^^^
-- END TIS changes --
2017-10-24 11:23:23,609 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:23,609 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:23,609 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:23,609 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:23,609 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:23,609 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:23,609 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:23,610 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:23,610 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:23,610 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:23,612 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {}
+ tis.private.bel: {say_step("0")}
?                   +++++++++++++
- tis.private.plan: Stack([device_query(?X.say_step(X))])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 11:23:23,612 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:23,613 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:23,613 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:23,613 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:23,615 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.say_step(X), ?X.goal(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:23:23,615 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:23,616 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:23,616 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:23,616 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:23,616 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:23,616 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None)
2017-10-24 11:23:23,616 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:23:23,616 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: select
2017-10-24 11:23:23,617 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837003.57
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:23,617 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:23:23,622 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                --- ^ --------------
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^^^
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.bel: {say_step("0")}
?                           +++++++++++++
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      +++++++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 11:23:23,622 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:23,624 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                                                 +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:23,624 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:23,628 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
-- END TIS changes --
2017-10-24 11:23:23,628 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:23,631 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                         ---     ---- ^^^ ^^
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
?                                               ^^^^^^^^^^^^^ ^^^^^^
- tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:23,631 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:23,631 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:23,631 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:23:23,633 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:23,634 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:23:23,634 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:23:23,636 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 11:23:23,637 - session_2017-10-24T11_20_24_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')])
2017-10-24 11:23:23,637 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:23,637 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None))
2017-10-24 11:23:23,637 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None)
2017-10-24 11:23:23,637 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": "tell me what to do", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 11:23:23,638 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:23,638 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None))
2017-10-24 11:23:23,638 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:23:23,639 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "0"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:23,639 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:23,640 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)))
2017-10-24 11:23:23,640 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:23,640 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:23:23,641 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:23,641 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:23,642 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:23,642 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("0")), ddd_name=u'recipehelp'), facts={say_step("0")})
2017-10-24 11:23:23,642 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:23:23,642 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:23:23,643 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move Move(answer(say_step("0")), ddd_name=u'recipehelp') generated as u'Ok 0.'
2017-10-24 11:23:23,643 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None)
2017-10-24 11:23:23,644 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:23,645 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:23:23,646 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:23,646 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:23:23,646 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')])
2017-10-24 11:23:23,646 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("0")), ddd_name=u'recipehelp'), facts={say_step("0")})
2017-10-24 11:23:23,647 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:23:23,648 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.Popup instance at 0x7f0b0003e998>]
2017-10-24 11:23:23,648 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f0b0003e998>], sender=GuiBackend, reason=None)
2017-10-24 11:23:23,648 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posted event
2017-10-24 11:23:23,648 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None))
2017-10-24 11:23:23,648 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None)
2017-10-24 11:23:23,648 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok 0."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:23:23,649 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:23,649 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:23:23,649 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:23:23,649 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok 0."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:23:23,650 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:23,650 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f0b0003e998>], sender=GuiBackend, reason=None))
2017-10-24 11:23:23,650 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f0b0003e998>], sender=GuiBackend, reason=None)
2017-10-24 11:23:23,650 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok 0."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:23:23,651 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:23,651 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:23,663 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok 0."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:23:23,664 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:23,665 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok 0.], sender=TextOutputComponent, reason=None))
2017-10-24 11:23:23,665 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok 0.], sender=TextOutputComponent, reason=None)
2017-10-24 11:23:23,665 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:23:23,665 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:23:23,665 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:23:23,665 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:23:23,666 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None))
2017-10-24 11:23:23,667 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837003.67
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:23,667 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:23,667 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:23,667 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:23,674 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
?            ^^
- tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:23:23,674 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:23,674 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:23,677 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:23,677 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:23,677 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:23,677 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:23,677 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:23,677 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:23,677 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:23,677 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:23,677 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:23,678 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:23,678 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:23,678 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:23,681 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {say_step("0")}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:23:23,681 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:23,681 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:23,684 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {say_step("0")}
+ tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
- tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             -------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 11:23:23,684 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:23,684 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:23,684 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:23,684 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:23,684 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:23,684 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:23,684 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:23,685 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:23,685 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:23,685 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:23,685 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:23,685 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:23,685 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:23,685 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:23,685 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:23,685 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:23,686 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:23,686 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:23,686 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:23,688 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 11:23:23,688 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:23:23,688 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:23:23,689 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None))
2017-10-24 11:23:23,689 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:23:23,690 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "0"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:23,690 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:23,690 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 11:23:23,691 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:23:23,691 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:23:23,691 - session_2017-10-24T11_20_24_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f0b0008ff38>:1.0
2017-10-24 11:23:23,692 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:24,692 - session_2017-10-24T11_20_24_0 - DEBUG - Timeout fired
2017-10-24 11:23:24,692 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:23:24,692 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:23:24,692 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:23:24,692 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:23:24,693 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837004.69
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:24,693 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:24,693 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:24,696 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:24,696 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:24,700 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
-- END TIS changes --
2017-10-24 11:23:24,700 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:24,700 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:24,702 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:24,702 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:24,702 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:24,702 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:24,702 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:24,703 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:24,703 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:24,703 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:24,703 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:23:24,703 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:24,703 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:23:24,703 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:24,703 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:24,703 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:24,703 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:24,703 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:24,703 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:24,704 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:24,704 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:24,704 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:24,704 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:24,704 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:24,707 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:23:24,707 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:24,708 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:24,711 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {say_step("0")}
?                   -------------
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 11:23:24,711 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:24,711 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:24,711 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:24,711 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:24,711 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:24,712 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:24,712 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:24,712 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:24,712 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:24,712 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:24,712 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: select
2017-10-24 11:23:24,713 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837004.69
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:24,713 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:23:24,717 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^  ^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                +++ ^^^^ +++ ^^^^^^^
- tis.private.tmp.sys.bel: {say_step("0")}
?                           -------------
+ tis.private.tmp.sys.bel: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      -------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:24,718 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:24,721 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:24,721 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:24,723 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:23:24,723 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:24,726 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:24,726 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:24,726 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:24,726 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:23:24,728 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:24,728 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:23:24,728 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:23:24,730 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 11:23:24,731 - session_2017-10-24T11_20_24_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:23:24,731 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:23:25,016 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": ""}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:23:25,016 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:25,016 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: }], sender=TextInputComponent, reason=None))
2017-10-24 11:23:25,016 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: }], sender=TextInputComponent, reason=None)
2017-10-24 11:23:25,017 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: }], sender=TextInputComponent, reason=None)
2017-10-24 11:23:25,017 - session_2017-10-24T11_20_24_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": ""}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:23:25,017 - session_2017-10-24T11_20_24_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:23:25,018 - session_2017-10-24T11_20_24_0 - DEBUG - ExactInterpreter: Found no valid exact interpretations, returning an empty result.
2017-10-24 11:23:25,018 - session_2017-10-24T11_20_24_0 - DEBUG - Result from 'ExactInterpreter': []
2017-10-24 11:23:25,018 - session_2017-10-24T11_20_24_0 - DEBUG - Starting 'RobustInterpreter'
2017-10-24 11:23:25,018 - session_2017-10-24T11_20_24_0 - DEBUG - DddInterpreter.interpret_partially: timeout=1.99874687195
2017-10-24 11:23:25,019 - session_2017-10-24T11_20_24_0 - DEBUG - robust grammatical interpretations: []
2017-10-24 11:23:25,020 - session_2017-10-24T11_20_24_0 - DEBUG - _remove_literals(): Got no valid interpretations of partial utterances
2017-10-24 11:23:25,021 - session_2017-10-24T11_20_24_0 - DEBUG - RobustInterpreter: Partial interpretation failed.
2017-10-24 11:23:25,021 - session_2017-10-24T11_20_24_0 - DEBUG - RobustInterpreter: use_word_list_correction disabled, skipping interpretation with word correction
2017-10-24 11:23:25,021 - session_2017-10-24T11_20_24_0 - DEBUG - RobustInterpreter: Found no robust interpretations, returning an empty result.
2017-10-24 11:23:25,021 - session_2017-10-24T11_20_24_0 - DEBUG - Result from 'RobustInterpreter': []
2017-10-24 11:23:25,021 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {}, sender=InterpretModule, reason=None)
2017-10-24 11:23:25,021 - session_2017-10-24T11_20_24_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:23:25,021 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: }], sender=TextInputComponent, reason=None)
2017-10-24 11:23:25,021 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:23:25,021 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:25,022 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:25,022 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:25,023 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 11:23:25,023 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:23:25,023 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:23:25,024 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:25,024 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:25,025 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:25,025 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:23:25,025 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:23:25,025 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:23:25,026 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:23:25,026 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 11:23:25,027 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 11:23:25,027 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:23:25,028 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 11:23:25,028 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:23:25,029 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:25,031 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:25,031 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:23:25,031 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:23:25,031 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:23:25,031 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:23:25,031 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:23:25,031 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:23:25,032 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b0004e488>]
2017-10-24 11:23:25,032 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b0004e488>], sender=GuiBackend, reason=None)
2017-10-24 11:23:25,032 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posted event
2017-10-24 11:23:25,032 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {}, sender=InterpretModule, reason=None))
2017-10-24 11:23:25,032 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {}, sender=InterpretModule, reason=None)
2017-10-24 11:23:25,032 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:23:25,032 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:23:25,033 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 11:23:25,033 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:25,033 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 11:23:25,033 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:23:25,034 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:23:25,034 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:25,035 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b0004e488>], sender=GuiBackend, reason=None))
2017-10-24 11:23:25,035 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b0004e488>], sender=GuiBackend, reason=None)
2017-10-24 11:23:25,035 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:23:25,036 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:25,036 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:25,041 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:23:25,041 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:25,041 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 11:23:25,042 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 11:23:25,042 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:23:25,042 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:23:25,042 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:23:25,042 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:23:25,042 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 11:23:25,044 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837005.04
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:25,044 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:25,044 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:25,044 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:25,047 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:23:25,047 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:25,048 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:25,051 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:25,051 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:25,051 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:25,051 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:25,051 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:25,051 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:25,051 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:25,051 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:25,051 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:25,052 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:25,052 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:25,052 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:25,055 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:23:25,055 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:25,055 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:25,055 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:25,055 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:25,056 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:25,058 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 11:23:25,058 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:25,059 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:25,059 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:25,059 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:25,059 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:25,059 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:25,060 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:25,060 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:25,060 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:25,060 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:25,060 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:25,060 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:25,060 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:25,060 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:25,061 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:25,061 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:25,061 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:25,061 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:25,061 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:25,061 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:25,061 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:25,064 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 11:23:25,064 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:25,064 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:25,064 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:23:25,064 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:25,064 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:25,065 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:25,065 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:23:25,065 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:25,066 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:25,066 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 11:23:25,066 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 11:23:25,066 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 11:23:25,067 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 11:23:25,067 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837005.07
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:25,068 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:25,068 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:25,070 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:25,070 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:25,075 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:23:25,075 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:25,075 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:25,078 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:25,078 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:25,078 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:25,078 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:25,079 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:25,079 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:25,079 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:25,080 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:25,080 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:23:25,080 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:25,080 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:23:25,080 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:25,080 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:25,080 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:25,080 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:25,080 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:25,080 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:25,080 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:25,081 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:25,081 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:25,081 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:25,081 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:25,081 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:25,082 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:25,084 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.goal(X)])
?                           ----------
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:23:25,084 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:25,084 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:25,084 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:25,085 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:25,085 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:25,085 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:25,085 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: select
2017-10-24 11:23:25,086 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837005.07
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:25,086 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:23:25,089 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                      ++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:25,089 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:25,091 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectIcmSemNeg
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)])
-- END TIS changes --
2017-10-24 11:23:25,092 - session_2017-10-24T11_20_24_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)])
2017-10-24 11:23:25,092 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 11:23:25,092 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:23:25,093 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:25,093 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:25,093 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:25,093 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None)))
2017-10-24 11:23:25,094 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 11:23:25,094 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:23:25,094 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:25,094 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:25,095 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:25,095 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:per*pos:""), facts={})
2017-10-24 11:23:25,095 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:per*pos:"")
2017-10-24 11:23:25,095 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:sem*neg), facts={})
2017-10-24 11:23:25,095 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:sem*neg)
2017-10-24 11:23:25,095 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:per*pos:"")
2017-10-24 11:23:25,096 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move ICMMove(icm:per*pos:"") generated as u'I heard you say.'
2017-10-24 11:23:25,096 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:sem*neg)
2017-10-24 11:23:25,096 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move ICMMove(icm:sem*neg) generated as u"I don't understand."
2017-10-24 11:23:25,096 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say., I don't understand.], sender=GenerateModule, reason=None)
2017-10-24 11:23:25,097 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:25,099 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:25,099 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:23:25,099 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)])
2017-10-24 11:23:25,099 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:per*pos:""), facts={})
2017-10-24 11:23:25,099 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:per*pos:"")
2017-10-24 11:23:25,099 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:sem*neg), facts={})
2017-10-24 11:23:25,099 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:sem*neg)
2017-10-24 11:23:25,100 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend generated message []
2017-10-24 11:23:25,100 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:23:25,100 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posted event
2017-10-24 11:23:25,100 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say., I don't understand.], sender=GenerateModule, reason=None))
2017-10-24 11:23:25,100 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say., I don't understand.], sender=GenerateModule, reason=None)
2017-10-24 11:23:25,100 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": ["I heard you say.", "I don't understand."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:23:25,101 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:25,101 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 11:23:25,101 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:23:25,101 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:23:25,101 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:25,102 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:25,118 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": ["I heard you say.", "I don't understand."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:23:25,119 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:25,119 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [I heard you say., I don't understand.], sender=TextOutputComponent, reason=None))
2017-10-24 11:23:25,119 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [I heard you say., I don't understand.], sender=TextOutputComponent, reason=None)
2017-10-24 11:23:25,119 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:23:25,119 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [I heard you say., I don't understand.], sender=TurnManager, reason=None)
2017-10-24 11:23:25,119 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [I heard you say., I don't understand.], sender=TurnManager, reason=None)
2017-10-24 11:23:25,119 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [I heard you say., I don't understand.], sender=TurnManager, reason=None)
2017-10-24 11:23:25,120 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [I heard you say., I don't understand.], sender=TurnManager, reason=None))
2017-10-24 11:23:25,121 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837005.12
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [I heard you say., I don't understand.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:25,121 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:25,121 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:25,121 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:25,124 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:23:25,125 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:25,125 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:25,128 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:25,128 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:25,128 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:25,128 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:25,128 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:25,128 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:25,128 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:25,128 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:25,128 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
2017-10-24 11:23:25,128 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:25,128 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
2017-10-24 11:23:25,128 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:25,131 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
?                             -------------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:23:25,132 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:25,132 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:25,132 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:25,132 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:25,132 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:25,135 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:sem*neg, speaker=SYS, score=1.0), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
?                                                                          ++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:25,135 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:25,135 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:25,135 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:25,135 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:25,135 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:25,135 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:25,135 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:25,135 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:25,136 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:25,136 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:25,136 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:25,136 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:25,136 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:25,136 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:25,137 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:25,137 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:25,137 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:25,137 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:25,137 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:25,137 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:25,137 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:25,139 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:25,139 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:25,139 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [I heard you say., I don't understand.], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:25,140 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:23:25,140 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:25,140 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:25,140 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:25,140 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [I heard you say., I don't understand.], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:23:25,141 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [I heard you say., I don't understand.], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:25,141 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [I heard you say., I don't understand.], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:25,141 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:30,136 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to step one"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:23:30,136 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:30,136 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to step one}], sender=TextInputComponent, reason=None))
2017-10-24 11:23:30,136 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to step one}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:30,136 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to step one}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:30,136 - session_2017-10-24T11_20_24_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to step one"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:23:30,136 - session_2017-10-24T11_20_24_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:23:30,137 - session_2017-10-24T11_20_24_0 - DEBUG - ExactInterpreter: Found no valid exact interpretations, returning an empty result.
2017-10-24 11:23:30,138 - session_2017-10-24T11_20_24_0 - DEBUG - Result from 'ExactInterpreter': []
2017-10-24 11:23:30,138 - session_2017-10-24T11_20_24_0 - DEBUG - Starting 'RobustInterpreter'
2017-10-24 11:23:30,138 - session_2017-10-24T11_20_24_0 - DEBUG - DddInterpreter.interpret_partially: timeout=1.99874901772
2017-10-24 11:23:30,149 - session_2017-10-24T11_20_24_0 - DEBUG - robust grammatical interpretations: [OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #]), OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #])]
2017-10-24 11:23:30,151 - session_2017-10-24T11_20_24_0 - DEBUG - _remove_literals(): Got interpretations of partial utterances. Returning: [OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])]
2017-10-24 11:23:30,151 - session_2017-10-24T11_20_24_0 - DEBUG - RobustInterpreter: Partial interpretation succeeded. Returning its results.
2017-10-24 11:23:30,151 - session_2017-10-24T11_20_24_0 - DEBUG - Result from 'RobustInterpreter': [OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])]
2017-10-24 11:23:30,152 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:23:30,152 - session_2017-10-24T11_20_24_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.CustomSort": {"_ontology_name": "RecipehelpOntology", "_dynamic": false, "_name": "step"}}, "value": "step1"}}, "_weighted_score": 0.8, "_score": 1.0, "_utterance": "go to step one", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:23:30,152 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to step one}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:30,152 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])}, sender=InterpretModule, reason=None))
2017-10-24 11:23:30,152 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:23:30,152 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:23:30,153 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:23:30,153 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 11:23:30,153 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:30,153 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 11:23:30,154 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:30,154 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:30,154 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:30,154 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:30,156 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837010.15
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])
tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step one
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:30,156 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:30,157 - session_2017-10-24T11_20_24_0 - INFO - hypotheses reranking had no effect
2017-10-24 11:23:30,157 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:30,161 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)])
+ tis.latest_moves: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one')])
- tis.score: 1.0
?            ^ ^
+ tis.score: 0.8
?            ^ ^
-- END TIS changes --
2017-10-24 11:23:30,161 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:30,166 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:23:30,167 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:30,167 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:30,170 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:30,170 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:30,170 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:30,173 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                    ----------
+ tis.private.tmp.usr.qud: stackset([])
-- END TIS changes --
2017-10-24 11:23:30,173 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:30,173 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:30,173 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:30,173 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:30,174 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:30,174 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])
2017-10-24 11:23:30,174 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:30,174 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])
2017-10-24 11:23:30,174 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:30,174 - session_2017-10-24T11_20_24_0 - INFO - shifted: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one')])
2017-10-24 11:23:30,174 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one')])
2017-10-24 11:23:30,174 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:30,175 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:30,175 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:30,175 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:30,175 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:30,180 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: accommodateDependentIssue
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:accommodate:?X.go_to_step(X))), emit_icm(ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))), emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:30,180 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:retract
2017-10-24 11:23:30,180 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:30,180 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])
2017-10-24 11:23:30,180 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:30,181 - session_2017-10-24T11_20_24_0 - INFO - shifted: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one')])
2017-10-24 11:23:30,181 - session_2017-10-24T11_20_24_0 - INFO - breaking out: question raising move
2017-10-24 11:23:30,181 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:30,181 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:30,181 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:30,181 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:30,181 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:30,182 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:30,182 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:30,182 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:30,182 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:30,183 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:30,183 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:30,183 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:30,185 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateISSUES2
-- BEGIN TIS changes --
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                                                        --------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 11:23:30,186 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:30,186 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:30,186 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:30,186 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:30,186 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:30,186 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to step one, sender=DmeModule, reason=None)
2017-10-24 11:23:30,187 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:30,187 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: select
2017-10-24 11:23:30,188 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837010.15
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one')])
tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:accommodate:?X.go_to_step(X))), emit_icm(ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))), emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step one
tis.repeat_questions: False
tis.score: 0.8
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:30,188 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:23:30,192 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:accommodate:?X.go_to_step(X))), emit_icm(ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))), emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                             -----      ^^
+ tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                                                   ^^^^^^^^
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
+ tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 11:23:30,192 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:30,196 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:accommodate:?X.go_to_step(X))), emit_icm(ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))), emit_icm(ICMMove(icm:loadplan))])
?                                 -----------------------------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))), emit_icm(ICMMove(icm:loadplan))])
-- END TIS changes --
2017-10-24 11:23:30,196 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:30,196 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:30,199 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
-- END TIS changes --
2017-10-24 11:23:30,199 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:30,199 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:30,199 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:30,199 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:23:30,202 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:30,202 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:23:30,202 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:23:30,205 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: setMediumTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 2.0
?                       ^
-- END TIS changes --
2017-10-24 11:23:30,206 - session_2017-10-24T11_20_24_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))])
2017-10-24 11:23:30,206 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:30,206 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to step one, sender=DmeModule, reason=None))
2017-10-24 11:23:30,206 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to step one, sender=DmeModule, reason=None)
2017-10-24 11:23:30,206 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to step one", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 11:23:30,207 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:30,207 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:23:30,207 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:30,207 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:30,208 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:30,209 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None)))
2017-10-24 11:23:30,209 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:30,209 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:23:30,209 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:30,210 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:30,211 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:30,211 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:accommodate:?X.go_to_step(X)), facts={})
2017-10-24 11:23:30,211 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:accommodate:?X.go_to_step(X))
2017-10-24 11:23:30,211 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X)))), facts={})
2017-10-24 11:23:30,212 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))
2017-10-24 11:23:30,212 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:accommodate:?X.go_to_step(X))
2017-10-24 11:23:30,212 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move ICMMove(icm:accommodate:?X.go_to_step(X)) generated as u'So,'
2017-10-24 11:23:30,212 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))
2017-10-24 11:23:30,213 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X)))) generated as u'You want to know go to step.'
2017-10-24 11:23:30,213 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [So,, You want to know go to step.], sender=GenerateModule, reason=None)
2017-10-24 11:23:30,215 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:30,216 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [{value: answer(yes), title: Yes}, {value: answer(no), title: No}], title: You want to know go to step.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:23:30,218 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:30,218 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:23:30,218 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))])
2017-10-24 11:23:30,218 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:accommodate:?X.go_to_step(X)), facts={})
2017-10-24 11:23:30,219 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:accommodate:?X.go_to_step(X))
2017-10-24 11:23:30,219 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X)))), facts={})
2017-10-24 11:23:30,219 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))
2017-10-24 11:23:30,220 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.Popup instance at 0x7f0af37c7440>]
2017-10-24 11:23:30,220 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f0af37c7440>], sender=GuiBackend, reason=None)
2017-10-24 11:23:30,220 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posted event
2017-10-24 11:23:30,220 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [So,, You want to know go to step.], sender=GenerateModule, reason=None))
2017-10-24 11:23:30,221 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [So,, You want to know go to step.], sender=GenerateModule, reason=None)
2017-10-24 11:23:30,221 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": ["So,", "You want to know go to step."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:23:30,221 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:30,221 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [{value: answer(yes), title: Yes}, {value: answer(no), title: No}], title: You want to know go to step.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:23:30,222 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [{value: answer(yes), title: Yes}, {value: answer(no), title: No}], title: You want to know go to step.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:23:30,222 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [{"value": "answer(yes)", "title": "Yes"}, {"value": "answer(no)", "title": "No"}], "title": "You want to know go to step."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:23:30,223 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:30,223 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f0af37c7440>], sender=GuiBackend, reason=None))
2017-10-24 11:23:30,223 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f0af37c7440>], sender=GuiBackend, reason=None)
2017-10-24 11:23:30,223 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [{"29687f5934314b7ff2716cd9f6c1a5c9.Element": {"name": "move", "title": "", "items": [{"29687f5934314b7ff2716cd9f6c1a5c9.Item": {"attributes": null, "selected": false, "predicted": false, "value": "answer(yes)", "title": "Yes"}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Item": {"attributes": null, "selected": false, "predicted": false, "value": "answer(no)", "title": "No"}}], "format": "", "voice_browsed": false, "value": "", "template": "menu", "type": "list"}}], "title": "You want to know go to step."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:23:30,224 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:30,225 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:30,243 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": ["So,", "You want to know go to step."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:23:30,243 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:30,243 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [So,, You want to know go to step.], sender=TextOutputComponent, reason=None))
2017-10-24 11:23:30,244 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [So,, You want to know go to step.], sender=TextOutputComponent, reason=None)
2017-10-24 11:23:30,244 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:23:30,244 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [So,, You want to know go to step.], sender=TurnManager, reason=None)
2017-10-24 11:23:30,244 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [So,, You want to know go to step.], sender=TurnManager, reason=None)
2017-10-24 11:23:30,244 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [So,, You want to know go to step.], sender=TurnManager, reason=None)
2017-10-24 11:23:30,244 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [So,, You want to know go to step.], sender=TurnManager, reason=None))
2017-10-24 11:23:30,246 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837010.24
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [So,, You want to know go to step.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X), speaker=SYS, score=1.0), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))), speaker=SYS, score=1.0)])
tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:accommodate:?X.go_to_step(X))), emit_icm(ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step one
tis.repeat_questions: False
tis.score: 0.8
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 2.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:30,246 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:30,246 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:30,246 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:30,250 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])
+ tis.private.nim: OpenQueue([ICMMove(icm:accommodate:?X.go_to_step(X), speaker=SYS, score=1.0), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))), speaker=SYS, score=1.0), Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:23:30,250 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:30,250 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:30,253 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:30,253 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:30,253 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:30,253 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:30,254 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:30,254 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:30,254 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:30,254 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:30,254 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([ICMMove(icm:accommodate:?X.go_to_step(X), speaker=SYS, score=1.0), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))), speaker=SYS, score=1.0), Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])
2017-10-24 11:23:30,254 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:30,254 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([ICMMove(icm:accommodate:?X.go_to_step(X), speaker=SYS, score=1.0), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))), speaker=SYS, score=1.0), Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])
2017-10-24 11:23:30,254 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:30,258 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateAccommodationICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:accommodate:?X.go_to_step(X), speaker=SYS, score=1.0), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))), speaker=SYS, score=1.0), Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])
?                                         ^^^^^^^^^^^                 --------------------------------------------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))), speaker=SYS, score=1.0), Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])
?                                         ^^^^^^^ +++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:accommodate:?X.go_to_step(X), speaker=SYS, score=1.0)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?und(USR, goal(resolve(?X.go_to_step(X))))])
-- END TIS changes --
2017-10-24 11:23:30,258 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:30,259 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:30,259 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:30,259 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:30,259 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:30,264 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateUndPosICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))), speaker=SYS, score=1.0), Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])
?                             ----------------------------------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:accommodate:?X.go_to_step(X), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:accommodate:?X.go_to_step(X), speaker=SYS, score=1.0), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:23:30,264 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:30,264 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:30,264 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:30,264 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:30,264 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:30,265 - session_2017-10-24T11_20_24_0 - INFO - shifted: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one')])
2017-10-24 11:23:30,265 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one')])
2017-10-24 11:23:30,265 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:30,265 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:30,265 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:30,265 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:30,265 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:30,265 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:30,266 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:30,266 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:30,266 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:30,266 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:30,266 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:30,266 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:30,267 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:30,267 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:30,267 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:30,267 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:30,270 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 11:23:30,270 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:30,270 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [So,, You want to know go to step.], latest_moves: OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X), speaker=SYS, score=1.0), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))), speaker=SYS, score=1.0)])}, 2.0), sender=DmeModule, reason=None)
2017-10-24 11:23:30,270 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:23:30,271 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:30,271 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:30,271 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:30,271 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [So,, You want to know go to step.], latest_moves: OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X), speaker=SYS, score=1.0), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))), speaker=SYS, score=1.0)])}, 2.0), sender=DmeModule, reason=None))
2017-10-24 11:23:30,272 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [So,, You want to know go to step.], latest_moves: OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X), speaker=SYS, score=1.0), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))), speaker=SYS, score=1.0)])}, 2.0), sender=DmeModule, reason=None)
2017-10-24 11:23:30,272 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [So,, You want to know go to step.], latest_moves: OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X), speaker=SYS, score=1.0), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))), speaker=SYS, score=1.0)])}, 2.0), sender=DmeModule, reason=None)
2017-10-24 11:23:30,272 - session_2017-10-24T11_20_24_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f0b000a9f38>:2.0
2017-10-24 11:23:30,273 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:32,273 - session_2017-10-24T11_20_24_0 - DEBUG - Timeout fired
2017-10-24 11:23:32,273 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:23:32,273 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:23:32,273 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:23:32,273 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:23:32,274 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837012.27
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X), speaker=SYS, score=1.0), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))), speaker=SYS, score=1.0)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X)), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:accommodate:?X.go_to_step(X))), emit_icm(ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step one
tis.repeat_questions: False
tis.score: 0.8
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:accommodate:?X.go_to_step(X), speaker=SYS, score=1.0), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))), speaker=SYS, score=1.0)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?und(USR, goal(resolve(?X.go_to_step(X))))])
tis.sys_turns: 0
tis.timeout.duration: 2.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:32,274 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:32,274 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:32,277 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:accommodate:?X.go_to_step(X), speaker=SYS, score=1.0), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))), speaker=SYS, score=1.0)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:32,277 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:32,283 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:accommodate:?X.go_to_step(X), speaker=SYS, score=1.0), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))), speaker=SYS, score=1.0)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:accommodate:?X.go_to_step(X), speaker=SYS, score=1.0), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))), speaker=SYS, score=1.0)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:23:32,283 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:32,283 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:32,286 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:32,286 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:32,286 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:32,286 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:32,286 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:32,286 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:32,290 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: noFollowupToUndQ
-- BEGIN TIS changes --
- tis.private.tmp.usr.agenda: OpenQueue([#])
+ tis.private.tmp.usr.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
?                                         +++++++++++++++++++++++++++
- tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.private.tmp.usr.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                                             +++++++++++++++++++++++++++
- tis.private.tmp.usr.qud: stackset([])
+ tis.private.tmp.usr.qud: stackset([?X.go_to_step(X)])
?                                    ++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:32,290 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:32,290 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:32,290 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])
2017-10-24 11:23:32,290 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:32,290 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])
2017-10-24 11:23:32,290 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:32,291 - session_2017-10-24T11_20_24_0 - INFO - shifted: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one')])
2017-10-24 11:23:32,291 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one')])
2017-10-24 11:23:32,291 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:32,291 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:32,291 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:32,291 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:32,291 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:32,295 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: accommodatePlan2Goals
-- BEGIN TIS changes --
- tis.private.issues_being_accommodated: {}
+ tis.private.issues_being_accommodated: {?X.step_to_choose(X)}
?                                         ++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:32,295 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:retract
2017-10-24 11:23:32,295 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:32,296 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])
2017-10-24 11:23:32,296 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:32,296 - session_2017-10-24T11_20_24_0 - INFO - shifted: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one')])
2017-10-24 11:23:32,296 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one')])
2017-10-24 11:23:32,296 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:32,296 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:32,296 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:32,297 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:32,297 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:32,300 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: accommodateIssues2QUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?und(USR, goal(resolve(?X.go_to_step(X))))])
+ tis.shared.qud: stackset([?X.step_to_choose(X), ?und(USR, goal(resolve(?X.go_to_step(X))))])
?                           ++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:32,300 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:retract
2017-10-24 11:23:32,300 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:32,300 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])
2017-10-24 11:23:32,301 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:32,304 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), emit_icm(ICMMove(icm:acc*pos))])
?                                                                  ++++++++++++++++++++++++++++++++
- tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {step_to_choose(step1)}
- tis.shared.com: {}
+ tis.shared.com: {step_to_choose(step1)}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one')}
-- END TIS changes --
2017-10-24 11:23:32,304 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:32,304 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:32,308 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {step_to_choose(step1)}
+ tis.shared.com: {step_to_choose(step1), resolved(?X.step_to_choose(X))}
- tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ------------------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 11:23:32,308 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:32,311 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
?                          -------------------------------
+ tis.private.plan: Stack([device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 11:23:32,311 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:32,311 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:32,311 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:32,311 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:32,311 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:32,312 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:32,312 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:32,312 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:32,312 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:32,312 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:32,312 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:32,315 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {}
+ tis.private.bel: {go_to_step("chose a step")}
- tis.private.plan: Stack([device_query(?X.go_to_step(X)), forget(step_to_choose)])
?                          --------------------------------
+ tis.private.plan: Stack([forget(step_to_choose)])
-- END TIS changes --
2017-10-24 11:23:32,315 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:32,315 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:32,318 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(step_to_choose)])
+ tis.private.plan: Stack([])
- tis.shared.com: {step_to_choose(step1), resolved(?X.step_to_choose(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 11:23:32,318 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:32,318 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:32,319 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:32,319 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:32,321 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.step_to_choose(X), ?und(USR, goal(resolve(?X.go_to_step(X))))])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:23:32,321 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:32,322 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:32,322 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:32,322 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:32,322 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:32,322 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 11:23:32,322 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 11:23:32,322 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: select
2017-10-24 11:23:32,323 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837012.27
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), emit_icm(ICMMove(icm:acc*pos))])
tis.private.bel: {go_to_step("chose a step")}
tis.private.issues_being_accommodated: {?X.step_to_choose(X)}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:accommodate:?X.go_to_step(X))), emit_icm(ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.go_to_step(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step one
tis.repeat_questions: False
tis.score: 0.8
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one')}
tis.shared.pm: {ICMMove(icm:accommodate:?X.go_to_step(X), speaker=SYS, score=1.0), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))), speaker=SYS, score=1.0)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 2.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:32,323 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:23:32,326 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:accommodate:?X.go_to_step(X))), emit_icm(ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))))), emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.tmp.sys.bel: {go_to_step("chose a step")}
- tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 11:23:32,327 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:32,329 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                                                                                  +++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:32,329 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:32,332 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
-- END TIS changes --
2017-10-24 11:23:32,332 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:32,332 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:32,335 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
-- END TIS changes --
2017-10-24 11:23:32,335 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:32,338 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose a step")))])
- tis.private.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:32,338 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:32,338 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:32,338 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:23:32,340 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:32,340 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:23:32,340 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:23:32,343 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 2.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 11:23:32,343 - session_2017-10-24T11_20_24_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')])
2017-10-24 11:23:32,343 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:23:35,516 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": ""}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:23:35,516 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:35,517 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: }], sender=TextInputComponent, reason=None))
2017-10-24 11:23:35,517 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: }], sender=TextInputComponent, reason=None)
2017-10-24 11:23:35,517 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: }], sender=TextInputComponent, reason=None)
2017-10-24 11:23:35,517 - session_2017-10-24T11_20_24_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": ""}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:23:35,517 - session_2017-10-24T11_20_24_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:23:35,518 - session_2017-10-24T11_20_24_0 - DEBUG - ExactInterpreter: Found no valid exact interpretations, returning an empty result.
2017-10-24 11:23:35,518 - session_2017-10-24T11_20_24_0 - DEBUG - Result from 'ExactInterpreter': []
2017-10-24 11:23:35,518 - session_2017-10-24T11_20_24_0 - DEBUG - Starting 'RobustInterpreter'
2017-10-24 11:23:35,518 - session_2017-10-24T11_20_24_0 - DEBUG - DddInterpreter.interpret_partially: timeout=1.99911189079
2017-10-24 11:23:35,519 - session_2017-10-24T11_20_24_0 - DEBUG - robust grammatical interpretations: []
2017-10-24 11:23:35,520 - session_2017-10-24T11_20_24_0 - DEBUG - _remove_literals(): Got no valid interpretations of partial utterances
2017-10-24 11:23:35,520 - session_2017-10-24T11_20_24_0 - DEBUG - RobustInterpreter: Partial interpretation failed.
2017-10-24 11:23:35,521 - session_2017-10-24T11_20_24_0 - DEBUG - RobustInterpreter: use_word_list_correction disabled, skipping interpretation with word correction
2017-10-24 11:23:35,521 - session_2017-10-24T11_20_24_0 - DEBUG - RobustInterpreter: Found no robust interpretations, returning an empty result.
2017-10-24 11:23:35,521 - session_2017-10-24T11_20_24_0 - DEBUG - Result from 'RobustInterpreter': []
2017-10-24 11:23:35,521 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {}, sender=InterpretModule, reason=None)
2017-10-24 11:23:35,521 - session_2017-10-24T11_20_24_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:23:35,521 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: }], sender=TextInputComponent, reason=None)
2017-10-24 11:23:35,521 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None))
2017-10-24 11:23:35,521 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 11:23:35,522 - session_2017-10-24T11_20_24_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 11:23:35,522 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None))
2017-10-24 11:23:35,522 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 11:23:35,522 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "go_to_step", "grammar_entry": null, "value": "chose a step"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:35,523 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:35,523 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 11:23:35,523 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:23:35,523 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:23:35,524 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:35,524 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:35,526 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose a step")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:35,526 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp'), facts={go_to_step("chose a step")})
2017-10-24 11:23:35,526 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')
2017-10-24 11:23:35,526 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')
2017-10-24 11:23:35,527 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp') generated as u'Ok chose a step.'
2017-10-24 11:23:35,527 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose a step.], sender=GenerateModule, reason=None)
2017-10-24 11:23:35,528 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose a step")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:35,529 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok chose a step.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:23:35,530 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose a step")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:35,530 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:23:35,531 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')])
2017-10-24 11:23:35,531 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp'), facts={go_to_step("chose a step")})
2017-10-24 11:23:35,531 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')
2017-10-24 11:23:35,532 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b00089320>, <tdm.tdm_gui_protocol.Popup instance at 0x7f0b0009bb48>]
2017-10-24 11:23:35,532 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b00089320>, <tdm.tdm_gui_protocol.Popup instance at 0x7f0b0009bb48>], sender=GuiBackend, reason=None)
2017-10-24 11:23:35,532 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posted event
2017-10-24 11:23:35,532 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {}, sender=InterpretModule, reason=None))
2017-10-24 11:23:35,532 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {}, sender=InterpretModule, reason=None)
2017-10-24 11:23:35,532 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:23:35,532 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:23:35,532 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 11:23:35,533 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:35,533 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose a step.], sender=GenerateModule, reason=None))
2017-10-24 11:23:35,533 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose a step.], sender=GenerateModule, reason=None)
2017-10-24 11:23:35,534 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok chose a step."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:23:35,535 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:35,535 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok chose a step.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:23:35,535 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok chose a step.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:23:35,535 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok chose a step."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:23:35,536 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:35,536 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b00089320>, <tdm.tdm_gui_protocol.Popup instance at 0x7f0b0009bb48>], sender=GuiBackend, reason=None))
2017-10-24 11:23:35,536 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b00089320>, <tdm.tdm_gui_protocol.Popup instance at 0x7f0b0009bb48>], sender=GuiBackend, reason=None)
2017-10-24 11:23:35,536 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok chose a step."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:23:35,537 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:35,537 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:35,548 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok chose a step."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:23:35,548 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:35,549 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok chose a step.], sender=TextOutputComponent, reason=None))
2017-10-24 11:23:35,549 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok chose a step.], sender=TextOutputComponent, reason=None)
2017-10-24 11:23:35,549 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:23:35,549 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
2017-10-24 11:23:35,549 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
2017-10-24 11:23:35,549 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
2017-10-24 11:23:35,550 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None))
2017-10-24 11:23:35,551 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837015.55
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose a step")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {go_to_step("chose a step")}
tis.private.issues_being_accommodated: {?X.step_to_choose(X)}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose a step")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.go_to_step(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one')}
tis.shared.pm: {ICMMove(icm:accommodate:?X.go_to_step(X), speaker=SYS, score=1.0), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))), speaker=SYS, score=1.0)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:35,551 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:35,551 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:35,551 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:35,559 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.issues_being_accommodated: {?X.step_to_choose(X)}
?                                         --------------------
+ tis.private.issues_being_accommodated: {}
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one')}
?            ^^
- tis.shared.pm: {ICMMove(icm:accommodate:?X.go_to_step(X), speaker=SYS, score=1.0), ICMMove(icm:und*pos:USR*goal(resolve(?X.go_to_step(X))), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:23:35,559 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:35,559 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:35,562 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:35,562 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:35,562 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:35,562 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:35,562 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:35,562 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:35,562 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:35,562 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:35,563 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:35,563 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:35,563 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:35,563 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:35,566 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {go_to_step("chose a step")}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:23:35,566 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:35,566 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:35,569 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {go_to_step("chose a step")}
+ tis.shared.com: {go_to_step("chose a step"), resolved(?X.go_to_step(X))}
?                                            ++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                             ---------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 11:23:35,570 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:35,570 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:35,570 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:35,570 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:35,570 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:35,570 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:35,570 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:35,570 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:35,570 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:35,570 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:35,570 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:35,570 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:35,571 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:35,571 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:35,571 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:35,571 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:35,571 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:35,571 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:35,571 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:35,574 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:35,574 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 11:23:35,574 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:23:35,574 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None))
2017-10-24 11:23:35,575 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 11:23:35,575 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "go_to_step", "grammar_entry": null, "value": "chose a step"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:35,575 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:35,575 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 11:23:35,576 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:23:35,576 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:23:35,576 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 11:23:35,576 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 11:23:35,576 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 11:23:35,577 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 11:23:35,578 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837015.58
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose a step")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {go_to_step("chose a step")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose a step")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.go_to_step(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {go_to_step("chose a step"), resolved(?X.go_to_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:35,578 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:35,578 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:35,580 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:35,581 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:35,585 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=0.8, modality=speech, utterance=u'go to step one')}
-- END TIS changes --
2017-10-24 11:23:35,585 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:35,585 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:35,588 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:35,588 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:35,588 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:35,588 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:35,588 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:35,588 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:35,589 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:35,589 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:35,589 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:23:35,589 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:35,589 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:23:35,589 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:35,589 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:35,589 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:35,589 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:35,589 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:35,590 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:35,590 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:35,590 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:35,590 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:35,590 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:35,590 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:35,594 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:23:35,594 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:35,594 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:35,598 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {go_to_step("chose a step")}
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {go_to_step("chose a step"), resolved(?X.go_to_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 11:23:35,598 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:35,598 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:35,598 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:35,599 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:35,599 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:35,599 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:35,599 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:35,600 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:35,600 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:35,600 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:35,600 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: select
2017-10-24 11:23:35,601 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837015.58
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose a step")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.go_to_step(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:35,601 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:23:35,606 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), emit_icm(ICMMove(icm:acc*pos))])
- tis.private.tmp.sys.bel: {go_to_step("chose a step")}
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.tmp.sys.bel: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                                      ---------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:35,606 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:35,609 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:35,609 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:35,612 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectIcmSemNeg
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)])
-- END TIS changes --
2017-10-24 11:23:35,612 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:35,612 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:35,615 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top))])
?                                                                                      +++++++++++++++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:23:35,615 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:35,618 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                                                                         +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:35,618 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:35,618 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:35,618 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:23:35,620 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:35,620 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:23:35,621 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:23:35,623 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 11:23:35,623 - session_2017-10-24T11_20_24_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:23:35,624 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 11:23:35,624 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:23:35,624 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:35,624 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:35,624 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:35,625 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None)))
2017-10-24 11:23:35,625 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 11:23:35,625 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:23:35,626 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:35,626 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:35,627 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:35,627 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:per*pos:""), facts={})
2017-10-24 11:23:35,627 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:per*pos:"")
2017-10-24 11:23:35,628 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:sem*neg), facts={})
2017-10-24 11:23:35,628 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:sem*neg)
2017-10-24 11:23:35,628 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:23:35,628 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:23:35,628 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:23:35,628 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:23:35,628 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:per*pos:"")
2017-10-24 11:23:35,629 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move ICMMove(icm:per*pos:"") generated as u'I heard you say.'
2017-10-24 11:23:35,629 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:sem*neg)
2017-10-24 11:23:35,629 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move ICMMove(icm:sem*neg) generated as u"I don't understand."
2017-10-24 11:23:35,629 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 11:23:35,630 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 11:23:35,630 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:23:35,630 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 11:23:35,630 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say., I don't understand., Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:23:35,631 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:35,633 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:35,633 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:23:35,633 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:23:35,634 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:per*pos:""), facts={})
2017-10-24 11:23:35,634 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:per*pos:"")
2017-10-24 11:23:35,634 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:sem*neg), facts={})
2017-10-24 11:23:35,634 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:sem*neg)
2017-10-24 11:23:35,634 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:23:35,634 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:23:35,634 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:23:35,634 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:23:35,635 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b0009b908>]
2017-10-24 11:23:35,635 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b0009b908>], sender=GuiBackend, reason=None)
2017-10-24 11:23:35,635 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posted event
2017-10-24 11:23:35,635 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say., I don't understand., Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 11:23:35,635 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say., I don't understand., Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:23:35,635 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": ["I heard you say.", "I don't understand.", "Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:23:35,636 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:35,636 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b0009b908>], sender=GuiBackend, reason=None))
2017-10-24 11:23:35,637 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b0009b908>], sender=GuiBackend, reason=None)
2017-10-24 11:23:35,637 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:23:35,639 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:35,639 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:35,642 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": ["I heard you say.", "I don't understand.", "Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:23:35,642 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:35,643 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [I heard you say., I don't understand., Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 11:23:35,643 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [I heard you say., I don't understand., Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 11:23:35,643 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:23:35,643 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [I heard you say., I don't understand., Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:23:35,643 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [I heard you say., I don't understand., Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:23:35,643 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [I heard you say., I don't understand., Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:23:35,644 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [I heard you say., I don't understand., Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 11:23:35,645 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837015.64
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [I heard you say., I don't understand., Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.go_to_step(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:35,645 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:35,645 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:35,645 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:35,649 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:23:35,650 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:35,650 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:35,652 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:35,652 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:35,652 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:35,652 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:35,652 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:35,652 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:35,652 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:35,652 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:35,653 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:35,653 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:35,653 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:35,653 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:35,656 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                                         ^^^ ^^^^^^                                       ----------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                                         ^^^ ^^^
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:23:35,657 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:35,657 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:35,657 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:35,657 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:35,657 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:35,662 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
?                                                                          ++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:35,662 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:35,662 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:35,663 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:35,663 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:35,663 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:35,667 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
?                                                                                                                        +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:35,667 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:35,667 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:35,667 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:35,667 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:35,667 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:35,671 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?                                                                                                                                                                                   ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 11:23:35,671 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:35,671 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:35,671 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:35,671 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:35,671 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:35,671 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:35,672 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:35,672 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:35,672 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:35,672 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:35,672 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:35,672 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:35,672 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:35,672 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:35,672 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:35,673 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:35,673 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:35,673 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:35,673 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:35,673 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:35,673 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:35,676 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 11:23:35,676 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:35,676 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [I heard you say., I don't understand., Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:35,676 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:23:35,676 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:35,676 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:35,677 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:35,677 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [I heard you say., I don't understand., Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:23:35,677 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [I heard you say., I don't understand., Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:35,678 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [I heard you say., I don't understand., Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:35,678 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:39,686 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to a step"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:23:39,686 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:39,686 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None))
2017-10-24 11:23:39,686 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:39,686 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:39,686 - session_2017-10-24T11_20_24_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to a step"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:23:39,687 - session_2017-10-24T11_20_24_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:23:39,688 - session_2017-10-24T11_20_24_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 11:23:39,688 - session_2017-10-24T11_20_24_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])} for DDD 'recipehelp'
2017-10-24 11:23:39,688 - session_2017-10-24T11_20_24_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
2017-10-24 11:23:39,688 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:23:39,689 - session_2017-10-24T11_20_24_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AskMove": {"_type": "ask", "_ddd_name": "recipehelp", "_content": {"445f2b7f7189027ce75dac332c96dde0.WhQuestion": {"_type": "WHQ", "_content": {"24b0f339529d53d987534676834bafa7.LambdaAbstractedPredicateProposition": {"_ontology_name": "RecipehelpOntology", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.BuiltinSort": {"_dynamic": false, "_name": "string"}}, "name": "go_to_step", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to a step", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to a step"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to a step", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:23:39,689 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:39,689 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None))
2017-10-24 11:23:39,689 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:23:39,689 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:23:39,690 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:23:39,690 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 11:23:39,690 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:39,691 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 11:23:39,691 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:39,691 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:39,692 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:39,692 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:39,693 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837019.69
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:""), ICMMove(icm:sem*neg), ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.go_to_step(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:39,693 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:39,697 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
-- END TIS changes --
2017-10-24 11:23:39,697 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:39,701 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                 ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                 ^
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
?                                                                                                                                ^
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
?                                                                                                                                ^
-- END TIS changes --
2017-10-24 11:23:39,701 - session_2017-10-24T11_20_24_0 - INFO - hypotheses reranking had no effect
2017-10-24 11:23:39,702 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:39,704 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 11:23:39,705 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:39,709 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:23:39,709 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:39,709 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:39,712 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:39,712 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:39,712 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:39,717 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
?                                         ---------------------------
+ tis.private.tmp.usr.agenda: OpenQueue([#])
- tis.private.tmp.usr.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                                             ---------------------------
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
- tis.private.tmp.usr.qud: stackset([?X.go_to_step(X)])
?                                         ^^^^^^^^
+ tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                         ^^
-- END TIS changes --
2017-10-24 11:23:39,717 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:39,718 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:39,718 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:39,718 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:39,718 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:39,718 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
2017-10-24 11:23:39,718 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:39,718 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
2017-10-24 11:23:39,719 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:39,723 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateUsrAsk
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
- tis.private.nim: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
- tis.shared.qud: stackset([?X.goal(X)])
+ tis.shared.qud: stackset([?X.go_to_step(X), ?X.goal(X)])
?                                ++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:39,723 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:39,723 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:39,727 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateISSUES2
-- BEGIN TIS changes --
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                                                        --------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 11:23:39,727 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:39,727 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:39,732 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: findIssuePlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                                                   - ^ ^ -----------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^ ^^
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 11:23:39,732 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:39,732 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:39,732 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:39,732 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:39,732 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:39,732 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:39,733 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:39,733 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:39,733 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:39,733 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:39,733 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:39,733 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:39,736 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.go_to_step(X), ?X.goal(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:23:39,736 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:39,736 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:39,737 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:39,737 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:39,737 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:39,737 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None)
2017-10-24 11:23:39,737 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:39,737 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: select
2017-10-24 11:23:39,738 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837019.69
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.pm: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:39,738 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:23:39,743 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                ^ ^^ ^^^^^^^^^  ^  ^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                ^^^^^^^^^^^ ^ ^^^^  ^^^^ +++++++++++ ^^^
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                                      +++++++++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
+ tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 11:23:39,743 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:39,746 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                                                                                  +++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:39,746 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:39,750 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
-- END TIS changes --
2017-10-24 11:23:39,750 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:39,750 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:39,753 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.step_to_choose(X))])
-- END TIS changes --
2017-10-24 11:23:39,753 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:39,756 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
?                                                                                    +++++++++++++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.step_to_choose(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:39,756 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:39,756 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:39,757 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:23:39,759 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:39,759 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:23:39,760 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:23:39,762 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:39,762 - session_2017-10-24T11_20_24_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')])
2017-10-24 11:23:39,763 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:39,763 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None))
2017-10-24 11:23:39,763 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None)
2017-10-24 11:23:39,763 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to a step", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 11:23:39,764 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:39,764 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:23:39,764 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:39,764 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:39,765 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:39,765 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)))
2017-10-24 11:23:39,766 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:39,766 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:23:39,766 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:39,766 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:39,768 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:39,768 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={})
2017-10-24 11:23:39,768 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 11:23:39,769 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 11:23:39,769 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 11:23:39,769 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:23:39,769 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 11:23:39,769 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 11:23:39,769 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 11:23:39,769 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 11:23:39,770 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 11:23:39,770 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 11:23:39,770 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp') generated as u'Which step?'
2017-10-24 11:23:39,770 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None)
2017-10-24 11:23:39,772 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:39,774 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:39,775 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:23:39,775 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')])
2017-10-24 11:23:39,775 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={})
2017-10-24 11:23:39,775 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 11:23:39,775 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 11:23:39,775 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 11:23:39,775 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:23:39,775 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 11:23:39,776 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend generated message []
2017-10-24 11:23:39,776 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:23:39,776 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posted event
2017-10-24 11:23:39,776 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None))
2017-10-24 11:23:39,776 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None)
2017-10-24 11:23:39,776 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "", "Which step?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:23:39,777 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:39,777 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 11:23:39,777 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:23:39,777 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:23:39,779 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:39,779 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:39,795 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": ["", "", "Which step?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:23:39,796 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:39,796 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, , Which step?], sender=TextOutputComponent, reason=None))
2017-10-24 11:23:39,796 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, , Which step?], sender=TextOutputComponent, reason=None)
2017-10-24 11:23:39,796 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:23:39,796 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 11:23:39,796 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 11:23:39,796 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 11:23:39,797 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None))
2017-10-24 11:23:39,798 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837019.8
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.pm: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:39,798 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:39,798 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:39,798 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:39,805 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
?            ^^
- tis.shared.pm: {ICMMove(icm:per*pos:"", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:23:39,805 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:39,805 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:39,808 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:39,808 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:39,808 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:39,808 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:39,808 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:39,809 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:39,809 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:39,809 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:39,809 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:39,809 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:39,809 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:39,809 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:39,813 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:23:39,813 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:39,813 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:39,814 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:39,814 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:39,814 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:39,818 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
?                                                                       +++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:39,818 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:39,818 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:39,818 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:39,818 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:39,818 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:39,822 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.step_to_choose(X)])
-- END TIS changes --
2017-10-24 11:23:39,822 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:39,822 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:39,822 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:39,822 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:39,822 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:39,822 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:39,822 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:39,822 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:39,823 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:39,823 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:39,823 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:39,823 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:39,823 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:39,823 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:39,824 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:39,824 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:39,824 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:39,824 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:39,824 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:39,825 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:39,825 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:39,827 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:39,827 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:39,827 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:39,827 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:23:39,827 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:39,828 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:39,828 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:39,828 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:23:39,829 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:39,829 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:39,829 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:41,424 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "step one"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:23:41,424 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:41,425 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None))
2017-10-24 11:23:41,425 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:41,425 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:41,425 - session_2017-10-24T11_20_24_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "step one"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:23:41,425 - session_2017-10-24T11_20_24_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:23:41,426 - session_2017-10-24T11_20_24_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 11:23:41,426 - session_2017-10-24T11_20_24_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])} for DDD 'recipehelp'
2017-10-24 11:23:41,426 - session_2017-10-24T11_20_24_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
2017-10-24 11:23:41,427 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:23:41,427 - session_2017-10-24T11_20_24_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "step one"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "step one", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.CustomSort": {"_ontology_name": "RecipehelpOntology", "_dynamic": false, "_name": "step"}}, "value": "step1"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "step one", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:23:41,427 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:41,427 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None))
2017-10-24 11:23:41,427 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:23:41,427 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:23:41,428 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:23:41,428 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 11:23:41,428 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:41,428 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 11:23:41,429 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:41,429 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:41,430 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:41,430 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:41,431 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837021.43
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.step_to_choose(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:41,431 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:41,435 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
-- END TIS changes --
2017-10-24 11:23:41,436 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:41,440 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
- tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
-- END TIS changes --
2017-10-24 11:23:41,445 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^^
-- END TIS changes --
2017-10-24 11:23:41,446 - session_2017-10-24T11_20_24_0 - INFO - hypotheses reranking had no effect
2017-10-24 11:23:41,446 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:41,449 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')])
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 11:23:41,450 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:41,455 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
-- END TIS changes --
2017-10-24 11:23:41,455 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:41,456 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:41,459 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:41,459 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:41,459 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:41,465 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                                        ^^
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                                                      +++++++++++++++++++++++++++++++  ^^^^^^^^
- tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
+ tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
- tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                       ^ ^^
+ tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
?                                       ^^^^^^ ^^^^^^^
-- END TIS changes --
2017-10-24 11:23:41,465 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:41,465 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:41,465 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:41,465 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:41,465 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:41,466 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
2017-10-24 11:23:41,466 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:41,466 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
2017-10-24 11:23:41,466 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:41,469 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {step_to_choose(step1)}
- tis.shared.com: {}
+ tis.shared.com: {step_to_choose(step1)}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
-- END TIS changes --
2017-10-24 11:23:41,469 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:41,470 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:41,474 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {step_to_choose(step1)}
+ tis.shared.com: {step_to_choose(step1), resolved(?X.step_to_choose(X))}
- tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ------------------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 11:23:41,474 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:41,477 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
?                          -------------------------------
+ tis.private.plan: Stack([device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 11:23:41,477 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:41,477 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:41,477 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:41,477 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:41,477 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:41,477 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:41,477 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:41,478 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:41,478 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:41,478 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:41,478 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:41,481 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {}
+ tis.private.bel: {go_to_step("chose a step")}
- tis.private.plan: Stack([device_query(?X.go_to_step(X)), forget(step_to_choose)])
?                          --------------------------------
+ tis.private.plan: Stack([forget(step_to_choose)])
-- END TIS changes --
2017-10-24 11:23:41,481 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:41,481 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:41,484 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(step_to_choose)])
+ tis.private.plan: Stack([])
- tis.shared.com: {step_to_choose(step1), resolved(?X.step_to_choose(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 11:23:41,484 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:41,484 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:41,484 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:41,484 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:41,487 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.step_to_choose(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:23:41,487 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:41,487 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:41,487 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:41,487 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:41,488 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:41,488 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 11:23:41,488 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None)
2017-10-24 11:23:41,488 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 11:23:41,488 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: select
2017-10-24 11:23:41,489 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837021.43
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')])
tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.bel: {go_to_step("chose a step")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:41,489 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:23:41,493 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                         ---------------------------------
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.bel: {go_to_step("chose a step")}
- tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 11:23:41,493 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:41,496 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                                                 +++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:41,496 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:41,499 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
-- END TIS changes --
2017-10-24 11:23:41,499 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:41,502 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose a step")))])
- tis.private.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:41,502 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:41,502 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:41,502 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:23:41,504 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:41,504 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:23:41,504 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:23:41,507 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 11:23:41,507 - session_2017-10-24T11_20_24_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')])
2017-10-24 11:23:41,507 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:41,508 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None))
2017-10-24 11:23:41,508 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 11:23:41,508 - session_2017-10-24T11_20_24_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 11:23:41,508 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None))
2017-10-24 11:23:41,508 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None)
2017-10-24 11:23:41,508 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": "step one", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 11:23:41,509 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:41,509 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None))
2017-10-24 11:23:41,509 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 11:23:41,510 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "go_to_step", "grammar_entry": null, "value": "chose a step"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:41,510 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:41,511 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)))
2017-10-24 11:23:41,511 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:41,511 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:23:41,512 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:41,512 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:41,513 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose a step")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:41,513 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp'), facts={go_to_step("chose a step")})
2017-10-24 11:23:41,513 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')
2017-10-24 11:23:41,514 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')
2017-10-24 11:23:41,514 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp') generated as u'Ok chose a step.'
2017-10-24 11:23:41,514 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose a step.], sender=GenerateModule, reason=None)
2017-10-24 11:23:41,515 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose a step")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:41,516 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok chose a step.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:23:41,517 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose a step")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:41,517 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:23:41,518 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')])
2017-10-24 11:23:41,518 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp'), facts={go_to_step("chose a step")})
2017-10-24 11:23:41,518 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')
2017-10-24 11:23:41,519 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.Popup instance at 0x7f0b00066320>]
2017-10-24 11:23:41,519 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f0b00066320>], sender=GuiBackend, reason=None)
2017-10-24 11:23:41,519 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posted event
2017-10-24 11:23:41,519 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose a step.], sender=GenerateModule, reason=None))
2017-10-24 11:23:41,519 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose a step.], sender=GenerateModule, reason=None)
2017-10-24 11:23:41,519 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok chose a step."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:23:41,520 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:41,520 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok chose a step.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:23:41,520 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok chose a step.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:23:41,521 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok chose a step."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:23:41,521 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:41,521 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f0b00066320>], sender=GuiBackend, reason=None))
2017-10-24 11:23:41,521 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f0b00066320>], sender=GuiBackend, reason=None)
2017-10-24 11:23:41,522 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok chose a step."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:23:41,523 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:41,523 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:41,533 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok chose a step."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:23:41,534 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:41,534 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok chose a step.], sender=TextOutputComponent, reason=None))
2017-10-24 11:23:41,534 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok chose a step.], sender=TextOutputComponent, reason=None)
2017-10-24 11:23:41,534 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:23:41,534 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
2017-10-24 11:23:41,534 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
2017-10-24 11:23:41,534 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
2017-10-24 11:23:41,535 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None))
2017-10-24 11:23:41,536 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837021.54
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose a step")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {go_to_step("chose a step")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose a step")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:41,536 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:41,536 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:41,537 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:41,543 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
?            ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:23:41,543 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:41,543 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:41,545 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:41,545 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:41,545 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:41,545 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:41,545 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:41,545 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:41,546 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:41,546 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:41,546 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:41,546 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:41,546 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:41,546 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:41,549 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {go_to_step("chose a step")}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:23:41,549 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:41,549 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:41,553 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {go_to_step("chose a step")}
+ tis.shared.com: {go_to_step("chose a step"), resolved(?X.go_to_step(X))}
?                                            ++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                             ---------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 11:23:41,553 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:41,553 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:41,554 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:41,554 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:41,554 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:41,554 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:41,554 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:41,554 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:41,554 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:41,554 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:41,554 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:41,554 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:41,555 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:41,555 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:41,555 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:41,555 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:41,555 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:41,555 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:41,555 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:41,558 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 11:23:41,558 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 11:23:41,558 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:23:41,558 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None))
2017-10-24 11:23:41,558 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 11:23:41,558 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "go_to_step", "grammar_entry": null, "value": "chose a step"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:41,559 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:41,559 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 11:23:41,559 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:23:41,559 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:23:41,560 - session_2017-10-24T11_20_24_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f0b00066b90>:1.0
2017-10-24 11:23:41,560 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:42,560 - session_2017-10-24T11_20_24_0 - DEBUG - Timeout fired
2017-10-24 11:23:42,561 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:23:42,561 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:23:42,561 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:23:42,561 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:23:42,562 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837022.56
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose a step")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {go_to_step("chose a step")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose a step")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {go_to_step("chose a step"), resolved(?X.go_to_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:42,562 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:42,562 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:42,565 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:42,565 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:42,569 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
-- END TIS changes --
2017-10-24 11:23:42,569 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:42,569 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:42,572 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:42,572 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:42,572 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:42,572 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:42,572 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:42,572 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:42,572 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:42,572 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:42,572 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:23:42,572 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:42,573 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:23:42,573 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:42,573 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:42,573 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:42,573 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:42,573 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:42,573 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:42,573 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:42,574 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:42,574 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:42,574 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:42,574 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:42,577 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:23:42,577 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:42,577 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:42,580 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {go_to_step("chose a step")}
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {go_to_step("chose a step"), resolved(?X.go_to_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 11:23:42,580 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:42,580 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:42,580 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:42,580 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:42,580 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:42,580 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:42,581 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:42,581 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:42,582 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:42,582 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:42,582 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: select
2017-10-24 11:23:42,583 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837022.56
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose a step")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:42,583 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:23:42,587 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^  ^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                +++ ^^^^ +++ ^^^^^^^
- tis.private.tmp.sys.bel: {go_to_step("chose a step")}
+ tis.private.tmp.sys.bel: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                                      ---------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:42,587 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:42,590 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:42,590 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:42,592 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:23:42,592 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:42,596 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:42,596 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:42,596 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:42,596 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:23:42,598 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:42,598 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:23:42,598 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:23:42,600 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 11:23:42,601 - session_2017-10-24T11_20_24_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:23:42,601 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:23:45,115 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "tell me what to do"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:23:45,115 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:45,116 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None))
2017-10-24 11:23:45,116 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:45,116 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:45,116 - session_2017-10-24T11_20_24_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "tell me what to do"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:23:45,116 - session_2017-10-24T11_20_24_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:23:45,117 - session_2017-10-24T11_20_24_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 11:23:45,117 - session_2017-10-24T11_20_24_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])} for DDD 'recipehelp'
2017-10-24 11:23:45,117 - session_2017-10-24T11_20_24_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
2017-10-24 11:23:45,118 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:23:45,118 - session_2017-10-24T11_20_24_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AskMove": {"_type": "ask", "_ddd_name": "recipehelp", "_content": {"445f2b7f7189027ce75dac332c96dde0.WhQuestion": {"_type": "WHQ", "_content": {"24b0f339529d53d987534676834bafa7.LambdaAbstractedPredicateProposition": {"_ontology_name": "RecipehelpOntology", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.BuiltinSort": {"_dynamic": false, "_name": "string"}}, "name": "say_step", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "tell me what to do", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "tell me what to do"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "tell me what to do", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:23:45,118 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:45,118 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:23:45,118 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:45,118 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:45,119 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:45,120 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 11:23:45,120 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:23:45,120 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:23:45,120 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:45,121 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:45,122 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:45,122 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:23:45,122 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:23:45,122 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:23:45,122 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:23:45,122 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 11:23:45,123 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 11:23:45,123 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:23:45,123 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 11:23:45,123 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:23:45,124 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:45,125 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:45,125 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:23:45,126 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:23:45,126 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:23:45,126 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:23:45,126 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:23:45,126 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:23:45,126 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b00066050>]
2017-10-24 11:23:45,127 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b00066050>], sender=GuiBackend, reason=None)
2017-10-24 11:23:45,127 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posted event
2017-10-24 11:23:45,127 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None))
2017-10-24 11:23:45,127 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:23:45,127 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:23:45,127 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:23:45,127 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 11:23:45,129 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:45,129 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 11:23:45,129 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:23:45,130 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:23:45,130 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:45,130 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b00066050>], sender=GuiBackend, reason=None))
2017-10-24 11:23:45,131 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b00066050>], sender=GuiBackend, reason=None)
2017-10-24 11:23:45,131 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:23:45,131 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:45,131 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:45,141 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:23:45,141 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:45,141 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 11:23:45,142 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 11:23:45,142 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:23:45,142 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:23:45,142 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:23:45,142 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:23:45,143 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 11:23:45,144 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837025.14
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:45,144 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:45,144 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:45,144 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:45,148 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:23:45,148 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:45,148 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:45,150 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:45,150 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:45,151 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:45,151 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:45,151 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:45,151 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:45,151 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:45,151 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:45,151 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:45,151 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:45,151 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:45,151 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:45,155 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:23:45,155 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:45,155 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:45,155 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:45,155 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:45,156 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:45,159 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 11:23:45,159 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:45,159 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:45,159 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:45,159 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:45,159 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:45,159 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:45,159 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:45,159 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:45,160 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:45,160 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:45,160 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:45,160 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:45,160 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:45,160 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:45,160 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:45,160 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:45,160 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:45,161 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:45,161 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:45,161 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:45,161 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:45,164 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 11:23:45,164 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:45,164 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:45,164 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:23:45,164 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:45,164 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:45,165 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:45,165 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:23:45,165 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:45,165 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:45,166 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:45,166 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:45,167 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:45,167 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:45,168 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837025.17
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:45,168 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:45,171 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
-- END TIS changes --
2017-10-24 11:23:45,171 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:45,176 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
?                                                                                                                              ^
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
?                                                                                                                              ^
-- END TIS changes --
2017-10-24 11:23:45,177 - session_2017-10-24T11_20_24_0 - INFO - hypotheses reranking had no effect
2017-10-24 11:23:45,177 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:45,183 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 11:23:45,183 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:45,190 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:23:45,190 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:45,190 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:45,193 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:45,193 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:45,193 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:45,199 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                                                      -------------------------------  ^^^^^^^^
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                                        ^^
- tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
+ tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
- tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
?                                       ^^^^^^ ^^^^^^^
+ tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                       ^ ^^
-- END TIS changes --
2017-10-24 11:23:45,199 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:45,199 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:45,199 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:45,199 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:45,199 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:45,199 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
2017-10-24 11:23:45,199 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:45,200 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
2017-10-24 11:23:45,200 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:45,203 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateUsrAsk
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
- tis.private.nim: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
- tis.shared.qud: stackset([?X.goal(X)])
+ tis.shared.qud: stackset([?X.say_step(X), ?X.goal(X)])
?                              ++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:45,203 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:45,203 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:45,206 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateISSUES2
-- BEGIN TIS changes --
- tis.shared.goals: stackset([resolve(?X.say_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                                                      --------------------------
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 11:23:45,206 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:45,206 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:45,213 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: findIssuePlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                                                 -------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.plan: Stack([findout(?X.goal(X))])
?                          ^ ^^^ ^    ^^ ^
+ tis.private.plan: Stack([device_query(?X.say_step(X))])
?                          ^^^ ^^^^ ^^^    ^ ^^^^^^
-- END TIS changes --
2017-10-24 11:23:45,214 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:45,214 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:45,214 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:45,214 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:45,214 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:45,214 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:45,215 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:45,215 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:45,215 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:45,215 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:45,218 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {}
+ tis.private.bel: {say_step("0")}
?                   +++++++++++++
- tis.private.plan: Stack([device_query(?X.say_step(X))])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 11:23:45,218 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:45,218 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:45,218 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:45,218 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:45,221 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.say_step(X), ?X.goal(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:23:45,221 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:45,221 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:45,221 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:45,221 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:45,221 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:45,222 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None)
2017-10-24 11:23:45,222 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:23:45,222 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: select
2017-10-24 11:23:45,223 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837025.17
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:45,223 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:23:45,227 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                --- ^ --------------
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^^^
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.bel: {say_step("0")}
?                           +++++++++++++
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      +++++++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 11:23:45,228 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:45,230 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                                                 +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:45,230 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:45,234 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
-- END TIS changes --
2017-10-24 11:23:45,234 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:45,236 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                         ---     ---- ^^^ ^^
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
?                                               ^^^^^^^^^^^^^ ^^^^^^
- tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:45,237 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:45,237 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:45,237 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:23:45,239 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:45,239 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:23:45,239 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:23:45,242 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 11:23:45,242 - session_2017-10-24T11_20_24_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')])
2017-10-24 11:23:45,242 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:45,243 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None))
2017-10-24 11:23:45,243 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None)
2017-10-24 11:23:45,243 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": "tell me what to do", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 11:23:45,244 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:45,244 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None))
2017-10-24 11:23:45,244 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:23:45,244 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "0"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:45,246 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:45,246 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)))
2017-10-24 11:23:45,246 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:45,247 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:23:45,247 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:45,247 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:45,248 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:45,248 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("0")), ddd_name=u'recipehelp'), facts={say_step("0")})
2017-10-24 11:23:45,249 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:23:45,249 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:23:45,250 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move Move(answer(say_step("0")), ddd_name=u'recipehelp') generated as u'Ok 0.'
2017-10-24 11:23:45,250 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None)
2017-10-24 11:23:45,251 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:45,252 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:23:45,253 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:45,253 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:23:45,254 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')])
2017-10-24 11:23:45,254 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("0")), ddd_name=u'recipehelp'), facts={say_step("0")})
2017-10-24 11:23:45,254 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:23:45,255 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.Popup instance at 0x7f0b0003eab8>]
2017-10-24 11:23:45,255 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f0b0003eab8>], sender=GuiBackend, reason=None)
2017-10-24 11:23:45,255 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posted event
2017-10-24 11:23:45,255 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None))
2017-10-24 11:23:45,255 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None)
2017-10-24 11:23:45,255 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok 0."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:23:45,256 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:45,256 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:23:45,256 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:23:45,256 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok 0."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:23:45,257 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:45,257 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f0b0003eab8>], sender=GuiBackend, reason=None))
2017-10-24 11:23:45,257 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f0b0003eab8>], sender=GuiBackend, reason=None)
2017-10-24 11:23:45,258 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok 0."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:23:45,258 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:45,258 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:45,267 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok 0."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:23:45,267 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:45,268 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok 0.], sender=TextOutputComponent, reason=None))
2017-10-24 11:23:45,268 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok 0.], sender=TextOutputComponent, reason=None)
2017-10-24 11:23:45,269 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:23:45,269 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:23:45,269 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:23:45,269 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:23:45,269 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None))
2017-10-24 11:23:45,271 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837025.27
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:45,271 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:45,271 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:45,271 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:45,278 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
?            ^^
- tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:23:45,278 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:45,278 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:45,280 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:45,281 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:45,281 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:45,281 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:45,281 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:45,281 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:45,281 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:45,281 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:45,281 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:45,281 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:45,281 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:45,281 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:45,284 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {say_step("0")}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:23:45,285 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:45,285 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:45,288 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {say_step("0")}
+ tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
- tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             -------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 11:23:45,288 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:45,288 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:45,288 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:45,288 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:45,288 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:45,288 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:45,288 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:45,288 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:45,288 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:45,288 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:45,289 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:45,289 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:45,289 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:45,289 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:45,289 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:45,289 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:45,289 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:45,290 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:45,290 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:45,292 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 11:23:45,292 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:23:45,292 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:23:45,292 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None))
2017-10-24 11:23:45,293 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:23:45,293 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "0"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:45,294 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:45,294 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 11:23:45,294 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:23:45,294 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:23:45,295 - session_2017-10-24T11_20_24_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f0b00066bd8>:1.0
2017-10-24 11:23:45,295 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:46,295 - session_2017-10-24T11_20_24_0 - DEBUG - Timeout fired
2017-10-24 11:23:46,296 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:23:46,296 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:23:46,296 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:23:46,296 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:23:46,297 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837026.3
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:46,297 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:46,297 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:46,300 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:46,300 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:46,304 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
-- END TIS changes --
2017-10-24 11:23:46,304 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:46,304 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:46,306 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:46,306 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:46,306 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:46,306 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:46,306 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:46,307 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:46,307 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:46,307 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:46,307 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:23:46,307 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:46,307 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:23:46,307 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:46,307 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:46,308 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:46,308 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:46,308 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:46,308 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:46,308 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:46,308 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:46,308 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:46,308 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:46,308 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:46,312 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:23:46,312 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:46,312 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:46,315 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {say_step("0")}
?                   -------------
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 11:23:46,316 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:46,316 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:46,316 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:46,316 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:46,316 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:46,316 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:46,317 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:46,317 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:46,317 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:46,317 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:46,317 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: select
2017-10-24 11:23:46,318 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837026.3
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:46,318 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:23:46,322 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^  ^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                +++ ^^^^ +++ ^^^^^^^
- tis.private.tmp.sys.bel: {say_step("0")}
?                           -------------
+ tis.private.tmp.sys.bel: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      -------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:46,322 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:46,325 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:46,325 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:46,327 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:23:46,327 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:46,330 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:46,330 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:46,330 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:46,330 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:23:46,333 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:46,333 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:23:46,333 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:23:46,335 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 11:23:46,336 - session_2017-10-24T11_20_24_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:23:46,336 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:23:47,736 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "tell me what to do"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:23:47,736 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:47,736 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None))
2017-10-24 11:23:47,736 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:47,737 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:47,737 - session_2017-10-24T11_20_24_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "tell me what to do"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:23:47,737 - session_2017-10-24T11_20_24_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:23:47,738 - session_2017-10-24T11_20_24_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 11:23:47,739 - session_2017-10-24T11_20_24_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])} for DDD 'recipehelp'
2017-10-24 11:23:47,739 - session_2017-10-24T11_20_24_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
2017-10-24 11:23:47,739 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:23:47,739 - session_2017-10-24T11_20_24_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AskMove": {"_type": "ask", "_ddd_name": "recipehelp", "_content": {"445f2b7f7189027ce75dac332c96dde0.WhQuestion": {"_type": "WHQ", "_content": {"24b0f339529d53d987534676834bafa7.LambdaAbstractedPredicateProposition": {"_ontology_name": "RecipehelpOntology", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.BuiltinSort": {"_dynamic": false, "_name": "string"}}, "name": "say_step", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "tell me what to do", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "tell me what to do"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "tell me what to do", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:23:47,739 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:23:47,740 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:23:47,740 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:47,740 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:47,740 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:47,741 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 11:23:47,741 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:23:47,741 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:23:47,742 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:47,742 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:47,743 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:47,743 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:23:47,743 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:23:47,743 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:23:47,743 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:23:47,743 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 11:23:47,744 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 11:23:47,744 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:23:47,744 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 11:23:47,744 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:23:47,745 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:47,747 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:47,747 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:23:47,747 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:23:47,747 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:23:47,747 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:23:47,747 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:23:47,747 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:23:47,748 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b0003e8c0>]
2017-10-24 11:23:47,749 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b0003e8c0>], sender=GuiBackend, reason=None)
2017-10-24 11:23:47,749 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posted event
2017-10-24 11:23:47,749 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None))
2017-10-24 11:23:47,749 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:23:47,749 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:23:47,749 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:23:47,749 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 11:23:47,750 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:47,750 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 11:23:47,750 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:23:47,751 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:23:47,751 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:47,751 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b0003e8c0>], sender=GuiBackend, reason=None))
2017-10-24 11:23:47,752 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f0b0003e8c0>], sender=GuiBackend, reason=None)
2017-10-24 11:23:47,752 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:23:47,752 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:47,753 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:47,781 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:23:47,782 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:47,782 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 11:23:47,782 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 11:23:47,782 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:23:47,782 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:23:47,783 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:23:47,783 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:23:47,783 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 11:23:47,784 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837027.78
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:47,784 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:47,784 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:47,785 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:47,788 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:23:47,789 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:47,789 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:47,791 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:47,791 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:47,791 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:47,791 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:47,791 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:47,792 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:47,792 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:47,792 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:47,792 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:47,792 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:47,792 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:47,792 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:47,797 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:23:47,797 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:47,797 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:47,797 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:47,797 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:47,798 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:47,801 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 11:23:47,801 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:47,801 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:47,801 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:47,801 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:47,801 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:47,802 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:47,802 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:47,802 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:47,802 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:47,802 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:47,802 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:47,802 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:47,802 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:47,802 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:47,802 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:47,802 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:47,803 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:47,803 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:47,803 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:47,803 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:47,803 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:47,806 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 11:23:47,806 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:47,806 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:47,806 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:23:47,806 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:47,806 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:47,807 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:47,807 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:23:47,807 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:47,808 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:23:47,808 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:47,809 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:47,809 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:23:47,809 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:47,810 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837027.81
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:47,810 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:47,813 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
-- END TIS changes --
2017-10-24 11:23:47,813 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:47,818 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
?                                                                                                                              ^
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
?                                                                                                                              ^
-- END TIS changes --
2017-10-24 11:23:47,818 - session_2017-10-24T11_20_24_0 - INFO - hypotheses reranking had no effect
2017-10-24 11:23:47,818 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:47,823 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 11:23:47,823 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:47,829 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:23:47,830 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:47,830 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:47,833 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:47,833 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:47,833 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:47,837 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:47,837 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:47,837 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:47,837 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:47,837 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:47,837 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:47,837 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
2017-10-24 11:23:47,837 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:47,838 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
2017-10-24 11:23:47,838 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:47,841 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateUsrAsk
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
- tis.private.nim: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
- tis.shared.qud: stackset([?X.goal(X)])
+ tis.shared.qud: stackset([?X.say_step(X), ?X.goal(X)])
?                              ++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:47,842 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:47,842 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:47,844 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateISSUES2
-- BEGIN TIS changes --
- tis.shared.goals: stackset([resolve(?X.say_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                                                      --------------------------
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 11:23:47,845 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:47,845 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:47,849 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: findIssuePlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                                                 -------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.plan: Stack([findout(?X.goal(X))])
?                          ^ ^^^ ^    ^^ ^
+ tis.private.plan: Stack([device_query(?X.say_step(X))])
?                          ^^^ ^^^^ ^^^    ^ ^^^^^^
-- END TIS changes --
2017-10-24 11:23:47,849 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:47,849 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:47,849 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:47,849 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:47,850 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:47,850 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:47,850 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:47,850 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:47,850 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:47,850 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:47,853 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {}
+ tis.private.bel: {say_step("0")}
?                   +++++++++++++
- tis.private.plan: Stack([device_query(?X.say_step(X))])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 11:23:47,853 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:47,853 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:47,853 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:47,853 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:47,856 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.say_step(X), ?X.goal(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:23:47,856 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:47,856 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:47,856 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:47,856 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:47,856 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:47,856 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None)
2017-10-24 11:23:47,857 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:23:47,857 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: select
2017-10-24 11:23:47,858 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837027.81
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:47,858 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:23:47,863 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                --- ^ --------------
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^^^
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.bel: {say_step("0")}
?                           +++++++++++++
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      +++++++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 11:23:47,863 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:47,865 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                                                 +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:47,865 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:47,868 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
-- END TIS changes --
2017-10-24 11:23:47,868 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:47,871 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                         ---     ---- ^^^ ^^
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
?                                               ^^^^^^^^^^^^^ ^^^^^^
- tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:47,871 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:47,871 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:47,872 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:23:47,874 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:47,874 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:23:47,874 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:23:47,877 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 11:23:47,877 - session_2017-10-24T11_20_24_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')])
2017-10-24 11:23:47,878 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:47,878 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None))
2017-10-24 11:23:47,878 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None)
2017-10-24 11:23:47,878 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": "tell me what to do", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 11:23:47,878 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:47,879 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None))
2017-10-24 11:23:47,879 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:23:47,879 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "0"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:47,880 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:47,880 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)))
2017-10-24 11:23:47,880 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:23:47,881 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:23:47,881 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:47,881 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:47,882 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:47,883 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("0")), ddd_name=u'recipehelp'), facts={say_step("0")})
2017-10-24 11:23:47,883 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:23:47,883 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:23:47,883 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule: Move Move(answer(say_step("0")), ddd_name=u'recipehelp') generated as u'Ok 0.'
2017-10-24 11:23:47,884 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None)
2017-10-24 11:23:47,885 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:47,886 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:23:47,887 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:47,887 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:23:47,887 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')])
2017-10-24 11:23:47,887 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("0")), ddd_name=u'recipehelp'), facts={say_step("0")})
2017-10-24 11:23:47,887 - session_2017-10-24T11_20_24_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:23:47,888 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.Popup instance at 0x7f0b00066638>]
2017-10-24 11:23:47,888 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f0b00066638>], sender=GuiBackend, reason=None)
2017-10-24 11:23:47,888 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posted event
2017-10-24 11:23:47,888 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None))
2017-10-24 11:23:47,889 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None)
2017-10-24 11:23:47,889 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok 0."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:23:47,889 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:47,889 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:23:47,890 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:23:47,890 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok 0."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:23:47,890 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:47,891 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f0b00066638>], sender=GuiBackend, reason=None))
2017-10-24 11:23:47,891 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f0b00066638>], sender=GuiBackend, reason=None)
2017-10-24 11:23:47,891 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok 0."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:23:47,892 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:47,892 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:47,913 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok 0."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:23:47,913 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:47,913 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok 0.], sender=TextOutputComponent, reason=None))
2017-10-24 11:23:47,914 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok 0.], sender=TextOutputComponent, reason=None)
2017-10-24 11:23:47,914 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:23:47,914 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:23:47,914 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:23:47,914 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:23:47,915 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None))
2017-10-24 11:23:47,916 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837027.92
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:47,916 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:47,916 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:47,916 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:47,922 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
?            ^^
- tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:23:47,922 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:47,923 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:47,925 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:47,925 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:47,925 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:47,925 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:47,925 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:47,925 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:47,926 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:47,926 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:47,926 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:47,926 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:47,926 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:23:47,926 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:47,930 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {say_step("0")}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:23:47,930 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:23:47,930 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:47,933 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {say_step("0")}
+ tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
- tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             -------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 11:23:47,933 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:23:47,933 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:47,933 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:47,933 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:47,934 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:47,934 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:47,934 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:47,934 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:47,934 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:47,934 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:47,934 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:47,934 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:47,934 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:47,934 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:47,935 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:47,935 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:47,935 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:47,935 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:47,935 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:47,938 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 11:23:47,938 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:23:47,938 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:23:47,939 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None))
2017-10-24 11:23:47,939 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:23:47,939 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "0"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:47,939 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:47,939 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 11:23:47,940 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:23:47,940 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:23:47,940 - session_2017-10-24T11_20_24_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f0b0004ee18>:1.0
2017-10-24 11:23:47,941 - session_2017-10-24T11_20_24_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:23:48,941 - session_2017-10-24T11_20_24_0 - DEBUG - Timeout fired
2017-10-24 11:23:48,941 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:23:48,941 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:23:48,941 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:23:48,941 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:23:48,942 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837028.94
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:48,943 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:23:48,943 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:23:48,945 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:48,945 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:23:48,949 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
-- END TIS changes --
2017-10-24 11:23:48,949 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:23:48,949 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:23:48,951 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:48,951 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:23:48,951 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:23:48,952 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:23:48,952 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:23:48,952 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:23:48,952 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:23:48,952 - session_2017-10-24T11_20_24_0 - INFO - BEGIN integrate_moves
2017-10-24 11:23:48,952 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:23:48,952 - session_2017-10-24T11_20_24_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:23:48,952 - session_2017-10-24T11_20_24_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:23:48,952 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:integrate
2017-10-24 11:23:48,952 - session_2017-10-24T11_20_24_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:23:48,952 - session_2017-10-24T11_20_24_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:23:48,952 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:48,953 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:48,953 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:48,953 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:23:48,953 - session_2017-10-24T11_20_24_0 - INFO - breaking out of accommodate
2017-10-24 11:23:48,953 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:23:48,953 - session_2017-10-24T11_20_24_0 - INFO - END integrate_moves
2017-10-24 11:23:48,953 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:48,957 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:23:48,957 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:48,957 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:48,961 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {say_step("0")}
?                   -------------
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 11:23:48,961 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:48,961 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:48,961 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:48,961 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:23:48,961 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:23:48,962 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:23:48,962 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:23:48,962 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:23:48,962 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:23:48,962 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:48,962 - session_2017-10-24T11_20_24_0 - INFO - running ISU module: select
2017-10-24 11:23:48,963 - session_2017-10-24T11_20_24_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f0b027a2fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f0b0009a210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508837028.94
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:23:48,963 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:23:48,968 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^  ^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                +++ ^^^^ +++ ^^^^^^^
- tis.private.tmp.sys.bel: {say_step("0")}
?                           -------------
+ tis.private.tmp.sys.bel: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      -------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:48,968 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_action
2017-10-24 11:23:48,971 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:23:48,971 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:48,973 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:23:48,974 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:48,977 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:23:48,977 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:23:48,977 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:select_move
2017-10-24 11:23:48,977 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:23:48,979 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:23:48,979 - session_2017-10-24T11_20_24_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:23:48,979 - session_2017-10-24T11_20_24_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:23:48,981 - session_2017-10-24T11_20_24_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 11:23:48,982 - session_2017-10-24T11_20_24_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:23:48,982 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:23:49,868 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:23:49,869 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(STOP, None, sender=Backend, reason=None))
2017-10-24 11:23:49,869 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:23:49,869 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:23:49,869 - session_2017-10-24T11_20_24_0 - DEBUG - InterpretModule posts Event(STOPPED, None, sender=InterpretModule, reason=None)
2017-10-24 11:23:49,870 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:23:49,870 - session_2017-10-24T11_20_24_0 - DEBUG - DmeModule posts Event(STOPPED, None, sender=DmeModule, reason=None)
2017-10-24 11:23:49,870 - session_2017-10-24T11_20_24_0 - DEBUG - DeviceManager handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:23:49,870 - session_2017-10-24T11_20_24_0 - DEBUG - DeviceManager posts Event(STOPPED, None, sender=DeviceManager, reason=None)
2017-10-24 11:23:49,871 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:23:49,871 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule posts Event(STOPPED, None, sender=GenerateModule, reason=None)
2017-10-24 11:23:49,871 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:23:49,871 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend posts Event(STOPPED, None, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:23:49,871 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:23:49,871 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend posts Event(STOPPED, None, sender=GuiBackend, reason=None)
2017-10-24 11:23:49,871 - session_2017-10-24T11_20_24_0 - DEBUG - CogloadModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:23:49,871 - session_2017-10-24T11_20_24_0 - DEBUG - CogloadModule posts Event(STOPPED, None, sender=CogloadModule, reason=None)
2017-10-24 11:23:49,871 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:23:49,872 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:23:49,872 - session_2017-10-24T11_20_24_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:23:49,872 - session_2017-10-24T11_20_24_0 - DEBUG - Sent.
2017-10-24 11:23:49,872 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 11:23:49,873 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:23:49,873 - session_2017-10-24T11_20_24_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:23:49,873 - session_2017-10-24T11_20_24_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:49,873 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:49,874 - session_2017-10-24T11_20_24_0 - DEBUG - GenerateModule ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:49,875 - session_2017-10-24T11_20_24_0 - DEBUG - IndependentGuiBackend ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:49,876 - session_2017-10-24T11_20_24_0 - DEBUG - GuiBackend ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:23:49,876 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=InterpretModule, reason=None))
2017-10-24 11:23:49,876 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=InterpretModule, reason=None)
2017-10-24 11:23:49,876 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=DmeModule, reason=None))
2017-10-24 11:23:49,876 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=DmeModule, reason=None)
2017-10-24 11:23:49,876 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=DeviceManager, reason=None))
2017-10-24 11:23:49,876 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=DeviceManager, reason=None)
2017-10-24 11:23:49,876 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=GenerateModule, reason=None))
2017-10-24 11:23:49,877 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=GenerateModule, reason=None)
2017-10-24 11:23:49,877 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:23:49,877 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:23:49,877 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=GuiBackend, reason=None))
2017-10-24 11:23:49,877 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=GuiBackend, reason=None)
2017-10-24 11:23:49,877 - session_2017-10-24T11_20_24_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=CogloadModule, reason=None))
2017-10-24 11:23:49,877 - session_2017-10-24T11_20_24_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=CogloadModule, reason=None)

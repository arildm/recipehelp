2017-10-24 16:56:00,014 - session_2017-10-24T16_56_00_0 - DEBUG - Backend()
2017-10-24 16:56:00,015 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.initialize()
2017-10-24 16:56:00,046 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.add_module(DmeModule, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7ff5e9445f10>>, False])
2017-10-24 16:56:00,046 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.add_module(GenerateModule, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7ff5e9445f10>>, 'eng'])
2017-10-24 16:56:00,046 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.add_module(DeviceManager, args=[])
2017-10-24 16:56:00,047 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.add_module(CogloadModule, args=[])
2017-10-24 16:56:00,047 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, __init__) (previous state was None)
2017-10-24 16:56:00,047 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.add_module(GuiBackend, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7ff5e9445f10>>, True, 'disabled'])
2017-10-24 16:56:00,047 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.add_module(IndependentGuiBackend, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7ff5e9445f10>>])
2017-10-24 16:56:00,047 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.add_module(InterpretModule, args=[<bound method Backend.get_device_manager of <tdm.backend.Backend object at 0x7ff5e9445f10>>, <bound method Backend.get_tis of <tdm.backend.Backend object at 0x7ff5e9445f10>>, 'eng', False, True])
2017-10-24 16:56:00,047 - session_2017-10-24T16_56_00_0 - DEBUG - Backend initialized
2017-10-24 16:56:00,047 - session_2017-10-24T16_56_00_0 - DEBUG - Backend started in directory '/home/gusmatssar/recipedialogue/tdm'
2017-10-24 16:56:00,047 - session_2017-10-24T16_56_00_0 - DEBUG - Backend uses TDM version '5.0.0'
2017-10-24 16:56:00,047 - session_2017-10-24T16_56_00_0 - DEBUG - Backend uses backend config {u'active_ddd': u'recipehelp', u'ddds': [u'recipehelp'], u'asr': u'none', u'use_recognition_profile': False, u'use_word_list_correction': False, u'supported_languages': [u'eng'], u'repeat_questions': False}
2017-10-24 16:56:00,047 - session_2017-10-24T16_56_00_0 - DEBUG - Backend uses language 'eng'
2017-10-24 16:56:00,047 - session_2017-10-24T16_56_00_0 - DEBUG - running module InterpretModule
2017-10-24 16:56:00,048 - session_2017-10-24T16_56_00_0 - DEBUG - running module DmeModule
2017-10-24 16:56:00,049 - session_2017-10-24T16_56_00_0 - DEBUG - running module DeviceManager
2017-10-24 16:56:00,049 - session_2017-10-24T16_56_00_0 - DEBUG - running module GenerateModule
2017-10-24 16:56:00,049 - session_2017-10-24T16_56_00_0 - DEBUG - running module IndependentGuiBackend
2017-10-24 16:56:00,050 - session_2017-10-24T16_56_00_0 - DEBUG - running module GuiBackend
2017-10-24 16:56:00,050 - session_2017-10-24T16_56_00_0 - DEBUG - running module CogloadModule
2017-10-24 16:56:00,050 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:00,051 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:00,051 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(REGISTER_BACKEND, None, sender=Backend, reason=None))
2017-10-24 16:56:00,051 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(REGISTER_BACKEND, None, sender=Backend, reason=None)
2017-10-24 16:56:00,051 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "Backend", "_reason": null, "event_type": "REGISTER_BACKEND"}
2017-10-24 16:56:00,052 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:00,052 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:00,079 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": null, "_sender": "Frontend", "_reason": null, "event_type": "FRONTEND_READY"}
2017-10-24 16:56:00,080 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:00,080 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FRONTEND_READY, None, sender=Frontend, reason=None))
2017-10-24 16:56:00,081 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FRONTEND_READY, None, sender=Frontend, reason=None)
2017-10-24 16:56:00,081 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(BACKEND_READY, None, sender=Backend, reason=None))
2017-10-24 16:56:00,082 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(BACKEND_READY, None, sender=Backend, reason=None)
2017-10-24 16:56:00,082 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "Backend", "_reason": null, "event_type": "BACKEND_READY"}
2017-10-24 16:56:00,082 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:00,082 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:00,086 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": null, "_sender": "Frontend", "_reason": null, "event_type": "START"}
2017-10-24 16:56:00,086 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:00,086 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(START, None, sender=Frontend, reason=None))
2017-10-24 16:56:00,086 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:56:00,086 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:56:00,086 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:56:00,087 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 16:56:00,087 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(START, None, sender=Frontend, reason=None))
2017-10-24 16:56:00,088 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856960.09
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(START, None, sender=Frontend, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: None
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([do(top)])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: None
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:00,088 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:00,088 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:00,088 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:00,090 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:00,090 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:00,091 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:00,092 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:00,092 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:00,093 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:00,093 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:00,093 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:00,093 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:00,093 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:00,093 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:00,093 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:56:00,093 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:00,093 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:56:00,093 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:00,093 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:00,094 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:00,094 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:00,094 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:00,094 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:00,094 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:00,094 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:00,094 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:00,094 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:00,094 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:00,095 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:00,098 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([do(top)])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 16:56:00,098 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:00,100 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 16:56:00,100 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:00,100 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:00,100 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:00,100 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:00,101 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:00,101 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:00,101 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:00,101 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:00,101 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:00,101 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:00,101 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:00,102 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856960.09
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(START, None, sender=Frontend, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: None
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: None
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:00,102 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:00,106 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.goals: stackset([])
+ tis.private.tmp.sys.goals: stackset([perform(top)])
?                                      ++++++++++++
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:00,106 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:00,108 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.goal(X))])
?                                                                  +++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:00,109 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:00,111 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
?                                       +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.goal(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 16:56:00,111 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:00,114 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
?                                                              +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:00,114 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:00,114 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:00,114 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:00,116 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:00,116 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:00,116 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:00,118 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: None
?                       ^^^^
+ tis.timeout.duration: 5.0
?                       ^^^
-- END TIS changes --
2017-10-24 16:56:00,118 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:00,119 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None))
2017-10-24 16:56:00,119 - session_2017-10-24T16_56_00_0 - DEBUG - DeviceManager handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:56:00,119 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:56:00,119 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:56:00,119 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:56:00,119 - session_2017-10-24T16_56_00_0 - DEBUG - CogloadModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:56:00,120 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None))
2017-10-24 16:56:00,120 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 16:56:00,120 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 16:56:00,120 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 16:56:00,120 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"ddd_name": "recipehelp", "language_code": "eng"}, "_sender": "DmeModule", "_reason": null, "event_type": "SET_DDD"}
2017-10-24 16:56:00,121 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:00,121 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:56:00,121 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:00,121 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:00,122 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:00,123 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None)))
2017-10-24 16:56:00,123 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None))
2017-10-24 16:56:00,123 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:00,123 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:00,123 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:00,124 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:00,124 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 16:56:00,124 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 16:56:00,124 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 16:56:00,125 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:00,125 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 16:56:00,125 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 16:56:00,125 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:00,126 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 16:56:00,126 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 16:56:00,127 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:00,128 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:00,128 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:00,128 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:00,128 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 16:56:00,128 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 16:56:00,129 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 16:56:00,129 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:00,129 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message []
2017-10-24 16:56:00,129 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 16:56:00,129 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:00,129 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 16:56:00,129 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 16:56:00,130 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:00,130 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:00,130 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 16:56:00,130 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 16:56:00,130 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:00,131 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:00,131 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:00,167 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:00,168 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:00,168 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:00,168 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:00,168 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:00,168 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:56:00,168 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:56:00,168 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:56:00,169 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 16:56:00,170 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856960.17
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:00,170 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:00,170 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:00,170 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:00,173 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: None
?                        ^^^^
+ tis.shared.lu.speaker: SYS
?                        ^^^
-- END TIS changes --
2017-10-24 16:56:00,173 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:00,173 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:00,176 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:00,176 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:00,176 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:00,176 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:00,176 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:00,176 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:00,176 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:00,177 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:00,177 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:00,177 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:00,177 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:00,177 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:00,181 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:56:00,181 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:00,181 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:00,181 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:00,181 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:00,181 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:00,184 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 16:56:00,184 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:00,184 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:00,185 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:00,185 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:00,185 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:00,185 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:00,185 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:00,185 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:00,185 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:00,185 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:00,185 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:00,185 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:00,186 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:00,186 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:00,186 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:00,186 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:00,186 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:00,187 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:00,187 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:00,187 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:00,187 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:00,189 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:00,189 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:00,190 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:00,190 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:56:00,190 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:00,190 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:00,191 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:00,191 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:56:00,191 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:00,191 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:00,192 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:04,875 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "jgjgj"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:56:04,875 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:04,875 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: jgjgj}], sender=TextInputComponent, reason=None))
2017-10-24 16:56:04,875 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: jgjgj}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:04,875 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: jgjgj}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:04,876 - session_2017-10-24T16_56_00_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "jgjgj"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:56:04,876 - session_2017-10-24T16_56_00_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:56:04,881 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Found no valid exact interpretations, returning an empty result.
2017-10-24 16:56:04,881 - session_2017-10-24T16_56_00_0 - DEBUG - Result from 'ExactInterpreter': []
2017-10-24 16:56:04,881 - session_2017-10-24T16_56_00_0 - DEBUG - Starting 'RobustInterpreter'
2017-10-24 16:56:04,881 - session_2017-10-24T16_56_00_0 - DEBUG - DddInterpreter.interpret_partially: timeout=1.99471902847
2017-10-24 16:56:04,883 - session_2017-10-24T16_56_00_0 - DEBUG - robust grammatical interpretations: []
2017-10-24 16:56:04,884 - session_2017-10-24T16_56_00_0 - DEBUG - _remove_literals(): Got no valid interpretations of partial utterances
2017-10-24 16:56:04,884 - session_2017-10-24T16_56_00_0 - DEBUG - RobustInterpreter: Partial interpretation failed.
2017-10-24 16:56:04,884 - session_2017-10-24T16_56_00_0 - DEBUG - RobustInterpreter: use_word_list_correction disabled, skipping interpretation with word correction
2017-10-24 16:56:04,884 - session_2017-10-24T16_56_00_0 - DEBUG - RobustInterpreter: Found no robust interpretations, returning an empty result.
2017-10-24 16:56:04,884 - session_2017-10-24T16_56_00_0 - DEBUG - Result from 'RobustInterpreter': []
2017-10-24 16:56:04,884 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {}, sender=InterpretModule, reason=None)
2017-10-24 16:56:04,884 - session_2017-10-24T16_56_00_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:56:04,885 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: jgjgj}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:04,885 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {}, sender=InterpretModule, reason=None))
2017-10-24 16:56:04,885 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {}, sender=InterpretModule, reason=None)
2017-10-24 16:56:04,885 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:04,885 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:04,885 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 16:56:04,886 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:04,886 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 16:56:04,886 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 16:56:04,886 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 16:56:04,887 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 16:56:04,887 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 16:56:04,888 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856964.89
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: jgjgj
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:04,888 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:04,888 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:04,890 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:04,890 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:04,894 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:56:04,895 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:04,895 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:04,897 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:04,897 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:04,897 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:04,897 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:04,897 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:04,897 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:04,897 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:04,897 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:04,897 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:56:04,897 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:04,898 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:56:04,898 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:04,898 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:04,898 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:04,898 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:04,898 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:04,898 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:04,898 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:04,898 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:04,898 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:04,899 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:04,899 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:04,899 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:04,899 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:04,901 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.goal(X)])
?                           ----------
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:56:04,902 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:04,902 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:04,902 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:04,902 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:04,902 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:04,902 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:04,902 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:04,903 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856964.89
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: jgjgj
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:04,903 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:04,906 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                      ++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:04,906 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:04,908 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: reraiseIssue
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise)), raise(?X.goal(X))])
-- END TIS changes --
2017-10-24 16:56:04,908 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:04,911 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmSemNeg
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg)])
-- END TIS changes --
2017-10-24 16:56:04,911 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:04,911 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:04,914 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise)])
?                                                                                           ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise)), raise(?X.goal(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, raise(?X.goal(X))])
-- END TIS changes --
2017-10-24 16:56:04,914 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:04,917 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))])
?                                                                                                                 +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, raise(?X.goal(X))])
?                                 -------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:04,917 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:04,917 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:04,917 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:04,919 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:04,919 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:04,919 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:04,921 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:04,921 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:04,922 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 16:56:04,922 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:56:04,922 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:04,922 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:04,923 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:04,924 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None)))
2017-10-24 16:56:04,924 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 16:56:04,924 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:04,925 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:04,926 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:04,927 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:04,928 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:per*pos:"jgjgj"), facts={})
2017-10-24 16:56:04,928 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:per*pos:"jgjgj")
2017-10-24 16:56:04,928 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:sem*neg), facts={})
2017-10-24 16:56:04,928 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:sem*neg)
2017-10-24 16:56:04,929 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise), facts={})
2017-10-24 16:56:04,929 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise)
2017-10-24 16:56:04,929 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 16:56:04,929 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:04,929 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:per*pos:"jgjgj")
2017-10-24 16:56:04,929 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:per*pos:"jgjgj") generated as u'I heard you say jgjgj.'
2017-10-24 16:56:04,930 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:sem*neg)
2017-10-24 16:56:04,930 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:sem*neg) generated as u"I don't understand."
2017-10-24 16:56:04,930 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise)
2017-10-24 16:56:04,930 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise) generated as u'So,'
2017-10-24 16:56:04,930 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:04,931 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 16:56:04,931 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say jgjgj., I don't understand., So,, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 16:56:04,932 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:04,934 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:04,934 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:04,935 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:04,935 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:per*pos:"jgjgj"), facts={})
2017-10-24 16:56:04,935 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:per*pos:"jgjgj")
2017-10-24 16:56:04,935 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:sem*neg), facts={})
2017-10-24 16:56:04,935 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:sem*neg)
2017-10-24 16:56:04,935 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise), facts={})
2017-10-24 16:56:04,935 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise)
2017-10-24 16:56:04,935 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 16:56:04,935 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:04,936 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message []
2017-10-24 16:56:04,936 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 16:56:04,936 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:04,936 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say jgjgj., I don't understand., So,, What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 16:56:04,936 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say jgjgj., I don't understand., So,, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 16:56:04,936 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["I heard you say jgjgj.", "I don't understand.", "So,", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:04,937 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:04,937 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 16:56:04,937 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 16:56:04,938 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:04,938 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:04,939 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:04,948 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["I heard you say jgjgj.", "I don't understand.", "So,", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:04,948 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:04,948 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [I heard you say jgjgj., I don't understand., So,, What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:04,948 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [I heard you say jgjgj., I don't understand., So,, What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:04,949 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:04,949 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [I heard you say jgjgj., I don't understand., So,, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:56:04,949 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [I heard you say jgjgj., I don't understand., So,, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:56:04,949 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [I heard you say jgjgj., I don't understand., So,, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:56:04,950 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [I heard you say jgjgj., I don't understand., So,, What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 16:56:04,951 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856964.95
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [I heard you say jgjgj., I don't understand., So,, What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: jgjgj
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:04,951 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:04,952 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:04,952 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:04,955 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
- tis.sys_turns: 0
?                ^
+ tis.sys_turns: 1
?                ^
-- END TIS changes --
2017-10-24 16:56:04,955 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:04,955 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:04,957 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:04,957 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:04,957 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:04,957 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:04,958 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:04,958 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:04,958 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:04,958 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:04,958 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:04,958 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:04,958 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:04,958 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:04,962 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                                         ^^^ ^^^^^^ ----                                       ----------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                                         ^^^ ^^
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:56:04,962 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:04,962 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:04,962 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:04,962 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:04,962 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:04,967 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
?                                                                               ++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:04,967 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:04,967 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:04,967 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:04,967 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:04,968 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:04,971 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0)}
?                                                                                                                             ++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:04,971 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:04,971 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:04,972 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:04,972 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:04,972 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:04,975 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?                                                                                                                                                                           ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 16:56:04,975 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:04,975 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:04,975 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:04,975 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:04,975 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:04,975 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:04,976 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:04,976 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:04,976 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:04,976 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:04,976 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:04,976 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:04,976 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:04,976 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:04,976 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:04,976 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:04,977 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:04,977 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:04,977 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:04,977 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:04,977 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:04,979 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:04,979 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:04,980 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [I heard you say jgjgj., I don't understand., So,, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:04,980 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:56:04,980 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:04,980 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:04,981 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:04,981 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [I heard you say jgjgj., I don't understand., So,, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:56:04,981 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [I heard you say jgjgj., I don't understand., So,, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:04,981 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [I heard you say jgjgj., I don't understand., So,, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:04,982 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:09,617 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to a step"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:56:09,618 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:09,618 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None))
2017-10-24 16:56:09,618 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:09,618 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:09,619 - session_2017-10-24T16_56_00_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to a step"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:56:09,619 - session_2017-10-24T16_56_00_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:56:09,622 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:56:09,622 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])} for DDD 'recipehelp'
2017-10-24 16:56:09,622 - session_2017-10-24T16_56_00_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
2017-10-24 16:56:09,622 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:56:09,623 - session_2017-10-24T16_56_00_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AskMove": {"_type": "ask", "_ddd_name": "recipehelp", "_content": {"445f2b7f7189027ce75dac332c96dde0.WhQuestion": {"_type": "WHQ", "_content": {"24b0f339529d53d987534676834bafa7.LambdaAbstractedPredicateProposition": {"_ontology_name": "RecipehelpOntology", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.BuiltinSort": {"_dynamic": false, "_name": "string"}}, "name": "go_to_step", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to a step", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to a step"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to a step", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:56:09,623 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:09,623 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:56:09,624 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:56:09,624 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:09,624 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:09,624 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 16:56:09,625 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:09,625 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 16:56:09,625 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:09,626 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:09,627 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:09,627 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:09,630 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856969.63
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 1
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:09,630 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:09,635 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
-- END TIS changes --
2017-10-24 16:56:09,636 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:09,642 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                 ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                 ^
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
?                                                                                                                                ^
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
?                                                                                                                                ^
-- END TIS changes --
2017-10-24 16:56:09,642 - session_2017-10-24T16_56_00_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:56:09,642 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:09,646 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 16:56:09,647 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:09,655 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
- tis.sys_turns: 1
?                ^
+ tis.sys_turns: 0
?                ^
-- END TIS changes --
2017-10-24 16:56:09,656 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:09,658 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:09,661 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:09,662 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:09,662 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:09,667 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([])
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
- tis.private.tmp.usr.plan: Stack([])
+ tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
- tis.private.tmp.usr.qud: stackset([])
+ tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                    ++++++++++
-- END TIS changes --
2017-10-24 16:56:09,667 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:09,667 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:09,667 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:09,667 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:09,667 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:09,667 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
2017-10-24 16:56:09,668 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:09,668 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
2017-10-24 16:56:09,668 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:09,672 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateUsrAsk
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
- tis.private.nim: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
- tis.shared.qud: stackset([?X.goal(X)])
+ tis.shared.qud: stackset([?X.go_to_step(X), ?X.goal(X)])
?                                ++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:09,673 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:09,673 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:09,676 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateISSUES2
-- BEGIN TIS changes --
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                                                        --------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 16:56:09,676 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:09,676 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:09,680 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: findIssuePlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                                                   - ^ ^ -----------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^ ^^
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 16:56:09,680 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:09,680 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:09,681 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:09,681 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:09,681 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:09,681 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:09,681 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:09,681 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:09,681 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:09,681 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:09,682 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:09,682 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:09,685 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.go_to_step(X), ?X.goal(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:56:09,685 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:09,685 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:09,686 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:09,686 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:09,686 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:09,686 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None)
2017-10-24 16:56:09,686 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:09,686 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:09,687 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856969.63
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.pm: {ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:09,687 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:09,692 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                             -----      ^^
+ tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                                                   ^^^^^^^^
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
+ tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 16:56:09,692 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:09,695 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                                                                                  +++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:09,696 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:09,699 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
-- END TIS changes --
2017-10-24 16:56:09,699 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:09,699 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:09,702 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.step_to_choose(X))])
-- END TIS changes --
2017-10-24 16:56:09,703 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:09,706 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
?                                                                                    +++++++++++++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.step_to_choose(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:09,706 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:09,706 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:09,706 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:09,709 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:09,709 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:09,709 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:09,711 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:09,712 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:09,712 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:09,712 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None))
2017-10-24 16:56:09,712 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None)
2017-10-24 16:56:09,713 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to a step", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:56:09,713 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:09,713 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:56:09,713 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:09,714 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:09,714 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:09,715 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:56:09,715 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:09,715 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:09,716 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:09,716 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:09,717 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:09,718 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={})
2017-10-24 16:56:09,718 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:56:09,718 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 16:56:09,718 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 16:56:09,718 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 16:56:09,718 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:09,718 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:56:09,718 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:56:09,719 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 16:56:09,719 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 16:56:09,719 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:09,720 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp') generated as u'Which step?'
2017-10-24 16:56:09,720 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None)
2017-10-24 16:56:09,721 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:09,723 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:09,723 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:09,724 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:09,724 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={})
2017-10-24 16:56:09,724 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:56:09,724 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 16:56:09,724 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 16:56:09,724 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 16:56:09,724 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:09,725 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message []
2017-10-24 16:56:09,725 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 16:56:09,725 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:09,725 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None))
2017-10-24 16:56:09,725 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None)
2017-10-24 16:56:09,725 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "", "Which step?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:09,726 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:09,726 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 16:56:09,726 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 16:56:09,726 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:09,727 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:09,727 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:09,735 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["", "", "Which step?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:09,736 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:09,736 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, , Which step?], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:09,736 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, , Which step?], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:09,736 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:09,736 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 16:56:09,736 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 16:56:09,736 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 16:56:09,737 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None))
2017-10-24 16:56:09,738 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856969.74
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.pm: {ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:09,738 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:09,738 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:09,738 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:09,746 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
?            ^^
- tis.shared.pm: {ICMMove(icm:per*pos:"jgjgj", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:09,746 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:09,746 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:09,749 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:09,749 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:09,749 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:09,749 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:09,749 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:09,749 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:09,749 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:09,749 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:09,750 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:09,750 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:09,750 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:09,750 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:09,753 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:56:09,754 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:09,754 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:09,754 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:09,754 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:09,754 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:09,758 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
?                                                                       +++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:09,758 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:09,758 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:09,759 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:09,759 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:09,759 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:09,762 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.step_to_choose(X)])
-- END TIS changes --
2017-10-24 16:56:09,763 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:09,763 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:09,763 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:09,763 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:09,764 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:09,764 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:09,764 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:09,764 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:09,764 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:09,764 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:09,764 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:09,764 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:09,764 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:09,764 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:09,765 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:09,765 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:09,765 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:09,765 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:09,765 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:09,765 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:09,766 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:09,768 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:09,768 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:09,768 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:09,768 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:56:09,768 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:09,769 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:09,769 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:09,769 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:56:09,770 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:09,770 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:09,770 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:12,587 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "step one"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:56:12,587 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:12,587 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None))
2017-10-24 16:56:12,588 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:12,588 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:12,588 - session_2017-10-24T16_56_00_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "step one"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:56:12,588 - session_2017-10-24T16_56_00_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:56:12,590 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:56:12,591 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])} for DDD 'recipehelp'
2017-10-24 16:56:12,591 - session_2017-10-24T16_56_00_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
2017-10-24 16:56:12,591 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:56:12,591 - session_2017-10-24T16_56_00_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "step one"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "step one", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.CustomSort": {"_ontology_name": "RecipehelpOntology", "_dynamic": false, "_name": "step"}}, "value": "step1"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "step one", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:56:12,591 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:12,592 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:56:12,592 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:56:12,592 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:12,592 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:12,592 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 16:56:12,593 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:12,593 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 16:56:12,593 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:12,594 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:12,594 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:12,594 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:12,596 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856972.59
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.step_to_choose(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:12,596 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:12,600 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
-- END TIS changes --
2017-10-24 16:56:12,600 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:12,605 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
- tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
-- END TIS changes --
2017-10-24 16:56:12,609 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^^
-- END TIS changes --
2017-10-24 16:56:12,610 - session_2017-10-24T16_56_00_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:56:12,610 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:12,613 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')])
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 16:56:12,614 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:12,618 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
-- END TIS changes --
2017-10-24 16:56:12,619 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:12,619 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:12,621 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:12,621 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:12,622 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:12,627 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                                        ^^
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                                                      +++++++++++++++++++++++++++++++  ^^^^^^^^
- tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
+ tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
- tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                       ^ ^^
+ tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
?                                       ^^^^^^ ^^^^^^^
-- END TIS changes --
2017-10-24 16:56:12,627 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:12,627 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:12,627 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:12,627 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:12,628 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:12,628 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
2017-10-24 16:56:12,628 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:12,628 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
2017-10-24 16:56:12,628 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:12,631 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {step_to_choose(step1)}
- tis.shared.com: {}
+ tis.shared.com: {step_to_choose(step1)}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
-- END TIS changes --
2017-10-24 16:56:12,631 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:12,631 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:12,635 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {step_to_choose(step1)}
+ tis.shared.com: {step_to_choose(step1), resolved(?X.step_to_choose(X))}
- tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ------------------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 16:56:12,635 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:12,639 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
?                          -------------------------------
+ tis.private.plan: Stack([device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 16:56:12,639 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:12,639 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:12,639 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:12,640 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:12,640 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:12,640 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:12,640 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:12,641 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:12,641 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:12,641 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:12,641 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:12,645 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {}
+ tis.private.bel: {go_to_step("chose step1")}
- tis.private.plan: Stack([device_query(?X.go_to_step(X)), forget(step_to_choose)])
?                          --------------------------------
+ tis.private.plan: Stack([forget(step_to_choose)])
-- END TIS changes --
2017-10-24 16:56:12,645 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:12,645 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:12,648 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(step_to_choose)])
+ tis.private.plan: Stack([])
- tis.shared.com: {step_to_choose(step1), resolved(?X.step_to_choose(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 16:56:12,649 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:12,649 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:12,649 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:12,649 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:12,652 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.step_to_choose(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:56:12,652 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:12,652 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:12,653 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:12,654 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:12,654 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:12,654 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 16:56:12,654 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None)
2017-10-24 16:56:12,654 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None)
2017-10-24 16:56:12,654 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:12,655 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856972.59
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')])
tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.bel: {go_to_step("chose step1")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:12,655 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:12,659 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                         ---------------------------------
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.bel: {go_to_step("chose step1")}
- tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 16:56:12,659 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:12,662 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                                                 +++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:12,662 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:12,665 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
-- END TIS changes --
2017-10-24 16:56:12,665 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:12,668 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose step1")))])
- tis.private.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:12,668 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:12,668 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:12,668 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:12,670 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:12,671 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:12,671 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:12,673 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:56:12,673 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')])
2017-10-24 16:56:12,674 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose step1")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:12,674 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None))
2017-10-24 16:56:12,674 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 16:56:12,674 - session_2017-10-24T16_56_00_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 16:56:12,674 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None))
2017-10-24 16:56:12,675 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None)
2017-10-24 16:56:12,675 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": "step one", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:56:12,675 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:12,675 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None))
2017-10-24 16:56:12,675 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None)
2017-10-24 16:56:12,676 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "go_to_step", "grammar_entry": null, "value": "chose step1"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:12,677 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:12,677 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose step1")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:56:12,677 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose step1")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:12,678 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:12,678 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose step1")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:12,678 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose step1")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:12,680 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose step1")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:12,680 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp'), facts={go_to_step("chose step1")})
2017-10-24 16:56:12,680 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')
2017-10-24 16:56:12,681 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')
2017-10-24 16:56:12,682 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp') generated as u'Ok chose step1.'
2017-10-24 16:56:12,682 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose step1.], sender=GenerateModule, reason=None)
2017-10-24 16:56:12,684 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose step1")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:12,685 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok chose step1.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:56:12,686 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose step1")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:12,687 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:12,687 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')])
2017-10-24 16:56:12,687 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp'), facts={go_to_step("chose step1")})
2017-10-24 16:56:12,687 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')
2017-10-24 16:56:12,688 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.Popup instance at 0x7ff5e80e79e0>]
2017-10-24 16:56:12,688 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7ff5e80e79e0>], sender=GuiBackend, reason=None)
2017-10-24 16:56:12,689 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:12,689 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose step1.], sender=GenerateModule, reason=None))
2017-10-24 16:56:12,689 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose step1.], sender=GenerateModule, reason=None)
2017-10-24 16:56:12,689 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok chose step1."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:12,689 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:12,690 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok chose step1.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:56:12,690 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok chose step1.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:56:12,690 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok chose step1."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:56:12,691 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:12,691 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7ff5e80e79e0>], sender=GuiBackend, reason=None))
2017-10-24 16:56:12,691 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7ff5e80e79e0>], sender=GuiBackend, reason=None)
2017-10-24 16:56:12,692 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok chose step1."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:12,692 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:12,692 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:12,698 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok chose step1."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:12,699 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:12,699 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok chose step1.], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:12,700 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok chose step1.], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:12,700 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:12,700 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok chose step1.], sender=TurnManager, reason=None)
2017-10-24 16:56:12,700 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok chose step1.], sender=TurnManager, reason=None)
2017-10-24 16:56:12,700 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok chose step1.], sender=TurnManager, reason=None)
2017-10-24 16:56:12,700 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok chose step1.], sender=TurnManager, reason=None))
2017-10-24 16:56:12,702 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856972.7
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok chose step1.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose step1")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {go_to_step("chose step1")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose step1")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:12,702 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:12,702 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:12,702 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:12,708 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
?            ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:12,709 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:12,709 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:12,711 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:12,711 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:12,711 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:12,712 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:12,712 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:12,712 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:12,712 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:12,712 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:12,712 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:12,712 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:12,712 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:12,712 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:12,716 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {go_to_step("chose step1")}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:12,716 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:12,716 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:12,719 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {go_to_step("chose step1")}
+ tis.shared.com: {go_to_step("chose step1"), resolved(?X.go_to_step(X))}
?                                           ++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                             ---------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 16:56:12,719 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:12,720 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:12,720 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:12,720 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:12,720 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:12,720 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:12,720 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:12,720 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:12,720 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:12,720 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:12,720 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:12,720 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:12,721 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:12,721 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:12,721 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:12,721 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:12,721 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:12,721 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:12,721 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:12,724 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:56:12,724 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None)
2017-10-24 16:56:12,724 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok chose step1.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:12,725 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None))
2017-10-24 16:56:12,725 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None)
2017-10-24 16:56:12,725 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "go_to_step", "grammar_entry": null, "value": "chose step1"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:12,726 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:12,726 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok chose step1.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 16:56:12,726 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok chose step1.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:12,727 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok chose step1.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:12,727 - session_2017-10-24T16_56_00_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7ff5e8143d40>:1.0
2017-10-24 16:56:12,728 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:13,728 - session_2017-10-24T16_56_00_0 - DEBUG - Timeout fired
2017-10-24 16:56:13,728 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:13,728 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:13,728 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:13,728 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:13,729 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856973.73
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose step1")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {go_to_step("chose step1")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose step1")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {go_to_step("chose step1"), resolved(?X.go_to_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:13,729 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:13,729 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:13,732 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:13,732 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:13,736 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
-- END TIS changes --
2017-10-24 16:56:13,736 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:13,736 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:13,738 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:13,738 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:13,738 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:13,738 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:13,738 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:13,739 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:13,739 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:13,739 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:13,739 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:56:13,739 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:13,739 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:56:13,739 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:13,739 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:13,739 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:13,739 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:13,739 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:13,739 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:13,740 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:13,740 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:13,740 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:13,740 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:13,740 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:13,744 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 16:56:13,744 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:13,744 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:13,747 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {go_to_step("chose step1")}
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {go_to_step("chose step1"), resolved(?X.go_to_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 16:56:13,747 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:13,747 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:13,747 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:13,748 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:13,748 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:13,748 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:13,748 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:13,748 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:13,748 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:13,748 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:13,748 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:13,749 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856973.73
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose step1")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:13,750 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:13,754 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^  ^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                +++ ^^^^ +++ ^^^^^^^
- tis.private.tmp.sys.bel: {go_to_step("chose step1")}
+ tis.private.tmp.sys.bel: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                                      ---------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:13,754 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:13,757 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:13,757 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:13,759 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 16:56:13,759 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:13,762 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:13,762 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:13,762 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:13,762 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:13,764 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:13,764 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:13,765 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:13,767 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:56:13,767 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:13,767 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:17,980 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:56:17,981 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:17,981 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 16:56:17,981 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:17,981 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:17,981 - session_2017-10-24T16_56_00_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:56:17,981 - session_2017-10-24T16_56_00_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:56:17,983 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:56:17,983 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 16:56:17,983 - session_2017-10-24T16_56_00_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 16:56:17,983 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:56:17,983 - session_2017-10-24T16_56_00_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:56:17,984 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:17,984 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:56:17,984 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:17,984 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:17,984 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:17,985 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 16:56:17,985 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:17,985 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:17,985 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:17,986 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:17,987 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:17,987 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 16:56:17,987 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 16:56:17,987 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 16:56:17,987 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:17,987 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 16:56:17,988 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 16:56:17,988 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:17,988 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 16:56:17,988 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 16:56:17,989 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:17,991 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:17,991 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:17,991 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:17,991 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 16:56:17,991 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 16:56:17,991 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 16:56:17,991 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:17,992 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8134a28>]
2017-10-24 16:56:17,992 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8134a28>], sender=GuiBackend, reason=None)
2017-10-24 16:56:17,992 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:17,992 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:56:17,992 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:56:17,992 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:17,992 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:17,993 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 16:56:17,993 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:17,994 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 16:56:17,994 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 16:56:17,994 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:17,994 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:17,995 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8134a28>], sender=GuiBackend, reason=None))
2017-10-24 16:56:17,995 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8134a28>], sender=GuiBackend, reason=None)
2017-10-24 16:56:17,995 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:17,996 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:17,996 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:18,014 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:18,015 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:18,015 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:18,015 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:18,015 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:18,015 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:56:18,015 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:56:18,015 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:56:18,016 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 16:56:18,017 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856978.02
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:18,017 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:18,017 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:18,017 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:18,021 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:56:18,021 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:18,021 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:18,024 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:18,024 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:18,024 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:18,024 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:18,024 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:18,024 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:18,024 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:18,024 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:18,024 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:18,025 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:18,025 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:18,025 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:18,028 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:56:18,028 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:18,029 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:18,029 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:18,029 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,029 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:18,033 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 16:56:18,033 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:18,033 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:18,033 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:18,033 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,033 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:18,034 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:18,034 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:18,034 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:18,034 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:18,034 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:18,034 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:18,034 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:18,034 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:18,034 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:18,034 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,035 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:18,035 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:18,035 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:18,035 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,035 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:18,035 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:18,038 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 16:56:18,038 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:18,038 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:18,038 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:56:18,038 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:18,038 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:18,039 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:18,039 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:56:18,039 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:18,040 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:18,040 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:18,040 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:18,040 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:18,041 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:18,042 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856978.04
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:18,042 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:18,045 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 16:56:18,045 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:18,050 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
- tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                              ^
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                              ^
-- END TIS changes --
2017-10-24 16:56:18,050 - session_2017-10-24T16_56_00_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:56:18,051 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:18,057 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 16:56:18,057 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:18,064 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:56:18,064 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:18,064 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:18,066 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:18,066 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:18,066 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:18,072 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                                                      -------------------------------  ^^^^^^^^
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                                        ^^
- tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
+ tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
- tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
?                                       ^^^^^^ ^^^^^^^
+ tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                       ^ ^^
-- END TIS changes --
2017-10-24 16:56:18,072 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:18,072 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:18,073 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:18,073 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:18,073 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:18,073 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:56:18,073 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:18,073 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:56:18,073 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:18,077 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateUsrRequest
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
?                          ++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:56:18,077 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:18,077 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:18,080 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateISSUES3
-- BEGIN TIS changes --
- tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                                                  --------------------------
+ tis.shared.goals: stackset([perform(go_to_next), perform(top)])
-- END TIS changes --
2017-10-24 16:56:18,080 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:18,080 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,083 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
+ tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
-- END TIS changes --
2017-10-24 16:56:18,083 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:18,083 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:18,083 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:18,083 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:18,084 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:18,084 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:18,084 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:18,084 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:18,084 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:18,084 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:18,087 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.bel: {}
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:56:18,087 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,087 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:18,087 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,087 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:18,090 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.goal(X)])
?                           ----------
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:56:18,090 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:18,090 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:18,090 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,090 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:18,090 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:18,091 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:56:18,091 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:18,091 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:18,092 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856978.04
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:18,092 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:18,096 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                              +++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 16:56:18,096 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:18,099 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:18,099 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:18,102 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:18,102 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:18,102 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:18,102 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:18,105 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:18,105 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:18,105 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:18,107 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:56:18,107 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:56:18,108 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:18,108 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 16:56:18,108 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:56:18,108 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:56:18,109 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:18,109 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:56:18,109 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:18,109 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:18,110 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:18,110 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:56:18,111 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:18,111 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:18,111 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:18,111 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:18,112 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:18,112 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 16:56:18,112 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:56:18,112 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 16:56:18,112 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:18,113 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:56:18,113 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:56:18,113 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:18,113 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp') generated as u'Next'
2017-10-24 16:56:18,113 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Next], sender=GenerateModule, reason=None)
2017-10-24 16:56:18,114 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:18,115 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:56:18,116 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:18,116 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:18,116 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:56:18,117 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 16:56:18,117 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:56:18,117 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 16:56:18,117 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:18,118 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8143e60>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e8100440>]
2017-10-24 16:56:18,118 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8143e60>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e8100440>], sender=GuiBackend, reason=None)
2017-10-24 16:56:18,118 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:18,118 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Next], sender=GenerateModule, reason=None))
2017-10-24 16:56:18,118 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Next], sender=GenerateModule, reason=None)
2017-10-24 16:56:18,118 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Next"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:18,119 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:18,119 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Next}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:56:18,119 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:56:18,119 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Next"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:56:18,120 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:18,120 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8143e60>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e8100440>], sender=GuiBackend, reason=None))
2017-10-24 16:56:18,120 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8143e60>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e8100440>], sender=GuiBackend, reason=None)
2017-10-24 16:56:18,120 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "go_to_next", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Next"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:18,121 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:18,121 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:18,136 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Next"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:18,136 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:18,136 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Next], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:18,137 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Next], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:18,137 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:18,138 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Next], sender=TurnManager, reason=None)
2017-10-24 16:56:18,138 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Next], sender=TurnManager, reason=None)
2017-10-24 16:56:18,138 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Next], sender=TurnManager, reason=None)
2017-10-24 16:56:18,138 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Next], sender=TurnManager, reason=None))
2017-10-24 16:56:18,139 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856978.14
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:18,140 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:18,140 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:18,140 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:18,146 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:18,146 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:18,146 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:18,149 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:56:18,149 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:18,149 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:18,149 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:18,149 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:18,149 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:18,149 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:18,150 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:18,150 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:18,150 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:18,150 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:18,150 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:18,155 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:56:18,155 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:18,155 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:18,155 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:18,155 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,155 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:18,158 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {device_activity_terminated(go_to_next)}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:18,158 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:18,158 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:18,161 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(say_step))])
- tis.shared.goals: stackset([perform(go_to_next), perform(top)])
?                                     ---------------------
+ tis.shared.goals: stackset([perform(top)])
- tis.shared.previous_goal: None
?                           ^
+ tis.shared.previous_goal: perform(go_to_next)
?                           ^^^^ +++++++++  +++
-- END TIS changes --
2017-10-24 16:56:18,161 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:18,161 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,162 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:18,162 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:18,162 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:18,162 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:18,162 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:18,162 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:18,162 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:18,162 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:18,162 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:18,162 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:18,166 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([jumpto(perform(say_step))])
+ tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([perform(say_step), perform(top)])
?                                     +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:18,166 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,166 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:18,170 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
- tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:56:18,170 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,170 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:18,170 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,170 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:18,170 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:18,170 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:18,171 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,171 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:18,171 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:18,173 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:56:18,173 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:18,173 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:18,174 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856978.14
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next)}
tis.shared.goals: stackset([perform(say_step), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:18,175 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:18,180 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
?                                                                 ^^^ ^^                                          ^^  --- ^^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                                                ++ ^ ^^^                                          ^^^ +  ^
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.tmp.sys.com: {}
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
+ tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
- tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                              ^^  --- ^^
+ tis.private.tmp.sys.goals: stackset([perform(say_step), perform(top)])
?                                              ^^^ +  ^
-- END TIS changes --
2017-10-24 16:56:18,180 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:18,184 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:18,184 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:18,186 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:18,187 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:18,187 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:18,187 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:18,189 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:18,189 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:18,189 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:18,191 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:18,192 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:56:18,192 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Next], sender=TurnManager, reason=None))
2017-10-24 16:56:18,192 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:56:18,192 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:18,192 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:18,193 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:18,193 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Next], sender=TurnManager, reason=None)))
2017-10-24 16:56:18,193 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Next], sender=TurnManager, reason=None))
2017-10-24 16:56:18,194 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:18,194 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:18,194 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:18,195 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:18,196 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 16:56:18,196 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:18,196 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:18,196 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp') generated as u'Step ended'
2017-10-24 16:56:18,196 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:56:18,197 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:18,198 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:56:18,199 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:18,199 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:18,199 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:56:18,200 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 16:56:18,200 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:18,201 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e81009e0>, <tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8143e18>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e8143d40>]
2017-10-24 16:56:18,201 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e81009e0>, <tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8143e18>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e8143d40>], sender=GuiBackend, reason=None)
2017-10-24 16:56:18,201 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:18,201 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Step ended], sender=GenerateModule, reason=None))
2017-10-24 16:56:18,201 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:56:18,201 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Step ended"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:18,202 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:18,202 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:56:18,202 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:56:18,202 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Step ended"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:56:18,203 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:18,203 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e81009e0>, <tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8143e18>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e8143d40>], sender=GuiBackend, reason=None))
2017-10-24 16:56:18,203 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e81009e0>, <tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8143e18>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e8143d40>], sender=GuiBackend, reason=None)
2017-10-24 16:56:18,203 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}, {"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "say_step", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Step ended"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:18,204 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:18,204 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:18,251 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["Step ended"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:18,252 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:18,253 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Step ended], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:18,253 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Step ended], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:18,253 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:18,253 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:18,253 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:18,253 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:18,254 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None))
2017-10-24 16:56:18,255 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856978.25
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([perform(say_step), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next)}
tis.shared.goals: stackset([perform(say_step), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:18,255 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:18,255 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:18,255 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:18,260 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:56:18,260 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:18,260 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:18,262 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:56:18,263 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:18,263 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:18,263 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:18,263 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:18,263 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:18,264 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:18,264 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:18,264 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:18,264 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:18,264 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:18,264 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:18,267 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {device_activity_terminated(go_to_next)}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
?                                                        ++++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:18,267 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:18,267 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:18,270 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(confirmation_action))])
- tis.shared.goals: stackset([perform(say_step), perform(top)])
?                                     -------------------
+ tis.shared.goals: stackset([perform(top)])
- tis.shared.previous_goal: perform(go_to_next)
?                                   ^^  --- ^^
+ tis.shared.previous_goal: perform(say_step)
?                                   ^^^ +  ^
-- END TIS changes --
2017-10-24 16:56:18,270 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:18,270 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,271 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:18,271 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:18,271 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:18,271 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:18,271 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:18,271 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:18,271 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:18,271 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:18,271 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:18,271 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:18,277 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([jumpto(perform(confirmation_action))])
+ tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:56:18,277 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,277 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:18,280 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          -------------------------
+ tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:18,280 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,280 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:18,281 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,281 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:18,281 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:18,281 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:18,282 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,282 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:18,282 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:18,284 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:18,284 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:18,284 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:18,285 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856978.25
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([perform(say_step), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:18,286 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:18,291 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
+ tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
?                                                                 ++++++++++++++++++++++++++++++++++++++
- tis.private.tmp.sys.goals: stackset([perform(say_step), perform(top)])
?                                              ^ ^ ^ ^^
+ tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
?                                              ^^^^^^^ ^^^^ ^^ ^^^
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:18,291 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:18,294 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.confirmation_yn(X))])
?                                                                  ++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:18,295 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:18,298 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
?                                       +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.confirmation_yn(X))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:56:18,298 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:18,301 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))])
?                                                              ++++++++++++++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:18,301 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:18,301 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:18,301 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:18,304 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:18,304 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:18,304 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:18,307 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:56:18,307 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:18,307 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None))
2017-10-24 16:56:18,308 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:56:18,308 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:18,308 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:18,308 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:18,309 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None)))
2017-10-24 16:56:18,309 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None))
2017-10-24 16:56:18,309 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:18,310 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:18,310 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:18,312 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:18,312 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 16:56:18,313 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 16:56:18,313 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 16:56:18,313 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:18,313 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 16:56:18,313 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 16:56:18,313 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:18,314 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp') generated as u'Are you done?'
2017-10-24 16:56:18,314 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:56:18,316 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:18,318 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:18,318 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:18,318 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:18,319 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 16:56:18,319 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 16:56:18,319 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 16:56:18,319 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:18,319 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8100c68>]
2017-10-24 16:56:18,320 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8100c68>], sender=GuiBackend, reason=None)
2017-10-24 16:56:18,320 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:18,320 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Are you done?], sender=GenerateModule, reason=None))
2017-10-24 16:56:18,320 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:56:18,320 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Are you done?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:18,321 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:18,321 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8100c68>], sender=GuiBackend, reason=None))
2017-10-24 16:56:18,321 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8100c68>], sender=GuiBackend, reason=None)
2017-10-24 16:56:18,321 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:18,322 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:18,322 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:18,362 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Are you done?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:18,363 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:18,363 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Are you done?], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:18,363 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Are you done?], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:18,363 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:18,363 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:18,363 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:18,363 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:18,364 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Are you done?], sender=TurnManager, reason=None))
2017-10-24 16:56:18,365 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856978.36
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Are you done?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:18,365 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:18,365 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:18,365 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:18,370 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:18,370 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:18,370 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:18,373 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:18,373 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:18,373 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:18,373 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:18,373 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:18,373 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:18,373 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:18,373 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:18,374 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:18,374 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:18,374 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:18,374 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:18,377 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:56:18,378 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:18,378 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:18,378 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:18,378 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,378 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:18,382 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.confirmation_yn(X)])
-- END TIS changes --
2017-10-24 16:56:18,382 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:18,383 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:18,383 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:18,383 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,383 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:18,383 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:18,383 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:18,383 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:18,383 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:18,384 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:18,384 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:18,384 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:18,384 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:18,384 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:18,384 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,384 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:18,384 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:18,385 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:18,385 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:18,385 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:18,385 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:18,388 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 16:56:18,388 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:18,388 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:18,389 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:56:18,389 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:56:18,389 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:18,389 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:18,390 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:56:18,390 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:18,390 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:18,390 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:31,699 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:56:31,699 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:31,699 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 16:56:31,699 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:31,700 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:31,700 - session_2017-10-24T16_56_00_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:56:31,700 - session_2017-10-24T16_56_00_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:56:31,701 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:56:31,701 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 16:56:31,701 - session_2017-10-24T16_56_00_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 16:56:31,701 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:56:31,701 - session_2017-10-24T16_56_00_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:56:31,701 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:31,702 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:56:31,702 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:56:31,702 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:31,702 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:31,702 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 16:56:31,703 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:31,703 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 16:56:31,703 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:31,703 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:31,704 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:31,704 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:31,705 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856991.7
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([?X.confirmation_yn(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:31,705 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:31,711 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
-- END TIS changes --
2017-10-24 16:56:31,715 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^^
-- END TIS changes --
2017-10-24 16:56:31,716 - session_2017-10-24T16_56_00_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:56:31,716 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:31,721 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 16:56:31,721 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:31,729 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:31,729 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:31,730 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:31,733 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:31,734 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:31,734 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:31,743 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.bel: {}
- tis.private.tmp.usr.com: {}
+ tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
+ tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
- tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                                      ^  ^
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                                                      ^ +++++ ^^^^^^^   ++++++++++++++++++++++++++++++
- tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
+ tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                       ^  ^
+ tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
?                                       ^ +++++ ^^^^^^^
-- END TIS changes --
2017-10-24 16:56:31,743 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:31,743 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:31,743 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:31,744 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:31,744 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:31,744 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:56:31,744 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:31,744 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:56:31,744 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:31,748 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {confirmation_yn("go to next")}
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
?                                                                                              +++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:56:31,748 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:31,749 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:31,753 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
?                                                                                                                             +++++++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             -------------------------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:56:31,753 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:31,758 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          --------------------------------
+ tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:31,758 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:31,758 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:31,758 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:31,758 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:31,758 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:31,759 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:31,759 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:31,759 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:31,759 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:31,759 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:31,759 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:31,764 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
?                                                                                                                                                                                                       ++++++++++++++++++
- tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          ----------------------------------
+ tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:31,764 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:31,764 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:31,768 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_if_then_else
-- BEGIN TIS changes --
- tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
+ tis.private.plan: Stack([jumpto(perform(say_step))])
-- END TIS changes --
2017-10-24 16:56:31,768 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:31,768 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:31,772 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                 +++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([jumpto(perform(say_step))])
+ tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:31,772 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:31,772 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:31,776 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                                                                                  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:56:31,776 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:31,776 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:31,776 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:31,777 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:31,779 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.confirmation_yn(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:56:31,779 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:31,783 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(confirmation_action))])
- tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             -------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:56:31,783 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:31,783 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:31,787 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.plan: Stack([jumpto(perform(confirmation_action))])
+ tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:31,787 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:31,787 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:31,792 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          -------------------------
+ tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
-- END TIS changes --
2017-10-24 16:56:31,792 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:31,792 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:31,793 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:31,793 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:31,793 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:31,793 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:31,793 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:56:31,793 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:31,793 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:31,795 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856991.7
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:31,795 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:31,802 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
?                                                                                                                                                                                                               ++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:31,802 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:31,806 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:31,806 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:31,806 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:31,810 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:31,810 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:31,814 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:31,814 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:31,814 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:31,814 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:31,817 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:31,817 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:31,817 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:31,820 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:56:31,820 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:56:31,821 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:31,821 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None))
2017-10-24 16:56:31,821 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:31,821 - session_2017-10-24T16_56_00_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:31,821 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 16:56:31,822 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:56:31,822 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:56:31,822 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:31,822 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:31,823 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:31,823 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:31,823 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:31,824 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:56:31,824 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:31,825 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:31,825 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:31,825 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:31,827 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:31,827 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:31,827 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:56:31,827 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:31,828 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:31,828 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:56:31,828 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:56:31,828 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:31,828 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp') generated as u'Step ended'
2017-10-24 16:56:31,828 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:56:31,831 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:31,831 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:56:31,833 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:31,833 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:31,833 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:56:31,834 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:31,834 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:56:31,834 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:31,834 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:31,835 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8143fc8>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e81436c8>]
2017-10-24 16:56:31,835 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8143fc8>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e81436c8>], sender=GuiBackend, reason=None)
2017-10-24 16:56:31,835 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:31,835 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None))
2017-10-24 16:56:31,835 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:56:31,835 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Step ended"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:31,836 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:31,836 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:56:31,836 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:56:31,836 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Step ended"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:56:31,837 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:31,837 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8143fc8>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e81436c8>], sender=GuiBackend, reason=None))
2017-10-24 16:56:31,837 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8143fc8>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e81436c8>], sender=GuiBackend, reason=None)
2017-10-24 16:56:31,837 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "say_step", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Step ended"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:31,838 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:31,838 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:31,864 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Step ended"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:31,864 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:31,865 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:31,865 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:31,865 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:31,865 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:31,865 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:31,866 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:31,866 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None))
2017-10-24 16:56:31,868 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856991.87
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:31,868 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:31,872 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 16:56:31,872 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:31,872 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:31,872 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:31,878 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:31,878 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:31,879 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:31,881 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:56:31,881 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:31,882 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:31,882 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:31,882 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:31,882 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:31,882 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:31,882 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:31,882 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:31,882 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:31,883 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:31,883 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:31,887 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:56:31,887 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:31,887 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:31,887 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:31,887 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:31,888 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:31,890 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:31,891 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:31,891 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:31,891 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:31,891 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:31,891 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:31,891 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:31,891 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:31,891 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:31,891 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:31,891 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:31,892 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:31,892 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:31,892 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:31,892 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:31,892 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:31,892 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:31,892 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:31,893 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:31,893 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:31,893 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:31,893 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:31,896 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:56:31,896 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:31,896 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:31,896 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:31,897 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:31,897 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:31,897 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:31,897 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 16:56:31,898 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:31,898 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:31,899 - session_2017-10-24T16_56_00_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7ff5e8143f80>:1.0
2017-10-24 16:56:31,900 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:32,899 - session_2017-10-24T16_56_00_0 - DEBUG - Timeout fired
2017-10-24 16:56:32,899 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:32,900 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:32,900 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:32,900 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:32,901 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856992.9
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:32,901 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:32,902 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:32,904 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:32,905 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:32,910 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:56:32,910 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:32,910 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:32,913 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:32,913 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:32,913 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:32,913 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:32,913 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:32,913 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:32,913 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:32,913 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:32,914 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:56:32,914 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:32,914 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:56:32,914 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:32,914 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:32,914 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:32,914 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:32,914 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:32,914 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:32,914 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:32,914 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:32,915 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:32,915 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:32,915 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:32,915 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:32,915 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:32,915 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:32,916 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:32,916 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:32,916 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:32,916 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:32,917 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:32,917 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:32,918 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856992.9
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:32,919 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:32,922 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:32,922 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:32,925 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:56:32,925 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:32,925 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:32,928 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
- tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:32,928 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:32,928 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:32,929 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:32,931 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:32,931 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:32,931 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:32,934 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:56:32,934 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:32,934 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:36,146 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:56:36,146 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:36,146 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 16:56:36,146 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:36,147 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:36,147 - session_2017-10-24T16_56_00_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:56:36,147 - session_2017-10-24T16_56_00_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:56:36,148 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:56:36,148 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 16:56:36,148 - session_2017-10-24T16_56_00_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 16:56:36,149 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:56:36,149 - session_2017-10-24T16_56_00_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:56:36,149 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:36,149 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:36,149 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:36,149 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:36,150 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:36,151 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 16:56:36,151 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:36,152 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:36,152 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:36,152 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:36,154 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:36,154 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:36,154 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:36,154 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:36,155 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp') generated as u'Are you done?'
2017-10-24 16:56:36,155 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:56:36,156 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:36,159 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:36,159 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:36,159 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:36,159 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:36,159 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:36,160 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8126200>]
2017-10-24 16:56:36,160 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8126200>], sender=GuiBackend, reason=None)
2017-10-24 16:56:36,160 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:36,160 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:56:36,160 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:56:36,160 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:36,160 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:36,160 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 16:56:36,161 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:36,161 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None))
2017-10-24 16:56:36,162 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:56:36,162 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Are you done?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:36,163 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:36,164 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8126200>], sender=GuiBackend, reason=None))
2017-10-24 16:56:36,164 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8126200>], sender=GuiBackend, reason=None)
2017-10-24 16:56:36,164 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:36,164 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:36,164 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:36,174 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["Are you done?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:36,174 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:36,174 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:36,175 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:36,175 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:36,175 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:36,175 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:36,175 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:36,175 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None))
2017-10-24 16:56:36,177 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856996.18
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:36,177 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:36,178 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:36,178 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:36,181 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:56:36,182 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:36,182 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:36,185 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:36,185 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:36,185 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:36,185 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:36,185 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:36,186 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:36,186 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:36,186 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:36,186 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:36,186 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:36,186 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:36,186 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:36,189 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.confirmation_yn(X)])
-- END TIS changes --
2017-10-24 16:56:36,189 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:36,189 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:36,190 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:36,190 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:36,190 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:36,190 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:36,190 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:36,190 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:36,190 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:36,190 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:36,191 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:36,191 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:36,191 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:36,191 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:36,191 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:36,191 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:36,191 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:36,192 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:36,192 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:36,193 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:36,193 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:36,196 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 16:56:36,196 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:36,196 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:36,196 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:36,196 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:36,196 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:36,197 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:36,197 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:56:36,198 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:36,198 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:36,199 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:36,199 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:36,199 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:36,199 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:36,201 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856996.2
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([?X.confirmation_yn(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:36,201 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:36,206 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
-- END TIS changes --
2017-10-24 16:56:36,213 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^^
-- END TIS changes --
2017-10-24 16:56:36,214 - session_2017-10-24T16_56_00_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:56:36,214 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:36,220 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
?                                        ^ ^^^^  ^^^^^ ^^^^^^^^^                                    ^^                              ^
+ tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
?                                       + ^^^ ^^ ++++ ^^ ^                                   + ^                              ^^                 +++++++++++++++++++++++++
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 16:56:36,221 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:36,226 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:56:36,226 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:36,226 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:36,229 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:36,229 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:36,230 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:36,235 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
+ tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
?                                                                                                                                                                                                               ++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:36,235 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:36,235 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:36,235 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:36,235 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:36,235 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:36,235 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:56:36,235 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:36,235 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:56:36,236 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:36,241 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {confirmation_yn("go to next")}
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
?                                                                                              +++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:56:36,241 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:36,241 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:36,246 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
?                                                                                                                             +++++++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             -------------------------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:56:36,246 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:36,250 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          --------------------------------
+ tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:36,250 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:36,250 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:36,250 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:36,250 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:36,250 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:36,251 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:36,251 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:36,251 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:36,251 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:36,251 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:36,251 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:36,255 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          ----------------------------------
+ tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:36,255 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:36,255 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:36,258 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_if_then_else
-- BEGIN TIS changes --
- tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
+ tis.private.plan: Stack([jumpto(perform(say_step))])
-- END TIS changes --
2017-10-24 16:56:36,258 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:36,259 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:36,262 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                 +++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([jumpto(perform(say_step))])
+ tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:36,262 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:36,262 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:36,266 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                                                                                  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:56:36,267 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:36,267 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:36,267 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:36,267 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:36,270 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.confirmation_yn(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:56:36,270 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:36,273 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(confirmation_action))])
- tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             -------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:56:36,273 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:36,274 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:36,277 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.plan: Stack([jumpto(perform(confirmation_action))])
+ tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:36,278 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:36,278 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:36,283 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          -------------------------
+ tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
-- END TIS changes --
2017-10-24 16:56:36,284 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:36,284 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:36,285 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:36,285 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:36,285 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:36,285 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:36,285 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:56:36,285 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:36,285 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:36,288 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856996.2
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:36,288 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:36,292 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:36,292 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:36,296 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:36,296 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:36,296 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:36,300 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:36,300 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:36,304 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:36,304 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:36,304 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:36,304 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:36,307 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:36,307 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:36,307 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:36,310 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:56:36,310 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:56:36,311 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:36,311 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None))
2017-10-24 16:56:36,311 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:36,311 - session_2017-10-24T16_56_00_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:36,312 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 16:56:36,312 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:56:36,312 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:56:36,312 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:36,313 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:36,313 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:36,313 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:36,315 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:36,316 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:56:36,316 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:36,316 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:36,317 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:36,317 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:36,319 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:36,319 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:36,319 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:56:36,319 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:36,320 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:36,320 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:56:36,321 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:56:36,321 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:36,322 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp') generated as u'Step ended'
2017-10-24 16:56:36,322 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:56:36,323 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:36,325 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:56:36,327 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:36,328 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:36,328 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:56:36,328 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:36,328 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:56:36,328 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:36,328 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:36,329 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e9449758>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e810ecf8>]
2017-10-24 16:56:36,329 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e9449758>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e810ecf8>], sender=GuiBackend, reason=None)
2017-10-24 16:56:36,329 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:36,329 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None))
2017-10-24 16:56:36,329 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:56:36,329 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Step ended"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:36,330 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:36,330 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:56:36,330 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:56:36,331 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Step ended"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:56:36,331 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:36,331 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e9449758>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e810ecf8>], sender=GuiBackend, reason=None))
2017-10-24 16:56:36,331 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e9449758>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e810ecf8>], sender=GuiBackend, reason=None)
2017-10-24 16:56:36,332 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "say_step", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Step ended"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:36,332 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:36,332 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:36,344 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Step ended"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:36,344 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:36,345 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:36,345 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:36,345 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:36,345 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:36,345 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:36,346 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:36,346 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None))
2017-10-24 16:56:36,348 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856996.35
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:36,348 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:36,351 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 16:56:36,351 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:36,351 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:36,351 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:36,359 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:36,359 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:36,359 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:36,362 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:56:36,362 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:36,362 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:36,362 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:36,362 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:36,362 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:36,362 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:36,362 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:36,362 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:36,362 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:36,363 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:36,363 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:36,367 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:56:36,367 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:36,367 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:36,367 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:36,367 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:36,368 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:36,371 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:36,371 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:36,371 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:36,371 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:36,371 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:36,371 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:36,371 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:36,371 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:36,371 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:36,372 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:36,372 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:36,372 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:36,372 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:36,372 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:36,372 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:36,372 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:36,373 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:36,373 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:36,373 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:36,373 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:36,373 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:36,373 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:36,376 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:56:36,376 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:36,377 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:36,377 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:36,377 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:36,377 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:36,377 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:36,378 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 16:56:36,378 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:36,379 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:36,379 - session_2017-10-24T16_56_00_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7ff5e8143a28>:1.0
2017-10-24 16:56:36,380 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:37,380 - session_2017-10-24T16_56_00_0 - DEBUG - Timeout fired
2017-10-24 16:56:37,380 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:37,380 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:37,380 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:37,380 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:37,382 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856997.38
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:37,382 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:37,382 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:37,385 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:37,385 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:37,390 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:56:37,390 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:37,390 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:37,393 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:37,393 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:37,393 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:37,393 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:37,393 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:37,393 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:37,393 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:37,393 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:37,393 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:56:37,394 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:37,394 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:56:37,394 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:37,394 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:37,394 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:37,394 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:37,394 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:37,394 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:37,394 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:37,394 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:37,395 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:37,395 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:37,395 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:37,395 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:37,395 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:37,395 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:37,396 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:37,396 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:37,396 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:37,396 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:37,396 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:37,397 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:37,398 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508856997.38
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:37,399 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:37,402 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:37,402 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:37,405 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:56:37,405 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:37,405 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:37,408 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
- tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:37,408 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:37,408 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:37,408 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:37,411 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:37,411 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:37,411 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:37,414 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:56:37,414 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:37,414 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:41,248 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:56:41,249 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:41,249 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 16:56:41,249 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:41,249 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:41,249 - session_2017-10-24T16_56_00_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:56:41,249 - session_2017-10-24T16_56_00_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:56:41,251 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:56:41,251 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 16:56:41,251 - session_2017-10-24T16_56_00_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 16:56:41,251 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:56:41,251 - session_2017-10-24T16_56_00_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:56:41,252 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:41,252 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:41,252 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:41,252 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:41,253 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:41,253 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 16:56:41,254 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:41,254 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:41,254 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:41,255 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:41,257 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:41,257 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:41,257 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:41,257 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:41,258 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp') generated as u'Are you done?'
2017-10-24 16:56:41,258 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:56:41,260 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:41,262 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:41,262 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:41,262 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:41,262 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:41,262 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:41,263 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e817f998>]
2017-10-24 16:56:41,263 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e817f998>], sender=GuiBackend, reason=None)
2017-10-24 16:56:41,263 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:41,263 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:56:41,263 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:56:41,263 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:41,263 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:41,264 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 16:56:41,264 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:41,265 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None))
2017-10-24 16:56:41,265 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:56:41,265 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Are you done?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:41,266 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:41,266 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e817f998>], sender=GuiBackend, reason=None))
2017-10-24 16:56:41,266 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e817f998>], sender=GuiBackend, reason=None)
2017-10-24 16:56:41,267 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:41,267 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:41,267 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:41,305 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["Are you done?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:41,306 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:41,306 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:41,306 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:41,306 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:41,306 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:41,306 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:41,306 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:41,307 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None))
2017-10-24 16:56:41,308 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857001.31
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:41,308 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:41,309 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:41,309 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:41,313 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:56:41,313 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:41,313 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:41,317 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:41,317 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:41,317 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:41,317 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:41,317 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:41,317 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:41,317 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:41,317 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:41,318 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:41,318 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:41,318 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:41,318 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:41,321 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.confirmation_yn(X)])
-- END TIS changes --
2017-10-24 16:56:41,321 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:41,321 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:41,322 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:41,322 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:41,322 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:41,322 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:41,322 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:41,322 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:41,322 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:41,322 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:41,322 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:41,322 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:41,323 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:41,323 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:41,323 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:41,323 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:41,323 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:41,324 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:41,324 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:41,324 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:41,324 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:41,327 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 16:56:41,327 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:41,327 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:41,327 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:41,328 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:41,328 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:41,328 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:41,329 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:56:41,329 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:41,329 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:41,330 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:41,330 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:41,330 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:41,331 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:41,332 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857001.33
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([?X.confirmation_yn(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:41,332 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:41,337 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
-- END TIS changes --
2017-10-24 16:56:41,342 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^^
-- END TIS changes --
2017-10-24 16:56:41,343 - session_2017-10-24T16_56_00_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:56:41,343 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:41,349 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
?                                        ^ ^^^^  ^^^^^ ^^^^^^^^^                                    ^^                              ^
+ tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
?                                       + ^^^ ^^ ++++ ^^ ^                                   + ^                              ^^                 +++++++++++++++++++++++++
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 16:56:41,350 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:41,355 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:56:41,355 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:41,356 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:41,360 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:41,360 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:41,360 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:41,364 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:41,364 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:41,364 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:41,364 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:41,365 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:41,365 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:41,365 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:56:41,365 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:41,365 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:56:41,365 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:41,369 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {confirmation_yn("go to next")}
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
?                                                                                              +++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:56:41,369 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:41,369 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:41,375 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
?                                                                                                                             +++++++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             -------------------------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:56:41,375 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:41,379 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          --------------------------------
+ tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:41,379 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:41,379 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:41,380 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:41,380 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:41,380 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:41,380 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:41,380 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:41,380 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:41,380 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:41,380 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:41,380 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:41,384 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          ----------------------------------
+ tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:41,384 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:41,384 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:41,387 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_if_then_else
-- BEGIN TIS changes --
- tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
+ tis.private.plan: Stack([jumpto(perform(say_step))])
-- END TIS changes --
2017-10-24 16:56:41,387 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:41,388 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:41,391 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                 +++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([jumpto(perform(say_step))])
+ tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:41,392 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:41,392 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:41,395 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                                                                                  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:56:41,395 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:41,395 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:41,396 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:41,396 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:41,399 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.confirmation_yn(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:56:41,399 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:41,402 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(confirmation_action))])
- tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             -------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:56:41,402 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:41,402 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:41,406 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.plan: Stack([jumpto(perform(confirmation_action))])
+ tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:41,406 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:41,406 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:41,411 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          -------------------------
+ tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
-- END TIS changes --
2017-10-24 16:56:41,411 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:41,411 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:41,412 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:41,412 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:41,412 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:41,412 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:41,413 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:56:41,413 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:41,413 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:41,414 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857001.33
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:41,414 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:41,419 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:41,419 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:41,422 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:41,423 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:41,423 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:41,427 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:41,427 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:41,431 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:41,431 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:41,431 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:41,431 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:41,434 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:41,434 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:41,434 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:41,437 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:56:41,437 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:56:41,438 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:41,438 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None))
2017-10-24 16:56:41,438 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:41,438 - session_2017-10-24T16_56_00_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:41,439 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 16:56:41,439 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:56:41,439 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:56:41,439 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:41,439 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:41,440 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:41,440 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:41,441 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:41,442 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:56:41,442 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:41,442 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:41,443 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:41,443 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:41,445 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:41,445 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:41,445 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:56:41,446 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:41,446 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:41,446 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:56:41,446 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:56:41,446 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:41,447 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp') generated as u'Step ended'
2017-10-24 16:56:41,447 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:56:41,449 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:41,450 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:56:41,452 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:41,452 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:41,452 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:56:41,452 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:41,453 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:56:41,453 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:41,453 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:41,453 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8143dd0>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e8148320>]
2017-10-24 16:56:41,454 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8143dd0>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e8148320>], sender=GuiBackend, reason=None)
2017-10-24 16:56:41,454 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:41,454 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None))
2017-10-24 16:56:41,454 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:56:41,454 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Step ended"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:41,455 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:41,455 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:56:41,455 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:56:41,455 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Step ended"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:56:41,456 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:41,456 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8143dd0>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e8148320>], sender=GuiBackend, reason=None))
2017-10-24 16:56:41,456 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8143dd0>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e8148320>], sender=GuiBackend, reason=None)
2017-10-24 16:56:41,457 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "say_step", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Step ended"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:41,457 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:41,457 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:41,482 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Step ended"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:41,482 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:41,482 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:41,482 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:41,482 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:41,482 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:41,482 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:41,483 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:41,483 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None))
2017-10-24 16:56:41,484 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857001.48
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:41,485 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:41,488 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 16:56:41,488 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:41,488 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:41,489 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:41,496 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:41,496 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:41,496 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:41,499 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:56:41,499 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:41,499 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:41,499 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:41,499 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:41,499 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:41,499 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:41,499 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:41,499 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:41,500 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:41,500 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:41,500 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:41,504 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:56:41,504 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:41,504 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:41,505 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:41,505 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:41,505 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:41,508 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:41,508 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:41,508 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:41,508 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:41,508 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:41,508 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:41,508 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:41,509 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:41,509 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:41,509 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:41,509 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:41,509 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:41,509 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:41,509 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:41,509 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:41,510 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:41,510 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:41,510 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:41,510 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:41,510 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:41,510 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:41,511 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:41,514 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:56:41,514 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:41,514 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:41,514 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:41,514 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:41,514 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:41,515 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:41,515 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 16:56:41,515 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:41,516 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:41,517 - session_2017-10-24T16_56_00_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7ff5e817b170>:1.0
2017-10-24 16:56:41,517 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:42,517 - session_2017-10-24T16_56_00_0 - DEBUG - Timeout fired
2017-10-24 16:56:42,517 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:42,517 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:42,518 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:42,518 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:42,519 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857002.52
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:42,519 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:42,519 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:42,522 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:42,522 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:42,527 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:56:42,528 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:42,528 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:42,530 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:42,530 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:42,530 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:42,530 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:42,531 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:42,531 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:42,531 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:42,531 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:42,531 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:56:42,531 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:42,531 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:56:42,531 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:42,531 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:42,531 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:42,531 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:42,531 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:42,532 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:42,532 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:42,532 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:42,532 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:42,532 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:42,532 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:42,533 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:42,533 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:42,533 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:42,533 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:42,533 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:42,534 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:42,534 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:42,534 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:42,535 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:42,536 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857002.52
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:42,536 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:42,540 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:42,540 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:42,542 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:56:42,542 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:42,542 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:42,545 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
- tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:42,545 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:42,546 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:42,546 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:42,548 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:42,548 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:42,548 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:42,551 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:56:42,551 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:42,551 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:45,982 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:56:45,982 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:45,983 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 16:56:45,983 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:45,983 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:45,983 - session_2017-10-24T16_56_00_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:56:45,983 - session_2017-10-24T16_56_00_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:56:45,984 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:56:45,984 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 16:56:45,984 - session_2017-10-24T16_56_00_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 16:56:45,985 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:56:45,985 - session_2017-10-24T16_56_00_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:56:45,985 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:45,985 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:45,985 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:45,985 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:45,986 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:45,987 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 16:56:45,987 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:45,987 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:45,988 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:45,988 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:45,990 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:45,990 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:45,991 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:45,991 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:45,992 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp') generated as u'Are you done?'
2017-10-24 16:56:45,992 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:56:45,995 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:45,997 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:45,998 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:45,998 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:45,998 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:45,998 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:45,998 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8143e60>]
2017-10-24 16:56:45,999 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8143e60>], sender=GuiBackend, reason=None)
2017-10-24 16:56:45,999 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:45,999 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:56:45,999 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:56:45,999 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:45,999 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:45,999 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 16:56:46,000 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:46,000 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None))
2017-10-24 16:56:46,001 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:56:46,002 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Are you done?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:46,003 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:46,003 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8143e60>], sender=GuiBackend, reason=None))
2017-10-24 16:56:46,003 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8143e60>], sender=GuiBackend, reason=None)
2017-10-24 16:56:46,003 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:46,004 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:46,005 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:46,009 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["Are you done?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:46,009 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:46,009 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:46,009 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:46,009 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:46,010 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:46,010 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:46,010 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:46,010 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None))
2017-10-24 16:56:46,012 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857006.01
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:46,012 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:46,012 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:46,012 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:46,016 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:56:46,017 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:46,017 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:46,019 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:46,020 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:46,020 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:46,020 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:46,020 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:46,020 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:46,020 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:46,020 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:46,020 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:46,020 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:46,020 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:46,020 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:46,024 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.confirmation_yn(X)])
-- END TIS changes --
2017-10-24 16:56:46,024 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:46,024 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:46,024 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:46,024 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:46,025 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:46,025 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:46,025 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:46,025 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:46,026 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:46,026 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:46,026 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:46,026 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:46,026 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:46,026 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:46,026 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:46,027 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:46,027 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:46,027 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:46,027 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:46,027 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:46,027 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:46,030 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 16:56:46,031 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:46,031 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:46,031 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:46,031 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:46,031 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:46,032 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:46,032 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:56:46,032 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:46,033 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:46,033 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:46,033 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:46,034 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:46,034 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:46,035 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857006.03
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([?X.confirmation_yn(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:46,035 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:46,040 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
-- END TIS changes --
2017-10-24 16:56:46,046 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^^
-- END TIS changes --
2017-10-24 16:56:46,048 - session_2017-10-24T16_56_00_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:56:46,048 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:46,054 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
?                                        ^ ^^^^  ^^^^^ ^^^^^^^^^                                    ^^                              ^
+ tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
?                                       + ^^^ ^^ ++++ ^^ ^                                   + ^                              ^^                 +++++++++++++++++++++++++
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 16:56:46,055 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:46,061 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:56:46,061 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:46,062 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:46,065 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:46,065 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:46,065 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:46,070 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:46,070 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:46,070 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:46,070 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:46,070 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:46,070 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:46,070 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:56:46,070 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:46,071 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:56:46,071 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:46,075 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {confirmation_yn("go to next")}
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
?                                                                                              +++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:56:46,075 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:46,075 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:46,080 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
?                                                                                                                             +++++++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             -------------------------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:56:46,081 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:46,085 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          --------------------------------
+ tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:46,085 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:46,085 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:46,085 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:46,085 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:46,085 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:46,085 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:46,085 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:46,086 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:46,086 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:46,086 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:46,086 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:46,090 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          ----------------------------------
+ tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:46,090 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:46,090 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:46,093 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_if_then_else
-- BEGIN TIS changes --
- tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
+ tis.private.plan: Stack([jumpto(perform(say_step))])
-- END TIS changes --
2017-10-24 16:56:46,093 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:46,093 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:46,098 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                 +++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([jumpto(perform(say_step))])
+ tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:46,098 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:46,098 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:46,102 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                                                                                  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:56:46,102 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:46,102 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:46,102 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:46,103 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:46,105 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.confirmation_yn(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:56:46,105 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:46,109 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(confirmation_action))])
- tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             -------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:56:46,109 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:46,109 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:46,113 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.plan: Stack([jumpto(perform(confirmation_action))])
+ tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:46,113 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:46,113 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:46,118 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          -------------------------
+ tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
-- END TIS changes --
2017-10-24 16:56:46,118 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:46,118 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:46,119 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:46,119 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:46,119 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:46,119 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:46,119 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:56:46,119 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:46,119 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:46,121 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857006.03
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:46,121 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:46,125 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:46,125 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:46,129 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:46,129 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:46,129 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:46,134 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:46,134 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:46,137 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:46,137 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:46,138 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:46,138 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:46,140 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:46,141 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:46,141 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:46,144 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:56:46,144 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:56:46,145 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:46,145 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None))
2017-10-24 16:56:46,145 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:46,145 - session_2017-10-24T16_56_00_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:46,145 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 16:56:46,145 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:56:46,146 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:56:46,146 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:46,146 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:46,146 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:46,147 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:46,147 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:46,148 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:56:46,148 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:46,148 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:46,149 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:46,149 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:46,151 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:46,151 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:46,151 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:56:46,152 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:46,152 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:46,152 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:56:46,152 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:56:46,152 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:46,153 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp') generated as u'Step ended'
2017-10-24 16:56:46,153 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:56:46,155 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:46,156 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:56:46,158 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:46,158 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:46,158 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:56:46,158 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:46,158 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:56:46,158 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:46,158 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:46,159 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8167b00>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e817b638>]
2017-10-24 16:56:46,159 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8167b00>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e817b638>], sender=GuiBackend, reason=None)
2017-10-24 16:56:46,159 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:46,159 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None))
2017-10-24 16:56:46,159 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:56:46,160 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Step ended"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:46,160 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:46,160 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:56:46,161 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:56:46,161 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Step ended"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:56:46,161 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:46,161 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8167b00>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e817b638>], sender=GuiBackend, reason=None))
2017-10-24 16:56:46,162 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8167b00>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e817b638>], sender=GuiBackend, reason=None)
2017-10-24 16:56:46,162 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "say_step", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Step ended"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:46,163 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:46,164 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:46,188 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Step ended"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:46,189 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:46,189 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:46,189 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:46,189 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:46,189 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:46,189 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:46,189 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:46,190 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None))
2017-10-24 16:56:46,191 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857006.19
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:46,191 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:46,195 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 16:56:46,195 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:46,195 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:46,195 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:46,201 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:46,201 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:46,201 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:46,204 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:56:46,204 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:46,204 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:46,204 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:46,204 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:46,204 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:46,205 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:46,205 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:46,205 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:46,205 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:46,205 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:46,205 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:46,210 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:56:46,210 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:46,210 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:46,210 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:46,211 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:46,211 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:46,214 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:46,214 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:46,214 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:46,214 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:46,214 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:46,214 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:46,214 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:46,215 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:46,215 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:46,215 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:46,215 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:46,215 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:46,215 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:46,215 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:46,215 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:46,215 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:46,216 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:46,216 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:46,216 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:46,216 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:46,216 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:46,216 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:46,219 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:56:46,219 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:46,220 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:46,220 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:46,220 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:46,220 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:46,220 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:46,221 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 16:56:46,221 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:46,221 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:46,222 - session_2017-10-24T16_56_00_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7ff5e81486c8>:1.0
2017-10-24 16:56:46,222 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:47,222 - session_2017-10-24T16_56_00_0 - DEBUG - Timeout fired
2017-10-24 16:56:47,222 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:47,222 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:47,222 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:47,223 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:47,224 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857007.22
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:47,224 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:47,224 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:47,227 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:47,227 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:47,232 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:56:47,232 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:47,232 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:47,235 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:47,235 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:47,235 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:47,235 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:47,235 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:47,236 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:47,236 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:47,236 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:47,236 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:56:47,236 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:47,236 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:56:47,236 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:47,236 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:47,236 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:47,236 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:47,236 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:47,236 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:47,237 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:47,237 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:47,237 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:47,237 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:47,237 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:47,238 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:47,238 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:47,238 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:47,238 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:47,239 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:47,239 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:47,239 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:47,239 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:47,239 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:47,240 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857007.22
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:47,241 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:47,245 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:47,245 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:47,247 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:56:47,248 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:47,248 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:47,251 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
- tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:47,251 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:47,251 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:47,251 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:47,254 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:47,254 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:47,254 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:47,257 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:56:47,257 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:47,258 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:49,354 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:56:49,354 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:49,354 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 16:56:49,354 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:49,354 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:49,355 - session_2017-10-24T16_56_00_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:56:49,355 - session_2017-10-24T16_56_00_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:56:49,355 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:56:49,355 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 16:56:49,356 - session_2017-10-24T16_56_00_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 16:56:49,356 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:56:49,356 - session_2017-10-24T16_56_00_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:56:49,357 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:49,357 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:49,357 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:49,357 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:49,357 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:49,358 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 16:56:49,358 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:49,358 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:49,359 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:49,359 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:49,361 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:49,361 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:49,361 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:49,361 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:49,362 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp') generated as u'Are you done?'
2017-10-24 16:56:49,362 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:56:49,364 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:49,366 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:49,366 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:49,366 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:49,366 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:49,366 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:49,367 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8123248>]
2017-10-24 16:56:49,367 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8123248>], sender=GuiBackend, reason=None)
2017-10-24 16:56:49,367 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:49,367 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:56:49,368 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:56:49,368 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:49,368 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:49,368 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 16:56:49,368 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:49,369 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None))
2017-10-24 16:56:49,369 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:56:49,369 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Are you done?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:49,370 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:49,370 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8123248>], sender=GuiBackend, reason=None))
2017-10-24 16:56:49,370 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8123248>], sender=GuiBackend, reason=None)
2017-10-24 16:56:49,370 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:49,371 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:49,371 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:49,401 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["Are you done?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:49,401 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:49,401 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:49,401 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:49,401 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:49,401 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:49,401 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:49,402 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:49,402 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None))
2017-10-24 16:56:49,403 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857009.4
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:49,403 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:49,403 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:49,403 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:49,407 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:56:49,407 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:49,407 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:49,411 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:49,411 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:49,411 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:49,411 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:49,411 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:49,411 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:49,411 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:49,411 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:49,411 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:49,411 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:49,411 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:49,411 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:49,415 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.confirmation_yn(X)])
-- END TIS changes --
2017-10-24 16:56:49,415 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:49,415 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:49,415 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:49,416 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:49,416 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:49,416 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:49,416 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:49,416 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:49,416 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:49,416 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:49,416 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:49,416 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:49,416 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:49,416 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:49,417 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:49,417 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:49,417 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:49,417 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:49,418 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:49,418 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:49,418 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:49,421 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 16:56:49,421 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:49,421 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:49,421 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:49,421 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:49,421 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:49,422 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:49,422 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:56:49,422 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:49,423 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:49,423 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:49,423 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:49,423 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:49,424 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:49,425 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857009.42
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([?X.confirmation_yn(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:49,425 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:49,430 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
-- END TIS changes --
2017-10-24 16:56:49,435 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^^
-- END TIS changes --
2017-10-24 16:56:49,436 - session_2017-10-24T16_56_00_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:56:49,436 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:49,442 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
?                                        ^ ^^^^  ^^^^^ ^^^^^^^^^                                    ^^                              ^
+ tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
?                                       + ^^^ ^^ ++++ ^^ ^                                   + ^                              ^^                 +++++++++++++++++++++++++
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 16:56:49,442 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:49,448 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:56:49,448 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:49,448 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:49,451 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:49,451 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:49,451 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:49,456 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:49,456 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:49,456 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:49,457 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:49,457 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:49,457 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:49,457 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:56:49,457 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:49,457 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:56:49,457 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:49,461 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {confirmation_yn("go to next")}
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
?                                                                                              +++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:56:49,461 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:49,461 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:49,467 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
?                                                                                                                             +++++++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             -------------------------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:56:49,467 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:49,471 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          --------------------------------
+ tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:49,471 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:49,471 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:49,471 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:49,471 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:49,471 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:49,472 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:49,472 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:49,472 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:49,472 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:49,472 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:49,472 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:49,476 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          ----------------------------------
+ tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:49,476 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:49,476 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:49,479 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_if_then_else
-- BEGIN TIS changes --
- tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
+ tis.private.plan: Stack([jumpto(perform(say_step))])
-- END TIS changes --
2017-10-24 16:56:49,479 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:49,479 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:49,483 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                 +++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([jumpto(perform(say_step))])
+ tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:49,484 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:49,484 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:49,487 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                                                                                  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:56:49,487 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:49,488 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:49,488 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:49,488 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:49,491 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.confirmation_yn(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:56:49,491 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:49,495 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(confirmation_action))])
- tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             -------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:56:49,495 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:49,495 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:49,499 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.plan: Stack([jumpto(perform(confirmation_action))])
+ tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:49,499 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:49,499 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:49,503 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          -------------------------
+ tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
-- END TIS changes --
2017-10-24 16:56:49,503 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:49,504 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:49,504 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:49,504 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:49,504 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:49,504 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:49,505 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:56:49,505 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:49,505 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:49,506 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857009.42
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:49,506 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:49,510 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:49,511 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:49,514 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:49,514 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:49,515 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:49,519 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:49,519 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:49,523 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:49,523 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:49,523 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:49,523 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:49,526 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:49,526 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:49,526 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:49,529 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:56:49,529 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:56:49,530 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:49,530 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None))
2017-10-24 16:56:49,530 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:49,530 - session_2017-10-24T16_56_00_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:49,530 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 16:56:49,530 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:56:49,530 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:56:49,531 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:49,531 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:49,531 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:49,531 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:49,532 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:49,533 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:56:49,533 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:49,533 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:49,534 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:49,534 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:49,536 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:49,537 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:49,537 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:56:49,538 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:49,538 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:49,538 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:56:49,538 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:56:49,538 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:49,539 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp') generated as u'Step ended'
2017-10-24 16:56:49,539 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:56:49,541 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:49,542 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:56:49,544 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:49,544 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:49,544 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:56:49,544 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:49,544 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:56:49,544 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:49,544 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:49,545 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e810e5f0>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e810e908>]
2017-10-24 16:56:49,545 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e810e5f0>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e810e908>], sender=GuiBackend, reason=None)
2017-10-24 16:56:49,545 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:49,545 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None))
2017-10-24 16:56:49,545 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:56:49,545 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Step ended"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:49,546 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:49,546 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:56:49,547 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:56:49,547 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Step ended"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:56:49,548 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:49,549 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e810e5f0>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e810e908>], sender=GuiBackend, reason=None))
2017-10-24 16:56:49,549 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e810e5f0>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e810e908>], sender=GuiBackend, reason=None)
2017-10-24 16:56:49,549 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "say_step", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Step ended"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:49,550 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:49,551 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:49,574 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Step ended"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:49,575 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:49,575 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:49,575 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:49,575 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:49,576 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:49,576 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:49,576 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:49,576 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None))
2017-10-24 16:56:49,578 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857009.58
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:49,578 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:49,582 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 16:56:49,582 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:49,583 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:49,583 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:49,589 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:49,589 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:49,589 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:49,593 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:56:49,593 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:49,593 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:49,593 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:49,593 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:49,593 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:49,593 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:49,593 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:49,593 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:49,594 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:49,594 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:49,594 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:49,599 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:56:49,599 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:49,599 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:49,599 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:49,599 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:49,600 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:49,603 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:49,603 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:49,603 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:49,604 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:49,604 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:49,604 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:49,604 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:49,604 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:49,604 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:49,604 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:49,604 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:49,604 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:49,604 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:49,605 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:49,605 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:49,606 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:49,606 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:49,606 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:49,606 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:49,606 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:49,606 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:49,607 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:49,609 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:56:49,610 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:49,610 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:49,610 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:49,610 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:49,610 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:49,611 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:49,611 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 16:56:49,611 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:49,611 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:49,612 - session_2017-10-24T16_56_00_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7ff5e81347e8>:1.0
2017-10-24 16:56:49,612 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:50,612 - session_2017-10-24T16_56_00_0 - DEBUG - Timeout fired
2017-10-24 16:56:50,613 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:50,613 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:50,613 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:50,613 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:50,614 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857010.61
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:50,614 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:50,614 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:50,617 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:50,617 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:50,622 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:56:50,622 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:50,622 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:50,625 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:50,625 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:50,625 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:50,626 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:50,626 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:50,626 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:50,626 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:50,626 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:50,626 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:56:50,626 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:50,626 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:56:50,626 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:50,626 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:50,626 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:50,626 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:50,627 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:50,627 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:50,627 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:50,627 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:50,627 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:50,627 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:50,627 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:50,628 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:50,628 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:50,628 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:50,628 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:50,629 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:50,629 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:50,629 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:50,629 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:50,629 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:50,631 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857010.61
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:50,631 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:50,634 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:50,634 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:50,637 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:56:50,637 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:50,637 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:50,640 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
- tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:50,640 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:50,640 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:50,641 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:50,643 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:50,643 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:50,643 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:50,646 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:56:50,646 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:50,646 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:53,655 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:56:53,656 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:53,656 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 16:56:53,656 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:53,656 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:53,656 - session_2017-10-24T16_56_00_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:56:53,656 - session_2017-10-24T16_56_00_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:56:53,657 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:56:53,657 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 16:56:53,658 - session_2017-10-24T16_56_00_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 16:56:53,658 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:56:53,658 - session_2017-10-24T16_56_00_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:56:53,658 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:53,658 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:53,658 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:53,659 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:53,659 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:53,660 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 16:56:53,660 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:53,660 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:53,661 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:53,661 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:53,663 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:53,663 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:53,663 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:53,663 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:53,664 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp') generated as u'Are you done?'
2017-10-24 16:56:53,664 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:56:53,665 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:53,668 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:53,668 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:53,668 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:53,668 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:53,668 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:53,669 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8148ef0>]
2017-10-24 16:56:53,669 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8148ef0>], sender=GuiBackend, reason=None)
2017-10-24 16:56:53,669 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:53,669 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:56:53,669 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:56:53,669 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:53,669 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:53,669 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 16:56:53,670 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:53,671 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None))
2017-10-24 16:56:53,671 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:56:53,672 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Are you done?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:53,672 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:53,673 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8148ef0>], sender=GuiBackend, reason=None))
2017-10-24 16:56:53,673 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e8148ef0>], sender=GuiBackend, reason=None)
2017-10-24 16:56:53,673 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:53,674 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:53,674 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:53,687 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["Are you done?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:53,687 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:53,688 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:53,688 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:53,688 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:53,688 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:53,688 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:53,688 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:53,689 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None))
2017-10-24 16:56:53,690 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857013.69
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:53,690 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:53,691 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:53,691 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:53,695 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:56:53,695 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:53,695 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:53,698 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:53,698 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:53,698 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:53,698 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:53,698 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:53,698 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:53,698 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:53,698 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:53,698 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:53,698 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:53,699 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:53,699 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:53,703 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.confirmation_yn(X)])
-- END TIS changes --
2017-10-24 16:56:53,703 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:53,703 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:53,703 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:53,703 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:53,704 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:53,704 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:53,704 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:53,704 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:53,704 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:53,704 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:53,704 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:53,705 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:53,705 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:53,705 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:53,705 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:53,705 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:53,705 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:53,706 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:53,706 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:53,706 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:53,706 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:53,709 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 16:56:53,709 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:53,709 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:53,709 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:53,710 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:53,710 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:53,710 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:53,710 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:56:53,710 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:53,711 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:53,712 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:53,712 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:53,712 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:53,713 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:53,714 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857013.71
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([?X.confirmation_yn(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:53,714 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:53,719 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
-- END TIS changes --
2017-10-24 16:56:53,725 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^^
-- END TIS changes --
2017-10-24 16:56:53,726 - session_2017-10-24T16_56_00_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:56:53,727 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:53,733 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
?                                        ^ ^^^^  ^^^^^ ^^^^^^^^^                                    ^^                              ^
+ tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
?                                       + ^^^ ^^ ++++ ^^ ^                                   + ^                              ^^                 +++++++++++++++++++++++++
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 16:56:53,733 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:53,739 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:56:53,739 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:53,740 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:53,742 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:53,742 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:53,743 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:53,748 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:53,749 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:53,749 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:53,749 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:53,749 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:53,749 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:53,749 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:56:53,749 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:53,749 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:56:53,749 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:53,753 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {confirmation_yn("go to next")}
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
?                                                                                              +++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:56:53,753 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:53,754 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:53,760 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
?                                                                                                                             +++++++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             -------------------------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:56:53,760 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:53,764 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          --------------------------------
+ tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:53,764 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:53,764 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:53,764 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:53,764 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:53,764 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:53,764 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:53,764 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:53,764 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:53,765 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:53,765 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:53,765 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:53,768 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          ----------------------------------
+ tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:53,769 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:53,769 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:53,772 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_if_then_else
-- BEGIN TIS changes --
- tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
+ tis.private.plan: Stack([jumpto(perform(say_step))])
-- END TIS changes --
2017-10-24 16:56:53,772 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:53,772 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:53,776 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                 +++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([jumpto(perform(say_step))])
+ tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:53,776 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:53,776 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:53,780 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                                                                                  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:56:53,780 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:53,780 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:53,781 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:53,781 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:53,784 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.confirmation_yn(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:56:53,784 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:53,787 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(confirmation_action))])
- tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             -------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:56:53,787 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:53,787 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:53,791 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.plan: Stack([jumpto(perform(confirmation_action))])
+ tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:53,791 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:53,791 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:53,796 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          -------------------------
+ tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
-- END TIS changes --
2017-10-24 16:56:53,796 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:53,796 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:53,797 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:53,797 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:53,797 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:53,797 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:53,797 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:56:53,797 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:53,798 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:53,799 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857013.71
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:53,799 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:53,804 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:53,804 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:53,808 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:53,808 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:53,808 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:53,811 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:53,812 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:53,816 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:53,816 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:53,816 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:53,816 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:53,819 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:53,819 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:53,819 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:53,822 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:56:53,822 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:56:53,822 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:53,823 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None))
2017-10-24 16:56:53,823 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:53,823 - session_2017-10-24T16_56_00_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:53,823 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 16:56:53,823 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:56:53,823 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:56:53,824 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:53,824 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:53,825 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:53,825 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:53,826 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:53,826 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:56:53,827 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:53,827 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:53,828 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:53,828 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:53,830 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:53,830 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:53,830 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:56:53,830 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:53,830 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:53,830 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:56:53,831 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:56:53,831 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:53,831 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp') generated as u'Step ended'
2017-10-24 16:56:53,831 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:56:53,833 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:53,834 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:56:53,836 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:53,836 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:53,836 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:56:53,836 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:53,836 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:56:53,837 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:53,837 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:53,837 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8134830>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e8134998>]
2017-10-24 16:56:53,837 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8134830>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e8134998>], sender=GuiBackend, reason=None)
2017-10-24 16:56:53,838 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:53,838 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None))
2017-10-24 16:56:53,838 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:56:53,838 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Step ended"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:53,839 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:53,840 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:56:53,840 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:56:53,840 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Step ended"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:56:53,841 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:53,841 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8134830>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e8134998>], sender=GuiBackend, reason=None))
2017-10-24 16:56:53,841 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e8134830>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e8134998>], sender=GuiBackend, reason=None)
2017-10-24 16:56:53,841 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "say_step", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Step ended"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:53,842 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:53,842 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:53,871 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Step ended"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:53,871 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:53,871 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:53,871 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:53,871 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:53,871 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:53,871 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:53,872 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:53,872 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None))
2017-10-24 16:56:53,873 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857013.87
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:53,874 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:53,877 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 16:56:53,877 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:53,877 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:53,878 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:53,885 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:53,885 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:53,885 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:53,888 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:56:53,888 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:53,888 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:53,888 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:53,888 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:53,888 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:53,888 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:53,888 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:53,888 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:53,889 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:53,889 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:53,889 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:53,893 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:56:53,893 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:53,893 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:53,893 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:53,894 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:53,894 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:53,897 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:53,897 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:53,897 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:53,897 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:53,897 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:53,897 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:53,897 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:53,898 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:53,898 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:53,898 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:53,898 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:53,898 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:53,898 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:53,898 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:53,898 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:53,899 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:53,899 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:53,899 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:53,899 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:53,899 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:53,899 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:53,900 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:53,903 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:56:53,903 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:53,903 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:53,904 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:53,904 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:53,904 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:53,905 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:53,905 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 16:56:53,905 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:53,905 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:53,905 - session_2017-10-24T16_56_00_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7ff5e80e7710>:1.0
2017-10-24 16:56:53,906 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:54,906 - session_2017-10-24T16_56_00_0 - DEBUG - Timeout fired
2017-10-24 16:56:54,906 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:54,906 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:54,906 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:54,906 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:54,907 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857014.91
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:54,908 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:54,908 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:54,910 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:54,911 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:54,916 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:56:54,916 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:54,916 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:54,919 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:54,919 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:54,919 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:54,919 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:54,919 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:54,919 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:54,920 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:54,920 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:54,920 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:56:54,920 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:54,920 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:56:54,920 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:54,920 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:54,920 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:54,920 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:54,920 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:54,920 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:54,920 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:54,921 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:54,921 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:54,921 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:54,921 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:54,921 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:54,922 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:54,922 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:54,922 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:54,922 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:54,922 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:54,923 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:54,923 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:54,923 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:54,924 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857014.91
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:54,924 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:54,929 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:54,929 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:54,931 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:56:54,931 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:54,931 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:54,934 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
- tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:54,935 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:54,935 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:54,935 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:54,938 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:54,938 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:54,938 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:54,940 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:56:54,941 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:54,941 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:57,283 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:56:57,283 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:57,283 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 16:56:57,283 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:57,284 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:57,284 - session_2017-10-24T16_56_00_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:56:57,284 - session_2017-10-24T16_56_00_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:56:57,285 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:56:57,285 - session_2017-10-24T16_56_00_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 16:56:57,285 - session_2017-10-24T16_56_00_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 16:56:57,285 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:56:57,285 - session_2017-10-24T16_56_00_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:56:57,286 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:56:57,286 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:57,286 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:57,286 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:57,286 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:57,287 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 16:56:57,287 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:57,288 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:57,288 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:57,288 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:57,290 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:57,290 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:57,290 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:57,290 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:57,291 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp') generated as u'Are you done?'
2017-10-24 16:56:57,291 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:56:57,293 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:57,295 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:57,295 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:57,295 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:57,296 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:57,296 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:56:57,296 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e81291b8>]
2017-10-24 16:56:57,296 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e81291b8>], sender=GuiBackend, reason=None)
2017-10-24 16:56:57,296 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:57,297 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:56:57,297 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:56:57,297 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:57,297 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:56:57,297 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 16:56:57,297 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:57,298 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None))
2017-10-24 16:56:57,298 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:56:57,298 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Are you done?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:57,299 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:57,299 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e81291b8>], sender=GuiBackend, reason=None))
2017-10-24 16:56:57,299 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7ff5e81291b8>], sender=GuiBackend, reason=None)
2017-10-24 16:56:57,299 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:57,300 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:57,300 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:57,334 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["Are you done?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:57,335 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:57,335 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:57,335 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:57,335 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:57,335 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:57,335 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:57,335 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:56:57,336 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None))
2017-10-24 16:56:57,337 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857017.34
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:57,337 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:57,337 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:57,338 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:57,341 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:56:57,341 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:57,341 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:57,345 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:57,345 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:57,345 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:57,345 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:57,345 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:57,345 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:57,345 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:57,346 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:57,346 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:57,346 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:57,346 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:57,346 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:57,349 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.confirmation_yn(X)])
-- END TIS changes --
2017-10-24 16:56:57,349 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:57,349 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:57,350 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:57,350 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:57,350 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:57,350 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:57,350 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:57,350 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:57,350 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:57,350 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:57,351 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:57,351 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:57,351 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:57,351 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:57,351 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:57,351 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:57,351 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:57,352 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:57,352 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:57,352 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:57,352 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:57,356 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 16:56:57,356 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:57,356 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:57,356 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:57,356 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:57,356 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:57,357 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:57,357 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:56:57,357 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:57,358 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:56:57,358 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:57,358 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:57,359 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:56:57,360 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:57,361 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857017.36
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([?X.confirmation_yn(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:57,361 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:57,366 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
-- END TIS changes --
2017-10-24 16:56:57,371 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^^
-- END TIS changes --
2017-10-24 16:56:57,372 - session_2017-10-24T16_56_00_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:56:57,372 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:57,378 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
?                                        ^ ^^^^  ^^^^^ ^^^^^^^^^                                    ^^                              ^
+ tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
?                                       + ^^^ ^^ ++++ ^^ ^                                   + ^                              ^^                 +++++++++++++++++++++++++
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 16:56:57,378 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:57,385 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:56:57,385 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:57,386 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:57,389 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:57,389 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:57,389 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:57,394 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:57,394 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:57,394 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:57,394 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:57,394 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:57,394 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:57,394 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:56:57,395 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:57,395 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:56:57,395 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:57,399 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {confirmation_yn("go to next")}
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
?                                                                                              +++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:56:57,399 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:57,399 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:57,404 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
?                                                                                                                             +++++++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             -------------------------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:56:57,405 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:57,409 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          --------------------------------
+ tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:57,409 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:57,409 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:57,409 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:57,409 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:57,409 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:57,409 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:57,409 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:57,410 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:57,410 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:57,410 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:57,410 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:57,414 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          ----------------------------------
+ tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:57,414 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:57,414 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:57,417 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_if_then_else
-- BEGIN TIS changes --
- tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
+ tis.private.plan: Stack([jumpto(perform(say_step))])
-- END TIS changes --
2017-10-24 16:56:57,417 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:57,417 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:57,421 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                 +++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([jumpto(perform(say_step))])
+ tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:56:57,421 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:57,422 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:57,425 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                                                                                  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:56:57,425 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:57,425 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:57,426 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:57,426 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:57,429 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.confirmation_yn(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:56:57,429 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:57,432 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(confirmation_action))])
- tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             -------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:56:57,432 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:57,432 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:57,436 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.plan: Stack([jumpto(perform(confirmation_action))])
+ tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:56:57,436 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:57,436 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:57,441 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          -------------------------
+ tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
-- END TIS changes --
2017-10-24 16:56:57,441 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:57,441 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:57,442 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:57,442 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:57,442 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:57,442 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:57,442 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:56:57,442 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:57,442 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:57,444 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857017.36
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:57,444 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:57,448 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:57,448 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:57,452 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:57,452 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:57,452 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:57,456 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:56:57,457 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:57,460 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:57,460 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:57,460 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:57,460 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:57,463 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:57,463 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:57,463 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:57,466 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:56:57,467 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:56:57,467 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:57,467 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None))
2017-10-24 16:56:57,467 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:57,468 - session_2017-10-24T16_56_00_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:56:57,468 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 16:56:57,468 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:56:57,468 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:56:57,468 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:57,469 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:57,469 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:57,469 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:57,470 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:57,470 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:56:57,471 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:56:57,471 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:56:57,471 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:57,472 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:57,474 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:57,474 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:57,474 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:56:57,474 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:57,474 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:57,474 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:56:57,475 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:56:57,475 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:57,475 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp') generated as u'Step ended'
2017-10-24 16:56:57,476 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:56:57,477 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:57,479 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:56:57,480 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:56:57,481 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:56:57,481 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:56:57,481 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:57,481 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:56:57,481 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:56:57,481 - session_2017-10-24T16_56_00_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:56:57,482 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e80e7710>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e817b0e0>]
2017-10-24 16:56:57,482 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e80e7710>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e817b0e0>], sender=GuiBackend, reason=None)
2017-10-24 16:56:57,482 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posted event
2017-10-24 16:56:57,482 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None))
2017-10-24 16:56:57,482 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:56:57,483 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Step ended"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:56:57,483 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:57,483 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:56:57,483 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:56:57,484 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Step ended"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:56:57,485 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:57,485 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e80e7710>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e817b0e0>], sender=GuiBackend, reason=None))
2017-10-24 16:56:57,485 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7ff5e80e7710>, <tdm.tdm_gui_protocol.Popup instance at 0x7ff5e817b0e0>], sender=GuiBackend, reason=None)
2017-10-24 16:56:57,485 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "say_step", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Step ended"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:56:57,486 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:57,487 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:57,511 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Step ended"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:56:57,512 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:56:57,512 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None))
2017-10-24 16:56:57,512 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None)
2017-10-24 16:56:57,512 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:56:57,512 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:57,512 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:57,512 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:56:57,513 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None))
2017-10-24 16:56:57,514 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857017.51
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:57,514 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:57,518 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 16:56:57,518 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:57,518 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:57,518 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:57,525 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:57,526 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:57,526 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:57,528 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:56:57,528 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:57,529 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:57,529 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:57,529 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:57,529 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:57,529 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:57,529 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:57,529 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:57,529 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:57,529 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:56:57,529 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:57,533 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:56:57,533 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:57,533 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:57,534 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:57,534 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:57,535 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:57,538 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:56:57,538 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:56:57,538 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:57,538 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:56:57,538 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:57,538 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:57,538 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:57,538 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:57,538 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:57,538 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:57,539 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:57,539 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:57,539 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:57,539 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:57,539 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:57,539 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:57,539 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:57,540 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:57,540 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:57,540 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:57,540 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:57,540 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:57,543 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:56:57,543 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:57,543 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:57,544 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:56:57,544 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:57,544 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:56:57,544 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:56:57,544 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 16:56:57,545 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:57,545 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:56:57,546 - session_2017-10-24T16_56_00_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7ff5e8100248>:1.0
2017-10-24 16:56:57,546 - session_2017-10-24T16_56_00_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:56:58,546 - session_2017-10-24T16_56_00_0 - DEBUG - Timeout fired
2017-10-24 16:56:58,546 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:58,546 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:58,546 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:56:58,546 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:56:58,548 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857018.55
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:58,548 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:56:58,548 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:56:58,551 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:58,551 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:56:58,556 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:56:58,556 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:56:58,557 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:56:58,559 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:58,559 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:56:58,559 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:56:58,560 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:56:58,560 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:56:58,560 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:56:58,560 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:56:58,560 - session_2017-10-24T16_56_00_0 - INFO - BEGIN integrate_moves
2017-10-24 16:56:58,560 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:56:58,560 - session_2017-10-24T16_56_00_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:56:58,560 - session_2017-10-24T16_56_00_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:56:58,560 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:integrate
2017-10-24 16:56:58,560 - session_2017-10-24T16_56_00_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:56:58,560 - session_2017-10-24T16_56_00_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:56:58,560 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:58,561 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:58,561 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:58,561 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:56:58,561 - session_2017-10-24T16_56_00_0 - INFO - breaking out of accommodate
2017-10-24 16:56:58,561 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:56:58,561 - session_2017-10-24T16_56_00_0 - INFO - END integrate_moves
2017-10-24 16:56:58,561 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:58,562 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:58,562 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:56:58,562 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:56:58,562 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:56:58,563 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:56:58,563 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:56:58,563 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:56:58,563 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:56:58,563 - session_2017-10-24T16_56_00_0 - INFO - running ISU module: select
2017-10-24 16:56:58,565 - session_2017-10-24T16_56_00_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7ff5e8c0e090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7ff5e9445b90>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857018.55
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:56:58,565 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:56:58,569 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:58,569 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_action
2017-10-24 16:56:58,572 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:56:58,572 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:58,572 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:58,575 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
- tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:56:58,575 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:56:58,576 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:select_move
2017-10-24 16:56:58,576 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:56:58,578 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:56:58,578 - session_2017-10-24T16_56_00_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:56:58,579 - session_2017-10-24T16_56_00_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:56:58,581 - session_2017-10-24T16_56_00_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:56:58,582 - session_2017-10-24T16_56_00_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:56:58,582 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:57:54,003 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:57:54,003 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(STOP, None, sender=Backend, reason=None))
2017-10-24 16:57:54,004 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOP, None, sender=Backend, reason=None)
2017-10-24 16:57:54,004 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 16:57:54,004 - session_2017-10-24T16_56_00_0 - DEBUG - InterpretModule posts Event(STOPPED, None, sender=InterpretModule, reason=None)
2017-10-24 16:57:54,004 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 16:57:54,004 - session_2017-10-24T16_56_00_0 - DEBUG - DmeModule posts Event(STOPPED, None, sender=DmeModule, reason=None)
2017-10-24 16:57:54,004 - session_2017-10-24T16_56_00_0 - DEBUG - DeviceManager handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 16:57:54,004 - session_2017-10-24T16_56_00_0 - DEBUG - DeviceManager posts Event(STOPPED, None, sender=DeviceManager, reason=None)
2017-10-24 16:57:54,004 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 16:57:54,004 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule posts Event(STOPPED, None, sender=GenerateModule, reason=None)
2017-10-24 16:57:54,005 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 16:57:54,005 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend posts Event(STOPPED, None, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:57:54,005 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 16:57:54,005 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend posts Event(STOPPED, None, sender=GuiBackend, reason=None)
2017-10-24 16:57:54,005 - session_2017-10-24T16_56_00_0 - DEBUG - CogloadModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 16:57:54,006 - session_2017-10-24T16_56_00_0 - DEBUG - CogloadModule posts Event(STOPPED, None, sender=CogloadModule, reason=None)
2017-10-24 16:57:54,006 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:57:54,006 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:57:54,006 - session_2017-10-24T16_56_00_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:57:54,007 - session_2017-10-24T16_56_00_0 - DEBUG - Sent.
2017-10-24 16:57:54,008 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 16:57:54,008 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:57:54,008 - session_2017-10-24T16_56_00_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:57:54,008 - session_2017-10-24T16_56_00_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:57:54,009 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:57:54,010 - session_2017-10-24T16_56_00_0 - DEBUG - GenerateModule ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:57:54,012 - session_2017-10-24T16_56_00_0 - DEBUG - IndependentGuiBackend ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:57:54,014 - session_2017-10-24T16_56_00_0 - DEBUG - GuiBackend ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:57:54,014 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=InterpretModule, reason=None))
2017-10-24 16:57:54,014 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=InterpretModule, reason=None)
2017-10-24 16:57:54,014 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=DmeModule, reason=None))
2017-10-24 16:57:54,014 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=DmeModule, reason=None)
2017-10-24 16:57:54,015 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=DeviceManager, reason=None))
2017-10-24 16:57:54,015 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=DeviceManager, reason=None)
2017-10-24 16:57:54,015 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=GenerateModule, reason=None))
2017-10-24 16:57:54,015 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=GenerateModule, reason=None)
2017-10-24 16:57:54,015 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:57:54,015 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:57:54,015 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=GuiBackend, reason=None))
2017-10-24 16:57:54,015 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=GuiBackend, reason=None)
2017-10-24 16:57:54,015 - session_2017-10-24T16_56_00_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=CogloadModule, reason=None))
2017-10-24 16:57:54,015 - session_2017-10-24T16_56_00_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=CogloadModule, reason=None)

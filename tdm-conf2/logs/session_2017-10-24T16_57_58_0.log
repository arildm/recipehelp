2017-10-24 16:57:58,875 - session_2017-10-24T16_57_58_0 - DEBUG - Backend()
2017-10-24 16:57:58,876 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.initialize()
2017-10-24 16:57:58,907 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.add_module(DmeModule, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f119bd67f10>>, False])
2017-10-24 16:57:58,907 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.add_module(GenerateModule, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f119bd67f10>>, 'eng'])
2017-10-24 16:57:58,907 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.add_module(DeviceManager, args=[])
2017-10-24 16:57:58,907 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.add_module(CogloadModule, args=[])
2017-10-24 16:57:58,907 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, __init__) (previous state was None)
2017-10-24 16:57:58,908 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.add_module(GuiBackend, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f119bd67f10>>, True, 'disabled'])
2017-10-24 16:57:58,908 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.add_module(IndependentGuiBackend, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f119bd67f10>>])
2017-10-24 16:57:58,908 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.add_module(InterpretModule, args=[<bound method Backend.get_device_manager of <tdm.backend.Backend object at 0x7f119bd67f10>>, <bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f119bd67f10>>, 'eng', False, True])
2017-10-24 16:57:58,908 - session_2017-10-24T16_57_58_0 - DEBUG - Backend initialized
2017-10-24 16:57:58,908 - session_2017-10-24T16_57_58_0 - DEBUG - Backend started in directory '/home/gusmatssar/recipedialogue/tdm'
2017-10-24 16:57:58,908 - session_2017-10-24T16_57_58_0 - DEBUG - Backend uses TDM version '5.0.0'
2017-10-24 16:57:58,908 - session_2017-10-24T16_57_58_0 - DEBUG - Backend uses backend config {u'active_ddd': u'recipehelp', u'ddds': [u'recipehelp'], u'asr': u'none', u'use_recognition_profile': False, u'use_word_list_correction': False, u'supported_languages': [u'eng'], u'repeat_questions': False}
2017-10-24 16:57:58,909 - session_2017-10-24T16_57_58_0 - DEBUG - Backend uses language 'eng'
2017-10-24 16:57:58,909 - session_2017-10-24T16_57_58_0 - DEBUG - running module InterpretModule
2017-10-24 16:57:58,909 - session_2017-10-24T16_57_58_0 - DEBUG - running module DmeModule
2017-10-24 16:57:58,911 - session_2017-10-24T16_57_58_0 - DEBUG - running module DeviceManager
2017-10-24 16:57:58,911 - session_2017-10-24T16_57_58_0 - DEBUG - running module GenerateModule
2017-10-24 16:57:58,911 - session_2017-10-24T16_57_58_0 - DEBUG - running module IndependentGuiBackend
2017-10-24 16:57:58,911 - session_2017-10-24T16_57_58_0 - DEBUG - running module GuiBackend
2017-10-24 16:57:58,911 - session_2017-10-24T16_57_58_0 - DEBUG - running module CogloadModule
2017-10-24 16:57:58,911 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:57:58,912 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:57:58,912 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(REGISTER_BACKEND, None, sender=Backend, reason=None))
2017-10-24 16:57:58,912 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(REGISTER_BACKEND, None, sender=Backend, reason=None)
2017-10-24 16:57:58,913 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "Backend", "_reason": null, "event_type": "REGISTER_BACKEND"}
2017-10-24 16:57:58,913 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:57:58,913 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:57:58,945 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": null, "_sender": "Frontend", "_reason": null, "event_type": "FRONTEND_READY"}
2017-10-24 16:57:58,946 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:57:58,946 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FRONTEND_READY, None, sender=Frontend, reason=None))
2017-10-24 16:57:58,947 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FRONTEND_READY, None, sender=Frontend, reason=None)
2017-10-24 16:57:58,947 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(BACKEND_READY, None, sender=Backend, reason=None))
2017-10-24 16:57:58,947 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(BACKEND_READY, None, sender=Backend, reason=None)
2017-10-24 16:57:58,947 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "Backend", "_reason": null, "event_type": "BACKEND_READY"}
2017-10-24 16:57:58,948 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:57:58,948 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:57:58,950 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": null, "_sender": "Frontend", "_reason": null, "event_type": "START"}
2017-10-24 16:57:58,950 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:57:58,950 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(START, None, sender=Frontend, reason=None))
2017-10-24 16:57:58,950 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:57:58,951 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:57:58,951 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:57:58,951 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 16:57:58,951 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(START, None, sender=Frontend, reason=None))
2017-10-24 16:57:58,952 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857078.95
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(START, None, sender=Frontend, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: None
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([do(top)])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: None
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:57:58,952 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:57:58,952 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:57:58,952 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:57:58,955 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:57:58,955 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:57:58,955 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:57:58,957 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:57:58,957 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:57:58,958 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:57:58,958 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:57:58,958 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:57:58,958 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:57:58,958 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:57:58,958 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:57:58,958 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:57:58,958 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:57:58,958 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:57:58,958 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:57:58,959 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:57:58,959 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:57:58,959 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:57:58,959 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:57:58,959 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:57:58,960 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:57:58,960 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:57:58,960 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:57:58,960 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:57:58,960 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:57:58,960 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:57:58,963 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([do(top)])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 16:57:58,963 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:57:58,965 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 16:57:58,965 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:57:58,965 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:57:58,965 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:57:58,966 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:57:58,966 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:57:58,966 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:57:58,966 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:57:58,966 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:57:58,966 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:57:58,966 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:57:58,966 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:57:58,968 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857078.95
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(START, None, sender=Frontend, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: None
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: None
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:57:58,968 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:57:58,971 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.goals: stackset([])
+ tis.private.tmp.sys.goals: stackset([perform(top)])
?                                      ++++++++++++
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:57:58,971 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:57:58,973 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.goal(X))])
?                                                                  +++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:57:58,973 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:57:58,976 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
?                                       +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.goal(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 16:57:58,976 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:57:58,978 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
?                                                              +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:57:58,978 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:57:58,978 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:57:58,979 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:57:58,981 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:57:58,981 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:57:58,981 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:57:58,983 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: None
?                       ^^^^
+ tis.timeout.duration: 5.0
?                       ^^^
-- END TIS changes --
2017-10-24 16:57:58,983 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 16:57:58,983 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None))
2017-10-24 16:57:58,984 - session_2017-10-24T16_57_58_0 - DEBUG - DeviceManager handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:57:58,984 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:57:58,984 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:57:58,984 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:57:58,984 - session_2017-10-24T16_57_58_0 - DEBUG - CogloadModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 16:57:58,984 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None))
2017-10-24 16:57:58,984 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 16:57:58,984 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 16:57:58,985 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 16:57:58,985 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": {"ddd_name": "recipehelp", "language_code": "eng"}, "_sender": "DmeModule", "_reason": null, "event_type": "SET_DDD"}
2017-10-24 16:57:58,985 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:57:58,986 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:57:58,986 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:57:58,986 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:57:58,987 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:57:58,987 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None)))
2017-10-24 16:57:58,987 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None))
2017-10-24 16:57:58,987 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:57:58,988 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:57:58,988 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:57:58,988 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:57:58,989 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 16:57:58,989 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 16:57:58,989 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 16:57:58,989 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:57:58,989 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 16:57:58,990 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 16:57:58,990 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:57:58,990 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 16:57:58,990 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 16:57:58,991 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:57:58,992 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:57:58,992 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:57:58,993 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 16:57:58,993 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 16:57:58,993 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 16:57:58,993 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 16:57:58,993 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:57:58,993 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message []
2017-10-24 16:57:58,993 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 16:57:58,994 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:57:58,994 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 16:57:58,994 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 16:57:58,994 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:57:58,994 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:57:58,994 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 16:57:58,995 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 16:57:58,995 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:57:58,995 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:57:58,995 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:57:59,037 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:57:59,037 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:57:59,038 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 16:57:59,038 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 16:57:59,038 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:57:59,038 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:57:59,038 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:57:59,038 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:57:59,038 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 16:57:59,039 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857079.04
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:57:59,040 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:57:59,040 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:57:59,040 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:57:59,042 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: None
?                        ^^^^
+ tis.shared.lu.speaker: SYS
?                        ^^^
-- END TIS changes --
2017-10-24 16:57:59,043 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:57:59,043 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:57:59,045 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:57:59,045 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:57:59,045 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:57:59,045 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:57:59,045 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:57:59,045 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:57:59,045 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:57:59,045 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:57:59,045 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:57:59,045 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:57:59,046 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:57:59,046 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:57:59,049 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:57:59,049 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:57:59,050 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:57:59,050 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:57:59,050 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:57:59,050 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:57:59,053 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 16:57:59,053 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:57:59,053 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:57:59,053 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:57:59,053 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:57:59,053 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:57:59,053 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:57:59,053 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:57:59,053 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:57:59,054 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:57:59,054 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:57:59,054 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:57:59,054 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:57:59,054 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:57:59,054 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:57:59,054 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:57:59,054 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:57:59,054 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:57:59,055 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:57:59,055 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:57:59,055 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:57:59,055 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:57:59,057 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:57:59,057 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:57:59,058 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:57:59,058 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:57:59,058 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:57:59,058 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:57:59,058 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:57:59,059 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:57:59,060 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:57:59,060 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:57:59,060 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:02,285 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to a step"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:58:02,286 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:02,286 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None))
2017-10-24 16:58:02,286 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:02,286 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:02,286 - session_2017-10-24T16_57_58_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to a step"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:58:02,286 - session_2017-10-24T16_57_58_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:58:02,292 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:58:02,292 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])} for DDD 'recipehelp'
2017-10-24 16:58:02,292 - session_2017-10-24T16_57_58_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
2017-10-24 16:58:02,292 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:58:02,293 - session_2017-10-24T16_57_58_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AskMove": {"_type": "ask", "_ddd_name": "recipehelp", "_content": {"445f2b7f7189027ce75dac332c96dde0.WhQuestion": {"_type": "WHQ", "_content": {"24b0f339529d53d987534676834bafa7.LambdaAbstractedPredicateProposition": {"_ontology_name": "RecipehelpOntology", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.BuiltinSort": {"_dynamic": false, "_name": "string"}}, "name": "go_to_step", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to a step", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to a step"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to a step", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:58:02,293 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:02,293 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:58:02,293 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:58:02,293 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:02,293 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:02,294 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 16:58:02,294 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:02,294 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 16:58:02,294 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:02,295 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:02,295 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:02,295 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:02,297 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857082.3
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:02,297 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:02,300 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
-- END TIS changes --
2017-10-24 16:58:02,300 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:02,304 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                 ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                 ^
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
?                                                                                                                                ^
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
?                                                                                                                                ^
-- END TIS changes --
2017-10-24 16:58:02,305 - session_2017-10-24T16_57_58_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:58:02,305 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:02,309 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
?                                 -----------------------------------------------              ^^                                       ^^                              ^
+ tis.latest_moves: OpenQueue([#, Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')])
?                                               ^^^^^^^^                                      + ^                              ^                 +++++++++++++++++++++++++++
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 16:58:02,309 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:02,314 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:58:02,314 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:02,314 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:02,316 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:02,316 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:02,316 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:02,321 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([])
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
- tis.private.tmp.usr.plan: Stack([])
+ tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
- tis.private.tmp.usr.qud: stackset([])
+ tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                    ++++++++++
-- END TIS changes --
2017-10-24 16:58:02,321 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:02,321 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:02,321 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:02,321 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:02,321 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:02,321 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
2017-10-24 16:58:02,321 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:02,321 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
2017-10-24 16:58:02,321 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:02,325 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateUsrAsk
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
- tis.private.nim: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
- tis.shared.qud: stackset([?X.goal(X)])
+ tis.shared.qud: stackset([?X.go_to_step(X), ?X.goal(X)])
?                                ++++++++++++++++++
-- END TIS changes --
2017-10-24 16:58:02,325 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:02,325 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:02,328 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateISSUES2
-- BEGIN TIS changes --
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                                                        --------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 16:58:02,328 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:02,328 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:02,331 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: findIssuePlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                                                   - ^ ^ -----------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^ ^^
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 16:58:02,331 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:02,331 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:02,331 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:02,332 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:02,332 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:02,332 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:02,332 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:02,332 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:02,332 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:02,332 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:02,333 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:02,333 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:02,335 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.go_to_step(X), ?X.goal(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:58:02,335 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:02,335 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:02,336 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:02,336 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:02,336 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:02,336 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None)
2017-10-24 16:58:02,336 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:58:02,336 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:02,337 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857082.3
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:02,337 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:02,343 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                ++++++++++++++++++++++++++++++++
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                                      +++++++++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
+ tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 16:58:02,343 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:02,347 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                                                                                  +++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:58:02,347 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:02,350 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
-- END TIS changes --
2017-10-24 16:58:02,350 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:02,350 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:02,354 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.step_to_choose(X))])
-- END TIS changes --
2017-10-24 16:58:02,354 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:02,357 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
?                                                                                    +++++++++++++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.step_to_choose(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:02,357 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:02,357 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:02,357 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:02,360 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:02,360 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:02,360 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:02,362 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:02,363 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:02,363 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:02,364 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None))
2017-10-24 16:58:02,364 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None)
2017-10-24 16:58:02,364 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to a step", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:58:02,364 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:02,364 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:58:02,365 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:58:02,365 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:02,366 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:02,366 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:58:02,367 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:02,367 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:58:02,368 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:02,368 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:02,369 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:02,369 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={})
2017-10-24 16:58:02,370 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:58:02,370 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 16:58:02,370 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 16:58:02,370 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 16:58:02,370 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:02,370 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:58:02,370 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:58:02,370 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 16:58:02,371 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 16:58:02,371 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:02,371 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp') generated as u'Which step?'
2017-10-24 16:58:02,371 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None)
2017-10-24 16:58:02,373 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:02,375 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:02,375 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:58:02,375 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:02,375 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={})
2017-10-24 16:58:02,375 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:58:02,375 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 16:58:02,375 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 16:58:02,375 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 16:58:02,376 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:02,376 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message []
2017-10-24 16:58:02,376 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 16:58:02,376 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:58:02,376 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None))
2017-10-24 16:58:02,377 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None)
2017-10-24 16:58:02,377 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "", "Which step?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:58:02,378 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:02,378 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 16:58:02,378 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 16:58:02,378 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:58:02,379 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:02,379 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:02,384 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["", "", "Which step?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:58:02,384 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:02,384 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, , Which step?], sender=TextOutputComponent, reason=None))
2017-10-24 16:58:02,384 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, , Which step?], sender=TextOutputComponent, reason=None)
2017-10-24 16:58:02,385 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:58:02,385 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 16:58:02,385 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 16:58:02,385 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 16:58:02,385 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None))
2017-10-24 16:58:02,387 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857082.39
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:02,387 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:02,387 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:02,387 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:02,394 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
?            ^^
- tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:02,394 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:02,394 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:02,396 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:02,396 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:02,397 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:02,397 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:02,397 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:02,397 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:02,397 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:02,397 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:02,397 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:02,397 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:02,397 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:02,397 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:02,402 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:58:02,402 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:02,402 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:02,402 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:02,402 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:02,402 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:02,407 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
?                                                                       +++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:58:02,407 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:02,407 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:02,407 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:02,407 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:02,407 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:02,411 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.step_to_choose(X)])
-- END TIS changes --
2017-10-24 16:58:02,411 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:02,411 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:02,411 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:02,411 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:02,411 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:02,411 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:02,411 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:02,412 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:02,412 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:02,412 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:02,412 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:02,412 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:02,412 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:02,412 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:02,412 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:02,412 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:02,413 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:02,413 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:02,413 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:02,413 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:02,413 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:02,416 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:02,416 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:58:02,416 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:02,416 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:58:02,416 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:58:02,416 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:02,417 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:02,417 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:58:02,418 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:02,418 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:02,418 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:04,917 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "step one"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:58:04,917 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:04,917 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None))
2017-10-24 16:58:04,918 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:04,918 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:04,918 - session_2017-10-24T16_57_58_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "step one"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:58:04,918 - session_2017-10-24T16_57_58_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:58:04,920 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:58:04,920 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])} for DDD 'recipehelp'
2017-10-24 16:58:04,920 - session_2017-10-24T16_57_58_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
2017-10-24 16:58:04,920 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:58:04,921 - session_2017-10-24T16_57_58_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "step one"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "step one", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.CustomSort": {"_ontology_name": "RecipehelpOntology", "_dynamic": false, "_name": "step"}}, "value": "step1"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "step one", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:58:04,921 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:04,921 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:58:04,921 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:58:04,921 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:04,921 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:04,922 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 16:58:04,922 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:04,922 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 16:58:04,923 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:04,923 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:04,924 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:04,924 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:04,925 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857084.92
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.step_to_choose(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:04,926 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:04,930 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
-- END TIS changes --
2017-10-24 16:58:04,930 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:04,936 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
- tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
-- END TIS changes --
2017-10-24 16:58:04,942 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^^
-- END TIS changes --
2017-10-24 16:58:04,943 - session_2017-10-24T16_57_58_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:58:04,943 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:04,946 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')])
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 16:58:04,947 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:04,951 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
-- END TIS changes --
2017-10-24 16:58:04,951 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:04,951 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:04,954 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:04,955 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:04,955 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:04,961 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                                        ^^
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                                                      +++++++++++++++++++++++++++++++  ^^^^^^^^
- tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
+ tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
- tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                       ^ ^^
+ tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
?                                       ^^^^^^ ^^^^^^^
-- END TIS changes --
2017-10-24 16:58:04,961 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:04,961 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:04,961 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:04,961 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:04,962 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:04,962 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
2017-10-24 16:58:04,962 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:04,962 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
2017-10-24 16:58:04,962 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:04,965 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {step_to_choose(step1)}
- tis.shared.com: {}
+ tis.shared.com: {step_to_choose(step1)}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
-- END TIS changes --
2017-10-24 16:58:04,965 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:04,965 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:04,969 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {step_to_choose(step1)}
+ tis.shared.com: {step_to_choose(step1), resolved(?X.step_to_choose(X))}
- tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ------------------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 16:58:04,969 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:04,972 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
?                          -------------------------------
+ tis.private.plan: Stack([device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 16:58:04,972 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:04,973 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:04,973 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:04,973 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:04,973 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:04,973 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:04,973 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:04,973 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:04,973 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:04,973 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:04,973 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:04,976 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {}
+ tis.private.bel: {go_to_step("chose step1")}
- tis.private.plan: Stack([device_query(?X.go_to_step(X)), forget(step_to_choose)])
?                          --------------------------------
+ tis.private.plan: Stack([forget(step_to_choose)])
-- END TIS changes --
2017-10-24 16:58:04,977 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:04,977 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:04,980 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(step_to_choose)])
+ tis.private.plan: Stack([])
- tis.shared.com: {step_to_choose(step1), resolved(?X.step_to_choose(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 16:58:04,980 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:04,980 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:04,980 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:04,980 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:04,983 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.step_to_choose(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:58:04,983 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:04,983 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:04,983 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:04,983 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:04,984 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:04,984 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 16:58:04,984 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None)
2017-10-24 16:58:04,984 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None)
2017-10-24 16:58:04,984 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:04,985 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857084.92
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')])
tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.bel: {go_to_step("chose step1")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:04,985 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:04,989 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                         ---------------------------------
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.bel: {go_to_step("chose step1")}
- tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 16:58:04,989 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:04,992 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                                                 +++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:58:04,992 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:04,995 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
-- END TIS changes --
2017-10-24 16:58:04,995 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:04,998 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose step1")))])
- tis.private.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:04,998 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:04,998 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:04,998 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:05,000 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:05,000 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:05,001 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:05,003 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:58:05,003 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')])
2017-10-24 16:58:05,004 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose step1")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:05,004 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None))
2017-10-24 16:58:05,004 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 16:58:05,004 - session_2017-10-24T16_57_58_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 16:58:05,004 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None))
2017-10-24 16:58:05,004 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None)
2017-10-24 16:58:05,005 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": "step one", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:58:05,005 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:05,005 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None))
2017-10-24 16:58:05,006 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None)
2017-10-24 16:58:05,006 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "go_to_step", "grammar_entry": null, "value": "chose step1"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:05,007 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:05,007 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose step1")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:58:05,007 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose step1")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:05,007 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:58:05,008 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose step1")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:05,008 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose step1")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:05,009 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose step1")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:05,009 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp'), facts={go_to_step("chose step1")})
2017-10-24 16:58:05,010 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')
2017-10-24 16:58:05,010 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')
2017-10-24 16:58:05,011 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp') generated as u'Ok chose step1.'
2017-10-24 16:58:05,011 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose step1.], sender=GenerateModule, reason=None)
2017-10-24 16:58:05,012 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose step1")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:05,013 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok chose step1.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:58:05,014 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose step1")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:05,015 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:58:05,015 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')])
2017-10-24 16:58:05,015 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp'), facts={go_to_step("chose step1")})
2017-10-24 16:58:05,016 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')
2017-10-24 16:58:05,017 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.Popup instance at 0x7f1198dbde18>]
2017-10-24 16:58:05,017 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f1198dbde18>], sender=GuiBackend, reason=None)
2017-10-24 16:58:05,018 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:58:05,018 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose step1.], sender=GenerateModule, reason=None))
2017-10-24 16:58:05,018 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose step1.], sender=GenerateModule, reason=None)
2017-10-24 16:58:05,018 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok chose step1."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:58:05,019 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:05,019 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok chose step1.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:58:05,019 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok chose step1.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:58:05,019 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok chose step1."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:58:05,020 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:05,020 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f1198dbde18>], sender=GuiBackend, reason=None))
2017-10-24 16:58:05,020 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f1198dbde18>], sender=GuiBackend, reason=None)
2017-10-24 16:58:05,021 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok chose step1."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:58:05,022 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:05,023 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:05,026 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok chose step1."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:58:05,026 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:05,026 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok chose step1.], sender=TextOutputComponent, reason=None))
2017-10-24 16:58:05,027 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok chose step1.], sender=TextOutputComponent, reason=None)
2017-10-24 16:58:05,027 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:58:05,027 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok chose step1.], sender=TurnManager, reason=None)
2017-10-24 16:58:05,027 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok chose step1.], sender=TurnManager, reason=None)
2017-10-24 16:58:05,027 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok chose step1.], sender=TurnManager, reason=None)
2017-10-24 16:58:05,027 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok chose step1.], sender=TurnManager, reason=None))
2017-10-24 16:58:05,029 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857085.03
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok chose step1.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose step1")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {go_to_step("chose step1")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose step1")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:05,029 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:05,029 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:05,029 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:05,036 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
?            ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:05,036 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:05,036 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:05,038 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:05,038 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:05,038 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:05,039 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:05,039 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:05,039 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:05,039 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:05,039 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:05,039 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:05,039 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:05,039 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:05,039 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:05,043 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {go_to_step("chose step1")}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:05,043 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:05,043 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:05,047 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {go_to_step("chose step1")}
+ tis.shared.com: {go_to_step("chose step1"), resolved(?X.go_to_step(X))}
?                                           ++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                             ---------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 16:58:05,047 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:05,047 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:05,047 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:05,047 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:05,047 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:05,048 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:05,048 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:05,048 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:05,048 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:05,048 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:05,048 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:05,048 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:05,048 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:05,048 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:05,048 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:05,049 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:05,049 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:05,049 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:05,049 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:05,052 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:58:05,052 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None)
2017-10-24 16:58:05,052 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok chose step1.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:05,052 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None))
2017-10-24 16:58:05,052 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None)
2017-10-24 16:58:05,052 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "go_to_step", "grammar_entry": null, "value": "chose step1"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:05,053 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:05,053 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok chose step1.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 16:58:05,053 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok chose step1.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:05,054 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok chose step1.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:05,055 - session_2017-10-24T16_57_58_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f1198df7998>:1.0
2017-10-24 16:58:05,055 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:06,055 - session_2017-10-24T16_57_58_0 - DEBUG - Timeout fired
2017-10-24 16:58:06,055 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:06,055 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:06,055 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:06,055 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:06,056 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857086.06
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose step1")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {go_to_step("chose step1")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose step1")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {go_to_step("chose step1"), resolved(?X.go_to_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:06,056 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:06,057 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:06,059 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:06,059 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:06,063 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
-- END TIS changes --
2017-10-24 16:58:06,063 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:06,063 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:06,066 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:06,066 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:06,066 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:06,066 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:06,066 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:06,066 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:06,066 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:06,066 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:06,066 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:58:06,066 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:06,067 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:58:06,067 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:06,067 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:06,067 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:06,067 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:06,067 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:06,067 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:06,067 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:06,067 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:06,067 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:06,068 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:06,068 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:06,070 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 16:58:06,071 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:06,071 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:06,074 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {go_to_step("chose step1")}
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {go_to_step("chose step1"), resolved(?X.go_to_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 16:58:06,074 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:06,074 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:06,074 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:06,074 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:06,074 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:06,074 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:06,075 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:06,075 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:06,075 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:06,075 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:58:06,075 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:06,076 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857086.06
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {go_to_step("chose step1")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:06,076 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:06,080 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^  ^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                +++ ^^^^ +++ ^^^^^^^
- tis.private.tmp.sys.bel: {go_to_step("chose step1")}
+ tis.private.tmp.sys.bel: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                                      ---------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:58:06,081 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:06,083 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:58:06,083 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:06,085 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 16:58:06,085 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:06,088 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:06,088 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:06,088 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:06,088 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:06,091 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:06,091 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:06,091 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:06,093 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:58:06,094 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:06,094 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:08,581 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:58:08,582 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:08,582 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 16:58:08,582 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:08,582 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:08,582 - session_2017-10-24T16_57_58_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:58:08,582 - session_2017-10-24T16_57_58_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:58:08,584 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:58:08,584 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 16:58:08,584 - session_2017-10-24T16_57_58_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 16:58:08,585 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:58:08,585 - session_2017-10-24T16_57_58_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:58:08,585 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:08,585 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:58:08,585 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:58:08,585 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:08,586 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:08,586 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 16:58:08,586 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:08,587 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:58:08,587 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,587 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,588 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,589 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 16:58:08,589 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 16:58:08,589 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 16:58:08,589 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:08,589 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 16:58:08,590 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 16:58:08,590 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:08,590 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 16:58:08,590 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 16:58:08,591 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,593 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,593 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:58:08,593 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:08,593 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 16:58:08,593 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 16:58:08,593 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 16:58:08,593 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:08,594 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1198df7248>]
2017-10-24 16:58:08,594 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1198df7248>], sender=GuiBackend, reason=None)
2017-10-24 16:58:08,594 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:58:08,594 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:58:08,594 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:58:08,595 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:08,595 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:08,595 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 16:58:08,595 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:08,596 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 16:58:08,596 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 16:58:08,596 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:58:08,597 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:08,597 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1198df7248>], sender=GuiBackend, reason=None))
2017-10-24 16:58:08,597 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1198df7248>], sender=GuiBackend, reason=None)
2017-10-24 16:58:08,598 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:58:08,598 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:08,598 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:08,607 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:58:08,607 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:08,607 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 16:58:08,608 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 16:58:08,608 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:58:08,608 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:58:08,608 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:58:08,608 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 16:58:08,608 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 16:58:08,610 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857088.61
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:08,610 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:08,610 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:08,610 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:08,616 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:58:08,616 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:08,616 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:08,618 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:08,618 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:08,618 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:08,619 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:08,619 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:08,619 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:08,619 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:08,619 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:08,619 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:08,619 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:08,619 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:08,619 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:08,623 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:58:08,623 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:08,624 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:08,624 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:08,624 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:08,624 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:08,627 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 16:58:08,627 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:08,627 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:08,627 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:08,627 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:08,627 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:08,628 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:08,628 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:08,628 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:08,628 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:08,628 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:08,628 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:08,628 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:08,628 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:08,628 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:08,628 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:08,629 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:08,629 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:08,629 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:08,629 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:08,629 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:08,629 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:08,632 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 16:58:08,632 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:58:08,632 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:08,632 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:58:08,632 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:58:08,632 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:08,633 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:08,633 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:58:08,633 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:08,633 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:08,634 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,634 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,634 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,635 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:08,636 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857088.64
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:08,636 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:08,640 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 16:58:08,640 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:08,646 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
- tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                              ^
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                              ^
-- END TIS changes --
2017-10-24 16:58:08,647 - session_2017-10-24T16_57_58_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:58:08,647 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:08,653 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 16:58:08,654 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:08,660 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:58:08,660 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:08,660 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:08,663 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:08,663 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:08,663 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:08,668 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                                                      -------------------------------  ^^^^^^^^
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                                        ^^
- tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
+ tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
- tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
?                                       ^^^^^^ ^^^^^^^
+ tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                       ^ ^^
-- END TIS changes --
2017-10-24 16:58:08,668 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:08,668 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:08,668 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:08,668 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:08,668 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:08,668 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:58:08,669 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:08,669 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:58:08,669 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:08,672 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateUsrRequest
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
?                          ++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:58:08,672 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:08,672 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:08,675 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateISSUES3
-- BEGIN TIS changes --
- tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                                                  --------------------------
+ tis.shared.goals: stackset([perform(go_to_next), perform(top)])
-- END TIS changes --
2017-10-24 16:58:08,675 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:08,675 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:08,679 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
+ tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
-- END TIS changes --
2017-10-24 16:58:08,679 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:08,679 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:08,679 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:08,679 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:08,680 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:08,680 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:08,680 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:08,680 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:08,680 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:08,680 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:08,683 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.bel: {}
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:58:08,683 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:08,683 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:08,684 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:08,684 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:08,686 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.goal(X)])
?                           ----------
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:58:08,687 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:08,687 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:08,687 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:08,687 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:08,687 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:08,687 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:58:08,687 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:58:08,688 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:08,689 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857088.64
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:08,689 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:08,693 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                              +++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 16:58:08,693 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:08,697 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:08,697 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:08,700 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:08,700 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:08,700 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:08,700 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:08,702 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:08,702 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:08,702 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:08,705 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:58:08,705 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:58:08,705 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:08,706 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 16:58:08,706 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:58:08,706 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:58:08,706 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:08,706 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:58:08,707 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:58:08,707 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:08,708 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:08,708 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:58:08,709 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:08,709 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:58:08,709 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,709 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,710 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,710 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 16:58:08,711 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:58:08,711 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 16:58:08,711 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:08,711 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:58:08,711 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:58:08,711 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:08,712 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp') generated as u'Next'
2017-10-24 16:58:08,712 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Next], sender=GenerateModule, reason=None)
2017-10-24 16:58:08,713 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,714 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:58:08,715 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,715 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:58:08,715 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:58:08,715 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 16:58:08,715 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:58:08,716 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 16:58:08,716 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:08,716 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1198df7518>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1198df7cf8>]
2017-10-24 16:58:08,716 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1198df7518>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1198df7cf8>], sender=GuiBackend, reason=None)
2017-10-24 16:58:08,717 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:58:08,717 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Next], sender=GenerateModule, reason=None))
2017-10-24 16:58:08,717 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Next], sender=GenerateModule, reason=None)
2017-10-24 16:58:08,717 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Next"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:58:08,718 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:08,718 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Next}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:58:08,718 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:58:08,718 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Next"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:58:08,719 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:08,719 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1198df7518>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1198df7cf8>], sender=GuiBackend, reason=None))
2017-10-24 16:58:08,719 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1198df7518>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1198df7cf8>], sender=GuiBackend, reason=None)
2017-10-24 16:58:08,720 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "go_to_next", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Next"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:58:08,721 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:08,721 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:08,734 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Next"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:58:08,735 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:08,735 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Next], sender=TextOutputComponent, reason=None))
2017-10-24 16:58:08,735 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Next], sender=TextOutputComponent, reason=None)
2017-10-24 16:58:08,735 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:58:08,735 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Next], sender=TurnManager, reason=None)
2017-10-24 16:58:08,735 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Next], sender=TurnManager, reason=None)
2017-10-24 16:58:08,735 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Next], sender=TurnManager, reason=None)
2017-10-24 16:58:08,736 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Next], sender=TurnManager, reason=None))
2017-10-24 16:58:08,737 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857088.74
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:08,737 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:08,737 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:08,737 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:08,743 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:08,743 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:08,743 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:08,746 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:58:08,747 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:08,747 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:08,747 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:08,747 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:08,747 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:08,747 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:08,747 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:08,748 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:08,748 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:08,748 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:08,748 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:08,751 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:58:08,752 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:08,752 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:08,752 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:08,752 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:08,752 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:08,755 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {device_activity_terminated(go_to_next)}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:08,755 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:08,755 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:08,759 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(say_step))])
- tis.shared.goals: stackset([perform(go_to_next), perform(top)])
?                                     ---------------------
+ tis.shared.goals: stackset([perform(top)])
- tis.shared.previous_goal: None
?                           ^
+ tis.shared.previous_goal: perform(go_to_next)
?                           ^^^^ +++++++++  +++
-- END TIS changes --
2017-10-24 16:58:08,759 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:08,759 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:08,759 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:08,759 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:08,759 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:08,759 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:08,759 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:08,759 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:08,759 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:08,759 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:08,760 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:08,760 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:08,763 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([jumpto(perform(say_step))])
+ tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([perform(say_step), perform(top)])
?                                     +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:58:08,763 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:08,763 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:08,767 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
- tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:58:08,767 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:08,767 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:08,767 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:08,767 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:08,767 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:08,767 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:08,767 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:08,768 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:08,768 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:08,770 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:58:08,770 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:58:08,770 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:08,772 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857088.74
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next)}
tis.shared.goals: stackset([perform(say_step), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:08,772 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:08,778 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
?                                                                 ^^^ ^^                                          ^^  --- ^^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                                                ++ ^ ^^^                                          ^^^ +  ^
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.tmp.sys.com: {}
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
+ tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
- tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                              ^^  --- ^^
+ tis.private.tmp.sys.goals: stackset([perform(say_step), perform(top)])
?                                              ^^^ +  ^
-- END TIS changes --
2017-10-24 16:58:08,778 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:08,781 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:08,781 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:08,784 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:08,784 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:08,784 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:08,784 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:08,786 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:08,787 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:08,787 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:08,789 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:08,789 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:58:08,789 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Next], sender=TurnManager, reason=None))
2017-10-24 16:58:08,790 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:58:08,790 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:58:08,790 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:08,790 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:08,790 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Next], sender=TurnManager, reason=None)))
2017-10-24 16:58:08,791 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Next], sender=TurnManager, reason=None))
2017-10-24 16:58:08,791 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:58:08,792 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,792 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,793 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,793 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 16:58:08,793 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:08,793 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:08,793 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp') generated as u'Step ended'
2017-10-24 16:58:08,794 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:58:08,794 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,795 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:58:08,796 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(go_to_next), current_goal: perform(say_step), moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,796 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:58:08,796 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:58:08,796 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 16:58:08,797 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:08,798 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1198df7f80>, <tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1198df7d40>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1198de50e0>]
2017-10-24 16:58:08,798 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1198df7f80>, <tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1198df7d40>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1198de50e0>], sender=GuiBackend, reason=None)
2017-10-24 16:58:08,798 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:58:08,798 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Step ended], sender=GenerateModule, reason=None))
2017-10-24 16:58:08,798 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:58:08,798 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Step ended"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:58:08,799 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:08,799 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:58:08,799 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:58:08,799 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Step ended"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:58:08,800 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:08,800 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1198df7f80>, <tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1198df7d40>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1198de50e0>], sender=GuiBackend, reason=None))
2017-10-24 16:58:08,800 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1198df7f80>, <tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1198df7d40>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1198de50e0>], sender=GuiBackend, reason=None)
2017-10-24 16:58:08,800 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}, {"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "say_step", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Step ended"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:58:08,801 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:08,801 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:08,871 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["Step ended"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:58:08,872 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:08,872 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Step ended], sender=TextOutputComponent, reason=None))
2017-10-24 16:58:08,872 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Step ended], sender=TextOutputComponent, reason=None)
2017-10-24 16:58:08,873 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:58:08,873 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:08,873 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:08,873 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:08,873 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None))
2017-10-24 16:58:08,875 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857088.87
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([perform(say_step), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next)}
tis.shared.goals: stackset([perform(say_step), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(go_to_next)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:08,875 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:08,875 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:08,875 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:08,880 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:58:08,880 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:08,880 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:08,883 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:58:08,883 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:08,883 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:08,883 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:08,883 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:08,883 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:08,883 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:08,883 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:08,884 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:08,884 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:08,884 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:08,884 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:08,887 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {device_activity_terminated(go_to_next)}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
?                                                        ++++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:08,887 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:08,888 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:08,891 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(confirmation_action))])
- tis.shared.goals: stackset([perform(say_step), perform(top)])
?                                     -------------------
+ tis.shared.goals: stackset([perform(top)])
- tis.shared.previous_goal: perform(go_to_next)
?                                   ^^  --- ^^
+ tis.shared.previous_goal: perform(say_step)
?                                   ^^^ +  ^
-- END TIS changes --
2017-10-24 16:58:08,891 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:08,891 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:08,891 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:08,891 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:08,891 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:08,891 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:08,891 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:08,891 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:08,892 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:08,892 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:08,892 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:08,892 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:08,897 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([jumpto(perform(confirmation_action))])
+ tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:58:08,897 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:08,897 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:08,900 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          -------------------------
+ tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:08,900 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:08,901 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:08,901 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:08,901 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:08,901 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:08,901 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:08,902 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:08,902 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:08,902 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:08,904 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:08,904 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:58:08,905 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:08,906 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857088.87
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
tis.private.tmp.sys.goals: stackset([perform(say_step), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:08,906 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:08,912 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.com: {device_activity_terminated(go_to_next)}
+ tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
?                                                                 ++++++++++++++++++++++++++++++++++++++
- tis.private.tmp.sys.goals: stackset([perform(say_step), perform(top)])
?                                              ^ ^ ^ ^^
+ tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
?                                              ^^^^^^^ ^^^^ ^^ ^^^
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:08,912 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:08,915 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.confirmation_yn(X))])
?                                                                  ++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:58:08,915 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:08,918 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
?                                       +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.confirmation_yn(X))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:58:08,918 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:08,921 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))])
?                                                              ++++++++++++++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:08,921 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:08,921 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:08,921 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:08,924 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:08,924 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:08,924 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:08,926 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:58:08,927 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:08,927 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None))
2017-10-24 16:58:08,927 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:58:08,927 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:58:08,927 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:08,928 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:08,928 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None)))
2017-10-24 16:58:08,928 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [Step ended], sender=TurnManager, reason=None))
2017-10-24 16:58:08,929 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:58:08,929 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,929 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,931 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,931 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 16:58:08,931 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 16:58:08,931 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 16:58:08,931 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:08,932 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 16:58:08,932 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 16:58:08,932 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:08,932 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp') generated as u'Are you done?'
2017-10-24 16:58:08,932 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:58:08,934 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,936 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:08,936 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:58:08,936 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:08,937 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 16:58:08,937 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 16:58:08,937 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 16:58:08,937 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:08,937 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1198df73f8>]
2017-10-24 16:58:08,937 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1198df73f8>], sender=GuiBackend, reason=None)
2017-10-24 16:58:08,938 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:58:08,938 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Are you done?], sender=GenerateModule, reason=None))
2017-10-24 16:58:08,938 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:58:08,938 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Are you done?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:58:08,938 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:08,938 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1198df73f8>], sender=GuiBackend, reason=None))
2017-10-24 16:58:08,939 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1198df73f8>], sender=GuiBackend, reason=None)
2017-10-24 16:58:08,939 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:58:08,940 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:08,940 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:08,980 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Are you done?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:58:08,981 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:08,981 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Are you done?], sender=TextOutputComponent, reason=None))
2017-10-24 16:58:08,981 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Are you done?], sender=TextOutputComponent, reason=None)
2017-10-24 16:58:08,981 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:58:08,981 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:08,981 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:08,981 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:08,982 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Are you done?], sender=TurnManager, reason=None))
2017-10-24 16:58:08,983 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857088.98
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Are you done?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:08,983 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:08,983 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:08,983 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:08,989 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:08,989 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:08,989 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:08,992 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:08,992 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:08,992 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:08,992 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:08,992 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:08,993 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:08,993 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:08,993 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:08,993 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:08,993 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:08,993 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:08,993 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:08,997 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:58:08,997 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:08,998 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:08,998 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:08,998 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:08,998 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:09,002 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.confirmation_yn(X)])
-- END TIS changes --
2017-10-24 16:58:09,002 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:09,002 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:09,003 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:09,003 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:09,003 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:09,003 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:09,003 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:09,003 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:09,003 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:09,003 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:09,003 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:09,003 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:09,003 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:09,004 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:09,004 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:09,004 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:09,004 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:09,004 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:09,005 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:09,005 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:09,005 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:09,008 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 16:58:09,008 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:58:09,008 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:09,008 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 16:58:09,008 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 16:58:09,008 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:09,009 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:09,009 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:58:09,009 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:09,010 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:09,010 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:12,339 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:58:12,339 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:12,339 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 16:58:12,339 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:12,339 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:12,339 - session_2017-10-24T16_57_58_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:58:12,339 - session_2017-10-24T16_57_58_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:58:12,340 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:58:12,340 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 16:58:12,340 - session_2017-10-24T16_57_58_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 16:58:12,341 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:58:12,341 - session_2017-10-24T16_57_58_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:58:12,341 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:12,342 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:58:12,342 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:58:12,342 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:12,342 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:12,342 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 16:58:12,343 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:12,343 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 16:58:12,344 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:12,344 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:12,344 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:12,345 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:12,346 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857092.34
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([?X.confirmation_yn(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:12,346 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:12,351 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
-- END TIS changes --
2017-10-24 16:58:12,356 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^^
-- END TIS changes --
2017-10-24 16:58:12,357 - session_2017-10-24T16_57_58_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:58:12,357 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:12,361 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 16:58:12,362 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:12,367 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:12,367 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:12,367 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:12,370 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:12,370 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:12,370 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:12,377 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.bel: {}
- tis.private.tmp.usr.com: {}
+ tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
+ tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
- tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                                      ^  ^
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                                                      ^ +++++ ^^^^^^^   ++++++++++++++++++++++++++++++
- tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
+ tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                       ^  ^
+ tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
?                                       ^ +++++ ^^^^^^^
-- END TIS changes --
2017-10-24 16:58:12,377 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:12,377 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:12,377 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:12,378 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:12,378 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:12,378 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:58:12,378 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:12,378 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:58:12,378 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:12,383 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {confirmation_yn("go to next")}
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
?                                                                                              +++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:58:12,383 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:12,383 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:12,390 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
?                                                                                                                             +++++++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             -------------------------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:58:12,390 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:12,394 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          --------------------------------
+ tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:12,394 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:12,395 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:12,395 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:12,395 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:12,395 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:12,395 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:12,395 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:12,395 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:12,395 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:12,395 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:12,395 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:12,401 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
?                                                                                                                                                                                                       ++++++++++++++++++
- tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          ----------------------------------
+ tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:12,401 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:12,401 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:12,404 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_if_then_else
-- BEGIN TIS changes --
- tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
+ tis.private.plan: Stack([jumpto(perform(say_step))])
-- END TIS changes --
2017-10-24 16:58:12,404 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:12,404 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:12,408 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                 +++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([jumpto(perform(say_step))])
+ tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:58:12,408 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:12,408 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:12,413 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                                                                                  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:58:12,413 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:12,413 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:12,413 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:12,413 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:12,416 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.confirmation_yn(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:58:12,416 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:12,420 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(confirmation_action))])
- tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             -------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:58:12,420 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:12,420 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:12,424 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.plan: Stack([jumpto(perform(confirmation_action))])
+ tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:12,424 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:12,424 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:12,429 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          -------------------------
+ tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
-- END TIS changes --
2017-10-24 16:58:12,429 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:12,429 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:12,430 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:12,430 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:12,430 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:12,430 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:58:12,430 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:58:12,430 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:12,431 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:12,432 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857092.34
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:12,432 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:12,439 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
?                                                                                                                                                                                                               ++++++++++++++++++
-- END TIS changes --
2017-10-24 16:58:12,439 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:12,443 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:12,443 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:12,443 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:12,447 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:12,447 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:12,450 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:12,451 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:12,451 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:12,451 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:12,454 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:12,454 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:12,454 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:12,457 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:58:12,457 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:58:12,457 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:12,458 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None))
2017-10-24 16:58:12,458 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:58:12,458 - session_2017-10-24T16_57_58_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:58:12,458 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 16:58:12,458 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:58:12,458 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:58:12,459 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:12,459 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:12,459 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:12,459 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:12,460 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:12,461 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:58:12,462 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:12,462 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:58:12,462 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:12,463 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:12,465 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:12,466 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:12,466 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:58:12,467 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:12,467 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:12,467 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:58:12,467 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:58:12,467 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:12,468 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp') generated as u'Step ended'
2017-10-24 16:58:12,468 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:58:12,470 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:12,471 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:58:12,473 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:12,473 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:58:12,474 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:58:12,474 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:12,474 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:58:12,474 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:12,474 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:12,475 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f119b52b7a0>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1198dbd908>]
2017-10-24 16:58:12,475 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f119b52b7a0>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1198dbd908>], sender=GuiBackend, reason=None)
2017-10-24 16:58:12,475 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:58:12,475 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None))
2017-10-24 16:58:12,475 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:58:12,475 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Step ended"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:58:12,477 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:12,477 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:58:12,477 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:58:12,477 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Step ended"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:58:12,478 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:12,478 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f119b52b7a0>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1198dbd908>], sender=GuiBackend, reason=None))
2017-10-24 16:58:12,478 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f119b52b7a0>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1198dbd908>], sender=GuiBackend, reason=None)
2017-10-24 16:58:12,479 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "say_step", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Step ended"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:58:12,479 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:12,479 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:12,487 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Step ended"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:58:12,488 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:12,489 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None))
2017-10-24 16:58:12,489 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None)
2017-10-24 16:58:12,489 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:58:12,489 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:12,489 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:12,489 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:12,490 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None))
2017-10-24 16:58:12,491 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857092.49
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:12,491 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:12,495 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 16:58:12,495 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:12,495 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:12,495 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:12,502 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:12,502 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:12,502 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:12,505 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:58:12,505 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:12,505 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:12,506 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:12,506 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:12,506 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:12,506 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:12,506 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:12,506 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:12,506 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:12,506 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:12,506 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:12,512 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:58:12,512 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:12,512 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:12,512 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:12,512 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:12,512 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:12,516 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:12,516 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:12,516 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:12,516 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:12,516 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:12,516 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:12,516 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:12,516 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:12,517 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:12,517 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:12,517 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:12,517 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:12,517 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:12,517 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:12,517 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:12,517 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:12,518 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:12,518 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:12,518 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:12,518 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:12,518 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:12,518 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:12,522 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:58:12,522 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:12,522 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:12,522 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:12,522 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:12,522 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:12,523 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:12,523 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 16:58:12,523 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:12,524 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:12,524 - session_2017-10-24T16_57_58_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f119960b248>:1.0
2017-10-24 16:58:12,524 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:13,524 - session_2017-10-24T16_57_58_0 - DEBUG - Timeout fired
2017-10-24 16:58:13,524 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:13,525 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:13,525 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:13,525 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:13,526 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857093.53
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:13,526 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:13,526 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:13,529 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:13,529 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:13,534 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:58:13,534 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:13,534 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:13,537 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:13,537 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:13,537 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:13,537 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:13,538 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:13,538 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:13,538 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:13,538 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:13,538 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:58:13,538 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:13,538 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:58:13,538 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:13,538 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:13,538 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:13,538 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:13,538 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:13,539 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:13,539 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:13,539 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:13,539 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:13,539 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:13,539 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:13,540 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:13,540 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:13,540 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:13,540 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:13,540 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:13,541 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:13,541 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:13,541 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:13,541 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:13,542 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857093.53
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:13,543 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:13,546 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:13,546 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:13,549 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:58:13,549 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:13,549 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:13,552 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
- tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:13,553 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:13,553 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:13,553 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:13,555 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:13,555 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:13,556 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:13,558 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:58:13,559 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:13,559 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:15,923 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:58:15,924 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:15,924 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 16:58:15,924 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:15,924 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:15,924 - session_2017-10-24T16_57_58_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:58:15,924 - session_2017-10-24T16_57_58_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:58:15,925 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:58:15,925 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 16:58:15,925 - session_2017-10-24T16_57_58_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 16:58:15,925 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:58:15,926 - session_2017-10-24T16_57_58_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:58:15,926 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:15,926 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:15,926 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:15,926 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:15,928 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:15,928 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 16:58:15,928 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:15,928 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:58:15,929 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:15,929 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:15,930 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:15,931 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:15,931 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:15,931 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:15,931 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp') generated as u'Are you done?'
2017-10-24 16:58:15,931 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:58:15,933 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:15,935 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:15,935 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:58:15,935 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:15,936 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:15,936 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:15,936 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1199611128>]
2017-10-24 16:58:15,937 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1199611128>], sender=GuiBackend, reason=None)
2017-10-24 16:58:15,937 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:58:15,937 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:58:15,937 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:58:15,937 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:15,937 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:15,937 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 16:58:15,938 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:15,938 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None))
2017-10-24 16:58:15,938 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:58:15,938 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Are you done?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:58:15,939 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:15,939 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1199611128>], sender=GuiBackend, reason=None))
2017-10-24 16:58:15,939 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1199611128>], sender=GuiBackend, reason=None)
2017-10-24 16:58:15,939 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:58:15,940 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:15,940 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:15,950 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["Are you done?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:58:15,950 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:15,951 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None))
2017-10-24 16:58:15,951 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None)
2017-10-24 16:58:15,951 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:58:15,951 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:15,951 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:15,951 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:15,952 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None))
2017-10-24 16:58:15,953 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857095.95
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:15,953 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:15,954 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:15,954 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:15,957 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:58:15,958 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:15,958 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:15,961 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:15,961 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:15,961 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:15,961 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:15,961 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:15,961 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:15,961 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:15,961 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:15,961 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:15,961 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:15,961 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:15,962 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:15,966 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.confirmation_yn(X)])
-- END TIS changes --
2017-10-24 16:58:15,966 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:15,967 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:15,967 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:15,967 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:15,967 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:15,967 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:15,967 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:15,967 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:15,967 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:15,968 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:15,968 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:15,968 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:15,968 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:15,968 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:15,968 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:15,968 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:15,969 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:15,969 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:15,969 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:15,969 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:15,969 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:15,972 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 16:58:15,972 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:15,973 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:15,973 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:15,973 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:15,973 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:15,973 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:15,974 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:58:15,974 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:15,974 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:15,974 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:15,975 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:15,976 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:15,976 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:15,977 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857095.98
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([?X.confirmation_yn(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:15,978 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:15,983 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
-- END TIS changes --
2017-10-24 16:58:15,988 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^^
-- END TIS changes --
2017-10-24 16:58:15,989 - session_2017-10-24T16_57_58_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:58:15,989 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:15,995 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
?                                        ^ ^^^^  ^^^^^ ^^^^^^^^^                                    ^^                              ^
+ tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
?                                       + ^^^ ^^ ++++ ^^ ^                                   + ^                              ^^                 +++++++++++++++++++++++++
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 16:58:15,995 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:16,001 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:58:16,002 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:16,002 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:16,006 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:16,006 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:16,006 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:16,012 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
+ tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
?                                                                                                                                                                                                               ++++++++++++++++++
-- END TIS changes --
2017-10-24 16:58:16,012 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:16,012 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:16,012 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:16,013 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:16,013 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:16,013 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:58:16,013 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:16,013 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:58:16,013 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:16,018 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {confirmation_yn("go to next")}
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
?                                                                                              +++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:58:16,018 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:16,018 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:16,023 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
?                                                                                                                             +++++++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             -------------------------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:58:16,023 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:16,027 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          --------------------------------
+ tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:16,027 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:16,027 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:16,027 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:16,028 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:16,028 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:16,028 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:16,028 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:16,028 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:16,028 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:16,028 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:16,028 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:16,032 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          ----------------------------------
+ tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:16,033 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:16,033 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:16,036 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_if_then_else
-- BEGIN TIS changes --
- tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
+ tis.private.plan: Stack([jumpto(perform(say_step))])
-- END TIS changes --
2017-10-24 16:58:16,036 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:16,036 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:16,039 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                 +++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([jumpto(perform(say_step))])
+ tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:58:16,040 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:16,040 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:16,043 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                                                                                  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:58:16,043 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:16,043 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:16,044 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:16,044 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:16,047 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.confirmation_yn(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:58:16,047 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:16,051 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(confirmation_action))])
- tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             -------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:58:16,051 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:16,051 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:16,055 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.plan: Stack([jumpto(perform(confirmation_action))])
+ tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:16,055 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:16,055 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:16,060 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          -------------------------
+ tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
-- END TIS changes --
2017-10-24 16:58:16,060 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:16,060 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:16,060 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:16,060 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:16,061 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:16,061 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:58:16,061 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:58:16,061 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:16,061 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:16,062 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857095.98
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:16,062 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:16,067 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:16,067 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:16,071 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:16,071 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:16,071 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:16,074 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:16,075 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:16,078 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:16,078 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:16,078 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:16,078 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:16,081 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:16,081 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:16,081 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:16,084 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:58:16,085 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:58:16,085 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:16,086 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None))
2017-10-24 16:58:16,086 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:58:16,086 - session_2017-10-24T16_57_58_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:58:16,086 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 16:58:16,086 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:58:16,086 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:58:16,087 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:16,087 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:16,087 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:16,088 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:16,089 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:16,089 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:58:16,090 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:16,090 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:58:16,090 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:16,090 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:16,092 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:16,093 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:16,093 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:58:16,093 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:16,093 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:16,093 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:58:16,093 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:58:16,093 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:16,094 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp') generated as u'Step ended'
2017-10-24 16:58:16,094 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:58:16,096 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:16,097 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:58:16,099 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:16,099 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:58:16,099 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:58:16,099 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:16,099 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:58:16,099 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:16,099 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:16,100 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1198dbd200>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1198dbdd40>]
2017-10-24 16:58:16,100 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1198dbd200>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1198dbdd40>], sender=GuiBackend, reason=None)
2017-10-24 16:58:16,100 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:58:16,101 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None))
2017-10-24 16:58:16,101 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:58:16,101 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Step ended"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:58:16,101 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:16,101 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:58:16,102 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:58:16,102 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Step ended"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:58:16,103 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:16,103 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1198dbd200>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1198dbdd40>], sender=GuiBackend, reason=None))
2017-10-24 16:58:16,103 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1198dbd200>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1198dbdd40>], sender=GuiBackend, reason=None)
2017-10-24 16:58:16,104 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "say_step", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Step ended"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:58:16,104 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:16,104 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:16,138 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Step ended"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:58:16,139 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:16,140 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None))
2017-10-24 16:58:16,140 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None)
2017-10-24 16:58:16,140 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:58:16,140 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:16,140 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:16,140 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:16,141 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None))
2017-10-24 16:58:16,142 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857096.14
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:16,142 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:16,146 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 16:58:16,146 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:16,146 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:16,146 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:16,153 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:16,153 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:16,153 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:16,156 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:58:16,156 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:16,156 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:16,156 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:16,156 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:16,157 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:16,157 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:16,157 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:16,157 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:16,157 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:16,157 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:16,157 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:16,162 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:58:16,162 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:16,162 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:16,162 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:16,162 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:16,162 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:16,165 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:16,165 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:16,165 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:16,166 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:16,166 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:16,166 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:16,166 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:16,166 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:16,166 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:16,166 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:16,166 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:16,166 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:16,166 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:16,166 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:16,167 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:16,167 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:16,167 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:16,167 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:16,167 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:16,168 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:16,168 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:16,168 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:16,171 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:58:16,171 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:16,171 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:16,171 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:16,171 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:16,171 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:16,172 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:16,172 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 16:58:16,173 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:16,173 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:16,173 - session_2017-10-24T16_57_58_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f1198dbd8c0>:1.0
2017-10-24 16:58:16,174 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:17,173 - session_2017-10-24T16_57_58_0 - DEBUG - Timeout fired
2017-10-24 16:58:17,174 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:17,174 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:17,174 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:17,174 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:17,175 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857097.17
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:17,175 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:17,176 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:17,178 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:17,178 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:17,184 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:58:17,184 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:17,184 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:17,187 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:17,187 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:17,187 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:17,187 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:17,187 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:17,187 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:17,187 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:17,187 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:17,187 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:58:17,188 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:17,188 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:58:17,188 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:17,188 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:17,188 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:17,188 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:17,188 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:17,188 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:17,188 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:17,188 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:17,189 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:17,189 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:17,189 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:17,189 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:17,189 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:17,189 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:17,190 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:17,190 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:17,190 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:17,190 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:17,190 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:17,191 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:17,192 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857097.17
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:17,192 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:17,196 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:17,196 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:17,199 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:58:17,199 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:17,199 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:17,202 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
- tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:17,202 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:17,202 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:17,203 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:17,205 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:17,205 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:17,205 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:17,208 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:58:17,208 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:17,209 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:19,013 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:58:19,013 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:19,013 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 16:58:19,014 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:19,014 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:19,014 - session_2017-10-24T16_57_58_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:58:19,014 - session_2017-10-24T16_57_58_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:58:19,015 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:58:19,015 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 16:58:19,015 - session_2017-10-24T16_57_58_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 16:58:19,015 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:58:19,016 - session_2017-10-24T16_57_58_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:58:19,016 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:19,016 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:19,016 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:19,016 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:19,017 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:19,017 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 16:58:19,018 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:19,018 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:58:19,019 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:19,019 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:19,021 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:19,021 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:19,021 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:19,021 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:19,022 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp') generated as u'Are you done?'
2017-10-24 16:58:19,022 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:58:19,024 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:19,026 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:19,027 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:58:19,027 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:19,027 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:19,027 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:19,028 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f119962aea8>]
2017-10-24 16:58:19,028 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f119962aea8>], sender=GuiBackend, reason=None)
2017-10-24 16:58:19,028 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:58:19,028 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:58:19,028 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:58:19,028 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:19,028 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:19,028 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 16:58:19,029 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:19,029 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None))
2017-10-24 16:58:19,029 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:58:19,029 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Are you done?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:58:19,030 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:19,030 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f119962aea8>], sender=GuiBackend, reason=None))
2017-10-24 16:58:19,030 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f119962aea8>], sender=GuiBackend, reason=None)
2017-10-24 16:58:19,031 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:58:19,031 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:19,031 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:19,051 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["Are you done?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:58:19,052 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:19,052 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None))
2017-10-24 16:58:19,052 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None)
2017-10-24 16:58:19,052 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:58:19,052 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:19,052 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:19,052 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:19,053 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None))
2017-10-24 16:58:19,054 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857099.05
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:19,054 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:19,054 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:19,054 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:19,061 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:58:19,062 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:19,062 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:19,065 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:19,065 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:19,065 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:19,065 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:19,065 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:19,065 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:19,066 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:19,066 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:19,066 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:19,066 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:19,066 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:19,066 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:19,070 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.confirmation_yn(X)])
-- END TIS changes --
2017-10-24 16:58:19,070 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:19,070 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:19,071 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:19,071 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:19,071 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:19,071 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:19,071 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:19,071 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:19,071 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:19,071 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:19,071 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:19,072 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:19,072 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:19,072 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:19,072 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:19,072 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:19,073 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:19,073 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:19,073 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:19,073 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:19,073 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:19,077 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 16:58:19,077 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:19,077 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:19,077 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:19,078 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:19,078 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:19,079 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:19,079 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:58:19,079 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:19,080 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:19,080 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:19,081 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:19,081 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:19,081 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:19,083 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857099.08
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([?X.confirmation_yn(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:19,083 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:19,088 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
-- END TIS changes --
2017-10-24 16:58:19,094 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^^
-- END TIS changes --
2017-10-24 16:58:19,097 - session_2017-10-24T16_57_58_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:58:19,097 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:19,102 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
?                                        ^ ^^^^  ^^^^^ ^^^^^^^^^                                    ^^                              ^
+ tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
?                                       + ^^^ ^^ ++++ ^^ ^                                   + ^                              ^^                 +++++++++++++++++++++++++
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 16:58:19,102 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:19,108 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:58:19,108 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:19,108 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:19,111 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:19,111 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:19,111 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:19,116 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:19,116 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:19,116 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:19,116 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:19,116 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:19,116 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:19,116 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:58:19,117 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:19,117 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:58:19,117 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:19,121 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {confirmation_yn("go to next")}
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
?                                                                                              +++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:58:19,121 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:19,121 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:19,126 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
?                                                                                                                             +++++++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             -------------------------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:58:19,126 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:19,130 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          --------------------------------
+ tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:19,130 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:19,130 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:19,130 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:19,130 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:19,130 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:19,130 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:19,130 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:19,130 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:19,130 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:19,131 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:19,131 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:19,135 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          ----------------------------------
+ tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:19,135 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:19,135 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:19,138 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_if_then_else
-- BEGIN TIS changes --
- tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
+ tis.private.plan: Stack([jumpto(perform(say_step))])
-- END TIS changes --
2017-10-24 16:58:19,138 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:19,138 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:19,142 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                 +++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([jumpto(perform(say_step))])
+ tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:58:19,142 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:19,142 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:19,146 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                                                                                  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:58:19,146 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:19,146 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:19,146 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:19,146 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:19,149 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.confirmation_yn(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:58:19,149 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:19,153 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(confirmation_action))])
- tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             -------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:58:19,153 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:19,153 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:19,157 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.plan: Stack([jumpto(perform(confirmation_action))])
+ tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:19,157 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:19,157 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:19,162 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          -------------------------
+ tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
-- END TIS changes --
2017-10-24 16:58:19,162 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:19,162 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:19,162 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:19,162 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:19,163 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:19,163 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:58:19,163 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:58:19,163 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:19,163 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:19,164 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857099.08
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:19,164 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:19,169 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:19,169 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:19,173 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:19,173 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:19,173 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:19,177 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:19,177 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:19,181 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:19,181 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:19,181 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:19,181 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:19,184 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:19,184 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:19,184 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:19,187 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:58:19,187 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:58:19,188 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:19,188 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None))
2017-10-24 16:58:19,188 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:58:19,188 - session_2017-10-24T16_57_58_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:58:19,188 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 16:58:19,188 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:58:19,189 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:58:19,189 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:19,189 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:19,189 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:19,190 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:19,191 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:19,191 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:58:19,192 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:19,192 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:58:19,192 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:19,192 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:19,194 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:19,195 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:19,195 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:58:19,195 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:19,195 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:19,195 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:58:19,196 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:58:19,196 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:19,196 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp') generated as u'Step ended'
2017-10-24 16:58:19,196 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:58:19,198 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:19,199 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:58:19,201 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:19,201 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:58:19,201 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:58:19,202 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:19,202 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:58:19,202 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:19,202 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:19,203 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1198de5ea8>, <tdm.tdm_gui_protocol.Popup instance at 0x7f119962a128>]
2017-10-24 16:58:19,203 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1198de5ea8>, <tdm.tdm_gui_protocol.Popup instance at 0x7f119962a128>], sender=GuiBackend, reason=None)
2017-10-24 16:58:19,203 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:58:19,203 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None))
2017-10-24 16:58:19,203 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:58:19,203 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Step ended"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:58:19,204 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:19,204 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:58:19,204 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:58:19,204 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Step ended"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:58:19,205 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:19,205 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1198de5ea8>, <tdm.tdm_gui_protocol.Popup instance at 0x7f119962a128>], sender=GuiBackend, reason=None))
2017-10-24 16:58:19,205 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1198de5ea8>, <tdm.tdm_gui_protocol.Popup instance at 0x7f119962a128>], sender=GuiBackend, reason=None)
2017-10-24 16:58:19,206 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "say_step", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Step ended"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:58:19,206 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:19,207 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:19,224 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Step ended"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:58:19,225 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:19,226 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None))
2017-10-24 16:58:19,226 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None)
2017-10-24 16:58:19,226 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:58:19,226 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:19,226 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:19,226 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:19,227 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None))
2017-10-24 16:58:19,228 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857099.23
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:19,228 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:19,232 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 16:58:19,232 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:19,233 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:19,233 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:19,239 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:19,239 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:19,239 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:19,242 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:58:19,243 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:19,243 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:19,243 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:19,243 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:19,243 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:19,243 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:19,243 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:19,243 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:19,243 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:19,243 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:19,244 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:19,248 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:58:19,249 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:19,249 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:19,249 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:19,249 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:19,249 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:19,252 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:19,252 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:19,252 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:19,253 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:19,253 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:19,253 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:19,253 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:19,253 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:19,253 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:19,253 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:19,253 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:19,253 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:19,253 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:19,254 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:19,254 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:19,254 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:19,254 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:19,254 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:19,254 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:19,255 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:19,255 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:19,255 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:19,258 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:58:19,258 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:19,258 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:19,258 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:19,259 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:19,259 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:19,259 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:19,259 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 16:58:19,260 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:19,260 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:19,261 - session_2017-10-24T16_57_58_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f1198dbd998>:1.0
2017-10-24 16:58:19,261 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:20,261 - session_2017-10-24T16_57_58_0 - DEBUG - Timeout fired
2017-10-24 16:58:20,261 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:20,261 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:20,261 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:20,262 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:20,263 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857100.26
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:20,263 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:20,263 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:20,266 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:20,266 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:20,271 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:58:20,272 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:20,272 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:20,274 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:20,274 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:20,275 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:20,275 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:20,275 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:20,275 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:20,275 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:20,275 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:20,275 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:58:20,275 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:20,275 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:58:20,275 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:20,275 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:20,275 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:20,276 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:20,276 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:20,276 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:20,276 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:20,276 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:20,276 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:20,276 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:20,276 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:20,277 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:20,277 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:20,277 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:20,277 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:20,278 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:20,278 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:20,278 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:20,278 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:20,278 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:20,280 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857100.26
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:20,280 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:20,284 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:20,284 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:20,287 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:58:20,287 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:20,287 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:20,290 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
- tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:20,290 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:20,290 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:20,290 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:20,293 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:20,293 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:20,293 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:20,296 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:58:20,296 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:20,297 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:22,152 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:58:22,153 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:22,153 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 16:58:22,153 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:22,153 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:22,153 - session_2017-10-24T16_57_58_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:58:22,153 - session_2017-10-24T16_57_58_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:58:22,154 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:58:22,154 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 16:58:22,155 - session_2017-10-24T16_57_58_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 16:58:22,155 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:58:22,155 - session_2017-10-24T16_57_58_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:58:22,155 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:22,155 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:22,156 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:22,156 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:22,156 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:22,157 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 16:58:22,157 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:22,157 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:58:22,158 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:22,158 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:22,160 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:22,160 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:22,160 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:22,160 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:22,161 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp') generated as u'Are you done?'
2017-10-24 16:58:22,161 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:58:22,163 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:22,165 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:22,165 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:58:22,165 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:22,165 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:22,165 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:22,166 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1198de5fc8>]
2017-10-24 16:58:22,166 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1198de5fc8>], sender=GuiBackend, reason=None)
2017-10-24 16:58:22,166 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:58:22,166 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:58:22,166 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:58:22,166 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:22,166 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:22,167 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 16:58:22,167 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:22,169 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None))
2017-10-24 16:58:22,169 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:58:22,169 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Are you done?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:58:22,170 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:22,170 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1198de5fc8>], sender=GuiBackend, reason=None))
2017-10-24 16:58:22,170 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1198de5fc8>], sender=GuiBackend, reason=None)
2017-10-24 16:58:22,170 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:58:22,171 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:22,171 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:22,187 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["Are you done?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:58:22,187 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:22,187 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None))
2017-10-24 16:58:22,187 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None)
2017-10-24 16:58:22,187 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:58:22,187 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:22,188 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:22,188 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:22,188 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None))
2017-10-24 16:58:22,190 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857102.19
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:22,190 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:22,190 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:22,190 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:22,194 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:58:22,194 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:22,194 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:22,197 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:22,197 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:22,197 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:22,197 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:22,197 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:22,197 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:22,197 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:22,197 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:22,198 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:22,198 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:22,198 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:22,198 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:22,201 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.confirmation_yn(X)])
-- END TIS changes --
2017-10-24 16:58:22,201 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:22,202 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:22,202 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:22,202 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:22,202 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:22,202 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:22,202 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:22,202 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:22,202 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:22,203 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:22,203 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:22,203 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:22,203 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:22,203 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:22,203 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:22,203 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:22,204 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:22,204 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:22,204 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:22,204 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:22,204 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:22,207 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 16:58:22,207 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:22,207 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:22,208 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:22,208 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:22,208 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:22,208 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:22,208 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:58:22,209 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:22,209 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:22,210 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:22,210 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:22,210 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:22,210 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:22,212 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857102.21
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([?X.confirmation_yn(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:22,212 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:22,217 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
-- END TIS changes --
2017-10-24 16:58:22,223 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^^
-- END TIS changes --
2017-10-24 16:58:22,224 - session_2017-10-24T16_57_58_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:58:22,224 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:22,230 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
?                                        ^ ^^^^  ^^^^^ ^^^^^^^^^                                    ^^                              ^
+ tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
?                                       + ^^^ ^^ ++++ ^^ ^                                   + ^                              ^^                 +++++++++++++++++++++++++
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 16:58:22,230 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:22,237 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:58:22,237 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:22,237 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:22,241 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:22,241 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:22,241 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:22,246 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:22,246 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:22,246 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:22,247 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:22,247 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:22,247 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:22,247 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:58:22,247 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:22,247 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:58:22,247 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:22,252 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {confirmation_yn("go to next")}
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
?                                                                                              +++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:58:22,252 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:22,252 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:22,258 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
?                                                                                                                             +++++++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             -------------------------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:58:22,258 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:22,262 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          --------------------------------
+ tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:22,262 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:22,262 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:22,262 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:22,262 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:22,262 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:22,262 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:22,262 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:22,263 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:22,263 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:22,263 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:22,263 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:22,267 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          ----------------------------------
+ tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:22,267 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:22,267 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:22,270 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_if_then_else
-- BEGIN TIS changes --
- tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
+ tis.private.plan: Stack([jumpto(perform(say_step))])
-- END TIS changes --
2017-10-24 16:58:22,270 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:22,270 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:22,274 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                 +++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([jumpto(perform(say_step))])
+ tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:58:22,274 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:22,274 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:22,278 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                                                                                  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:58:22,278 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:22,278 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:22,278 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:22,278 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:22,281 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.confirmation_yn(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:58:22,281 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:22,285 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(confirmation_action))])
- tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             -------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:58:22,285 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:22,285 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:22,289 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.plan: Stack([jumpto(perform(confirmation_action))])
+ tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:22,289 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:22,289 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:22,294 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          -------------------------
+ tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
-- END TIS changes --
2017-10-24 16:58:22,294 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:22,294 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:22,294 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:22,295 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:22,295 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:22,295 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:58:22,295 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:58:22,295 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:22,295 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:22,297 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857102.21
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:22,297 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:22,301 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:22,301 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:22,305 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:22,305 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:22,305 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:22,309 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:22,310 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:22,313 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:22,313 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:22,313 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:22,313 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:22,317 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:22,317 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:22,317 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:22,320 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:58:22,320 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:58:22,320 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:22,321 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None))
2017-10-24 16:58:22,321 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:58:22,321 - session_2017-10-24T16_57_58_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:58:22,321 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 16:58:22,321 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:58:22,321 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:58:22,322 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:22,322 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:22,322 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:22,322 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:22,323 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:22,323 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:58:22,324 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:22,324 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:58:22,325 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:22,325 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:22,327 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:22,327 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:22,327 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:58:22,327 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:22,327 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:22,328 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:58:22,328 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:58:22,328 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:22,328 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp') generated as u'Step ended'
2017-10-24 16:58:22,329 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:58:22,331 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:22,332 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:58:22,334 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:22,334 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:58:22,334 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:58:22,334 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:22,334 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:58:22,334 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:22,335 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:22,335 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f119961de60>, <tdm.tdm_gui_protocol.Popup instance at 0x7f119961d908>]
2017-10-24 16:58:22,335 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f119961de60>, <tdm.tdm_gui_protocol.Popup instance at 0x7f119961d908>], sender=GuiBackend, reason=None)
2017-10-24 16:58:22,335 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:58:22,336 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None))
2017-10-24 16:58:22,336 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:58:22,336 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Step ended"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:58:22,336 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:22,337 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:58:22,337 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:58:22,337 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Step ended"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:58:22,338 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:22,338 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f119961de60>, <tdm.tdm_gui_protocol.Popup instance at 0x7f119961d908>], sender=GuiBackend, reason=None))
2017-10-24 16:58:22,338 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f119961de60>, <tdm.tdm_gui_protocol.Popup instance at 0x7f119961d908>], sender=GuiBackend, reason=None)
2017-10-24 16:58:22,338 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "say_step", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Step ended"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:58:22,339 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:22,339 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:22,365 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Step ended"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:58:22,365 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:22,365 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None))
2017-10-24 16:58:22,365 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None)
2017-10-24 16:58:22,365 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:58:22,365 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:22,366 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:22,366 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:22,366 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None))
2017-10-24 16:58:22,367 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857102.37
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:22,368 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:22,371 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 16:58:22,371 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:22,371 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:22,371 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:22,378 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:22,378 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:22,378 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:22,381 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:58:22,381 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:22,381 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:22,381 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:22,381 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:22,382 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:22,382 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:22,382 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:22,382 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:22,382 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:22,382 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:22,382 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:22,386 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:58:22,387 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:22,387 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:22,387 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:22,387 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:22,387 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:22,390 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:22,390 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:22,390 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:22,391 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:22,391 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:22,391 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:22,391 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:22,391 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:22,391 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:22,391 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:22,391 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:22,391 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:22,392 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:22,392 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:22,392 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:22,392 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:22,392 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:22,392 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:22,393 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:22,393 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:22,393 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:22,393 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:22,396 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:58:22,397 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:22,397 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:22,397 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:22,397 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:22,397 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:22,398 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:22,398 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 16:58:22,398 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:22,399 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:22,399 - session_2017-10-24T16_57_58_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f1198de51b8>:1.0
2017-10-24 16:58:22,399 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:23,399 - session_2017-10-24T16_57_58_0 - DEBUG - Timeout fired
2017-10-24 16:58:23,399 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:23,399 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:23,400 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:23,400 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:23,401 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857103.4
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:23,401 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:23,401 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:23,404 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:23,404 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:23,409 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:58:23,409 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:23,410 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:23,412 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:23,412 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:23,413 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:23,413 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:23,413 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:23,413 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:23,413 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:23,413 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:23,413 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:58:23,413 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:23,413 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:58:23,413 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:23,413 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:23,413 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:23,414 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:23,414 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:23,414 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:23,414 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:23,414 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:23,414 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:23,414 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:23,415 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:23,415 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:23,416 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:23,416 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:23,416 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:23,416 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:23,416 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:23,417 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:23,417 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:23,417 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:23,418 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857103.4
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:23,418 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:23,422 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:23,422 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:23,425 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:58:23,425 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:23,425 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:23,428 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
- tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:23,428 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:23,428 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:23,428 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:23,431 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:23,432 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:23,432 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:23,434 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:58:23,435 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:23,435 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:28,200 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to step five"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:58:28,201 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:28,201 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to step five}], sender=TextInputComponent, reason=None))
2017-10-24 16:58:28,201 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to step five}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:28,201 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to step five}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:28,201 - session_2017-10-24T16_57_58_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to step five"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:58:28,201 - session_2017-10-24T16_57_58_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:58:28,203 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:58:28,203 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])} for DDD 'recipehelp'
2017-10-24 16:58:28,204 - session_2017-10-24T16_57_58_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}
2017-10-24 16:58:28,204 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:58:28,204 - session_2017-10-24T16_57_58_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to step five"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to step five", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AskMove": {"_type": "ask", "_ddd_name": "recipehelp", "_content": {"445f2b7f7189027ce75dac332c96dde0.WhQuestion": {"_type": "WHQ", "_content": {"24b0f339529d53d987534676834bafa7.LambdaAbstractedPredicateProposition": {"_ontology_name": "RecipehelpOntology", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.BuiltinSort": {"_dynamic": false, "_name": "string"}}, "name": "go_to_step", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to step five", "_modality": "speech", "_background": null, "_speaker": "USR"}}, {"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"7df9060a3399228b5ad4ef77628d15ef.PredicateProposition": {"_polarity": "POS", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.CustomSort": {"_ontology_name": "RecipehelpOntology", "_dynamic": false, "_name": "step"}}, "name": "step_to_choose", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}, "_content": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.CustomSort": {"_ontology_name": "RecipehelpOntology", "_dynamic": false, "_name": "step"}}, "name": "step_to_choose", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}, "_predicted": false, "_type": "PREDICATE", "individual": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.CustomSort": {"_ontology_name": "RecipehelpOntology", "_dynamic": false, "_name": "step"}}, "value": "step5"}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to step five", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:58:28,205 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to step five}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:28,205 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:28,205 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:28,205 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:28,206 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:28,206 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 16:58:28,206 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:28,206 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:58:28,207 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:28,207 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:28,209 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:28,209 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:28,209 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:28,209 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:28,210 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp') generated as u'Are you done?'
2017-10-24 16:58:28,210 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:58:28,212 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:28,214 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:28,214 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:58:28,214 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:28,214 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:28,215 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:28,215 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f119962ac68>]
2017-10-24 16:58:28,215 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f119962ac68>], sender=GuiBackend, reason=None)
2017-10-24 16:58:28,215 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:58:28,215 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:58:28,216 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:58:28,216 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:28,216 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:28,216 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 16:58:28,216 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:28,216 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None))
2017-10-24 16:58:28,217 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:58:28,217 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Are you done?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:58:28,217 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:28,218 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f119962ac68>], sender=GuiBackend, reason=None))
2017-10-24 16:58:28,218 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f119962ac68>], sender=GuiBackend, reason=None)
2017-10-24 16:58:28,218 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:58:28,219 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:28,219 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:28,228 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["Are you done?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:58:28,229 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:28,229 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None))
2017-10-24 16:58:28,229 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None)
2017-10-24 16:58:28,229 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:58:28,229 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:28,230 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:28,230 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:28,230 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None))
2017-10-24 16:58:28,231 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857108.23
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step five
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:28,231 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:28,231 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:28,232 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:28,235 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:58:28,235 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:28,235 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:28,238 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:28,238 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:28,238 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:28,239 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:28,239 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:28,239 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:28,239 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:28,239 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:28,239 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:28,239 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:28,239 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:28,240 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:28,243 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.confirmation_yn(X)])
-- END TIS changes --
2017-10-24 16:58:28,243 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:28,243 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:28,243 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:28,243 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:28,244 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:28,244 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:28,244 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:28,244 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:28,244 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:28,244 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:28,244 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:28,244 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:28,244 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:28,244 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:28,245 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:28,245 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:28,245 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:28,246 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:28,246 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:28,246 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:28,246 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:28,249 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 16:58:28,250 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:28,250 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:28,250 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:28,250 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:28,250 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:28,251 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:28,251 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:58:28,251 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:28,251 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:28,252 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:28,252 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:28,253 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:28,253 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:28,254 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857108.25
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step five
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([?X.confirmation_yn(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:28,255 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:28,261 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                     ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                     ^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}
?                                                                                                                                    ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}
?                                                                                                                                    ^
-- END TIS changes --
2017-10-24 16:58:28,268 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                     ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                     ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}
?                                                                                                                                    ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}
?                                                                                                                                    ^^
-- END TIS changes --
2017-10-24 16:58:28,270 - session_2017-10-24T16_57_58_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:58:28,270 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:28,276 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
?                                        ^ ^^^^ ^  ^^^^^^^^^^^^^                                    ^^                              ^
+ tis.latest_moves: OpenQueue([#, Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five')])
?                                       + ^^^ ^^ ^^^^^^^^^  ^^^                                   + ^                              ^^                 ++++++++++++++++++++++++++++++
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 16:58:28,276 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:28,283 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:58:28,283 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:28,283 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:28,287 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:28,287 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:28,287 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:28,293 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:28,293 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:28,293 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:28,293 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:28,293 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:28,293 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:28,293 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #])
2017-10-24 16:58:28,293 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:28,293 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #])
2017-10-24 16:58:28,293 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:28,298 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {confirmation_yn("go to step five")}
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to step five")}
?                                                                                              ++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five')}
-- END TIS changes --
2017-10-24 16:58:28,298 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:28,298 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:28,303 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to step five")}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to step five"), resolved(?X.confirmation_yn(X))}
?                                                                                                                                  +++++++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             -------------------------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:58:28,303 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:28,308 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          --------------------------------
+ tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:28,308 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:28,308 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:28,308 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:28,308 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:28,308 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:28,308 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:28,308 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:28,309 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:28,309 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:28,309 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:28,309 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:28,313 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          ----------------------------------
+ tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:28,313 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:28,313 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:28,316 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_if_then_else
-- BEGIN TIS changes --
- tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
+ tis.private.plan: Stack([jumpto(perform(say_step))])
-- END TIS changes --
2017-10-24 16:58:28,316 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:28,316 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:28,320 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                 +++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([jumpto(perform(say_step))])
+ tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:58:28,320 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:28,321 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:28,324 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                                                                                  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:58:28,324 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:28,325 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:28,325 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:28,325 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:28,328 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.confirmation_yn(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:58:28,328 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:28,331 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(confirmation_action))])
- tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             -------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:58:28,332 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:28,332 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:28,336 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.plan: Stack([jumpto(perform(confirmation_action))])
+ tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:28,336 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:28,336 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:28,340 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          -------------------------
+ tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to step five"), resolved(?X.confirmation_yn(X))}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
-- END TIS changes --
2017-10-24 16:58:28,340 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:28,340 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:28,341 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:28,341 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:28,341 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:28,341 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, confirmation_yn("go to step five"), sender=DmeModule, reason=None)
2017-10-24 16:58:28,341 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to step five, sender=DmeModule, reason=None)
2017-10-24 16:58:28,341 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:28,342 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:28,343 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857108.25
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five')])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step five
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:28,343 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:28,347 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:28,348 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:28,351 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:28,352 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:28,352 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:28,356 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:28,356 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:28,360 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:28,360 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:28,360 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:28,360 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:28,363 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:28,363 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:28,363 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:28,366 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:58:28,366 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:58:28,367 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:28,367 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, confirmation_yn("go to step five"), sender=DmeModule, reason=None))
2017-10-24 16:58:28,367 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, confirmation_yn("go to step five"), sender=DmeModule, reason=None)
2017-10-24 16:58:28,367 - session_2017-10-24T16_57_58_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, confirmation_yn("go to step five"), sender=DmeModule, reason=None)
2017-10-24 16:58:28,368 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to step five, sender=DmeModule, reason=None))
2017-10-24 16:58:28,368 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to step five, sender=DmeModule, reason=None)
2017-10-24 16:58:28,368 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to step five", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:58:28,368 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:28,368 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:28,369 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:28,369 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:28,370 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:28,370 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:58:28,371 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:28,371 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:58:28,371 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:28,372 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:28,374 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:28,374 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:28,374 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:58:28,374 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:28,375 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:28,375 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:58:28,375 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:58:28,375 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:28,376 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp') generated as u'Step ended'
2017-10-24 16:58:28,376 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:58:28,378 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:28,379 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:58:28,381 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:28,381 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:58:28,381 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:58:28,381 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:28,381 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:58:28,381 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:28,382 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:28,382 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1199611a70>, <tdm.tdm_gui_protocol.Popup instance at 0x7f119964f758>]
2017-10-24 16:58:28,382 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1199611a70>, <tdm.tdm_gui_protocol.Popup instance at 0x7f119964f758>], sender=GuiBackend, reason=None)
2017-10-24 16:58:28,382 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:58:28,383 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None))
2017-10-24 16:58:28,383 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:58:28,383 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Step ended"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:58:28,383 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:28,384 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:58:28,384 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:58:28,385 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Step ended"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:58:28,386 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:28,386 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1199611a70>, <tdm.tdm_gui_protocol.Popup instance at 0x7f119964f758>], sender=GuiBackend, reason=None))
2017-10-24 16:58:28,386 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1199611a70>, <tdm.tdm_gui_protocol.Popup instance at 0x7f119964f758>], sender=GuiBackend, reason=None)
2017-10-24 16:58:28,386 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "say_step", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Step ended"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:58:28,387 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:28,387 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:28,409 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Step ended"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:58:28,410 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:28,410 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None))
2017-10-24 16:58:28,411 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None)
2017-10-24 16:58:28,411 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:58:28,411 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:28,411 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:28,411 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:28,412 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None))
2017-10-24 16:58:28,413 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857108.41
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step five
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:28,413 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:28,419 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}
-- END TIS changes --
2017-10-24 16:58:28,419 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:28,419 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:28,419 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:28,425 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five')}
?            ^^
- tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:28,425 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:28,426 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:28,429 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:58:28,429 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:28,429 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:28,429 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:28,429 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:28,429 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:28,429 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:28,430 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:28,430 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:28,430 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:28,430 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:28,430 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:28,434 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:58:28,434 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:28,434 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:28,434 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:28,435 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:28,435 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:28,438 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:28,438 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:28,438 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:28,438 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:28,438 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:28,438 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:28,438 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:28,439 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:28,439 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:28,439 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:28,439 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:28,439 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:28,439 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:28,439 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:28,439 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:28,440 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:28,440 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:28,440 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:28,440 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:28,440 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:28,440 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:28,441 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:28,443 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:58:28,444 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:28,444 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:28,444 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:28,444 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:28,444 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:28,445 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:28,445 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 16:58:28,445 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:28,446 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:28,446 - session_2017-10-24T16_57_58_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f1198dbde18>:1.0
2017-10-24 16:58:28,446 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:29,446 - session_2017-10-24T16_57_58_0 - DEBUG - Timeout fired
2017-10-24 16:58:29,446 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:29,446 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:29,447 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:29,447 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:29,448 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857109.45
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step five
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five')}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:29,448 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:29,448 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:29,451 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:29,451 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:29,456 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five')}
-- END TIS changes --
2017-10-24 16:58:29,456 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:29,456 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:29,459 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:29,459 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:29,460 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:29,460 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:29,460 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:29,460 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:29,460 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:29,460 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:29,460 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:58:29,460 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:29,460 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:58:29,460 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:29,460 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:29,460 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:29,461 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:29,461 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:29,461 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:29,461 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:29,461 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:29,461 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:29,461 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:29,461 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:29,462 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:29,462 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:29,462 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:29,462 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:29,463 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:29,463 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:29,463 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:29,463 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:29,463 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:29,464 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857109.45
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step five
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:29,464 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:29,468 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:29,469 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:29,471 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:58:29,471 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:29,471 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:29,474 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
- tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:29,474 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:29,474 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:29,474 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:29,477 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:29,477 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:29,477 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:29,480 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:58:29,480 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:29,480 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:35,097 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to step six"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:58:35,097 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:35,097 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to step six}], sender=TextInputComponent, reason=None))
2017-10-24 16:58:35,097 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to step six}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:35,097 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to step six}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:35,098 - session_2017-10-24T16_57_58_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to step six"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:58:35,098 - session_2017-10-24T16_57_58_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:58:35,099 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Found no valid exact interpretations, returning an empty result.
2017-10-24 16:58:35,099 - session_2017-10-24T16_57_58_0 - DEBUG - Result from 'ExactInterpreter': []
2017-10-24 16:58:35,099 - session_2017-10-24T16_57_58_0 - DEBUG - Starting 'RobustInterpreter'
2017-10-24 16:58:35,099 - session_2017-10-24T16_57_58_0 - DEBUG - DddInterpreter.interpret_partially: timeout=1.99869298935
2017-10-24 16:58:35,114 - session_2017-10-24T16_57_58_0 - DEBUG - robust grammatical interpretations: []
2017-10-24 16:58:35,117 - session_2017-10-24T16_57_58_0 - DEBUG - _remove_literals(): Got no valid interpretations of partial utterances
2017-10-24 16:58:35,117 - session_2017-10-24T16_57_58_0 - DEBUG - RobustInterpreter: Partial interpretation failed.
2017-10-24 16:58:35,117 - session_2017-10-24T16_57_58_0 - DEBUG - RobustInterpreter: use_word_list_correction disabled, skipping interpretation with word correction
2017-10-24 16:58:35,117 - session_2017-10-24T16_57_58_0 - DEBUG - RobustInterpreter: Found no robust interpretations, returning an empty result.
2017-10-24 16:58:35,117 - session_2017-10-24T16_57_58_0 - DEBUG - Result from 'RobustInterpreter': []
2017-10-24 16:58:35,117 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {}, sender=InterpretModule, reason=None)
2017-10-24 16:58:35,117 - session_2017-10-24T16_57_58_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:58:35,117 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to step six}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:35,118 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:35,118 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:35,118 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:35,119 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:35,119 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 16:58:35,120 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:35,120 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:58:35,120 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:35,121 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:35,123 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:35,123 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:35,124 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:35,124 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:35,125 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp') generated as u'Are you done?'
2017-10-24 16:58:35,125 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:58:35,128 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:35,130 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:35,130 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:58:35,130 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:35,131 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:35,131 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:35,131 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f119961da28>]
2017-10-24 16:58:35,131 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f119961da28>], sender=GuiBackend, reason=None)
2017-10-24 16:58:35,131 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:58:35,131 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {}, sender=InterpretModule, reason=None))
2017-10-24 16:58:35,132 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {}, sender=InterpretModule, reason=None)
2017-10-24 16:58:35,132 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:35,132 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:35,132 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 16:58:35,133 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:35,133 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None))
2017-10-24 16:58:35,133 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:58:35,133 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Are you done?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:58:35,134 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:35,134 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f119961da28>], sender=GuiBackend, reason=None))
2017-10-24 16:58:35,134 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f119961da28>], sender=GuiBackend, reason=None)
2017-10-24 16:58:35,135 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:58:35,137 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:35,137 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:35,139 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["Are you done?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:58:35,139 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:35,139 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None))
2017-10-24 16:58:35,139 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None)
2017-10-24 16:58:35,139 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:58:35,140 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:35,140 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:35,140 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:35,141 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None))
2017-10-24 16:58:35,142 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857115.14
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step six
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:35,142 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:35,142 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:35,142 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:35,147 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:58:35,147 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:35,147 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:35,150 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:35,150 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:35,150 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:35,151 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:35,151 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:35,151 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:35,151 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:35,151 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:35,151 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:35,151 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:35,151 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:35,151 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:35,156 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.confirmation_yn(X)])
-- END TIS changes --
2017-10-24 16:58:35,156 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:35,156 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:35,157 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:35,157 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:35,157 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:35,157 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:35,157 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:35,157 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:35,157 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:35,157 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:35,157 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:35,158 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:35,158 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:35,158 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:35,158 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:35,158 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:35,158 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:35,159 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:35,159 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:35,159 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:35,159 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:35,162 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 16:58:35,162 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:35,162 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:35,163 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:35,163 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:35,163 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:35,163 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:35,164 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:58:35,164 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:35,164 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:35,165 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 16:58:35,165 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 16:58:35,165 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 16:58:35,165 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 16:58:35,166 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857115.17
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step six
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([?X.confirmation_yn(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:35,166 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:35,166 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:35,169 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:35,169 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:35,174 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:58:35,174 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:35,174 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:35,176 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:35,176 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:35,177 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:35,177 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:35,177 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:35,177 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:35,177 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:35,177 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:35,177 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:58:35,177 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:35,177 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:58:35,177 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:35,177 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:35,178 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:35,178 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:35,178 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:35,178 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:35,178 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:35,178 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:35,178 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:35,178 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:35,178 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:35,179 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:35,179 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:35,182 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.confirmation_yn(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:58:35,182 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:35,183 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:35,183 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:35,184 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:35,184 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:35,184 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:35,184 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:35,186 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857115.17
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step six
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:35,186 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:35,192 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                                      +++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:58:35,192 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:35,195 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: reraiseIssue
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise)), raise(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:58:35,195 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:35,198 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmSemNeg
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg)])
-- END TIS changes --
2017-10-24 16:58:35,198 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:35,198 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:35,202 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise)])
?                                                                                                    ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise)), raise(?X.confirmation_yn(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, raise(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:58:35,202 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:35,206 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))])
?                                                                                                                          ++++++++++++++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, raise(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:35,206 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:35,206 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:35,206 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:35,209 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:35,209 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:35,209 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:35,212 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:35,212 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:35,213 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 16:58:35,213 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:35,213 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:35,213 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:35,214 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:35,214 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None)))
2017-10-24 16:58:35,215 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 16:58:35,215 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:58:35,216 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:35,216 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:35,218 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:35,219 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:per*pos:"go to step six"), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:35,219 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:per*pos:"go to step six")
2017-10-24 16:58:35,219 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:sem*neg), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:35,219 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:sem*neg)
2017-10-24 16:58:35,219 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:35,219 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise)
2017-10-24 16:58:35,219 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:35,219 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:35,219 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:per*pos:"go to step six")
2017-10-24 16:58:35,220 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move ICMMove(icm:per*pos:"go to step six") generated as u'I heard you say go to step six.'
2017-10-24 16:58:35,220 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:sem*neg)
2017-10-24 16:58:35,220 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move ICMMove(icm:sem*neg) generated as u"I don't understand."
2017-10-24 16:58:35,220 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise)
2017-10-24 16:58:35,221 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise) generated as u'So,'
2017-10-24 16:58:35,221 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:35,221 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp') generated as u'Are you done?'
2017-10-24 16:58:35,221 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say go to step six., I don't understand., So,, Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:58:35,223 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:35,227 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:35,227 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:58:35,228 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:35,228 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:per*pos:"go to step six"), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:35,228 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:per*pos:"go to step six")
2017-10-24 16:58:35,228 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:sem*neg), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:35,229 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:sem*neg)
2017-10-24 16:58:35,229 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:35,229 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise)
2017-10-24 16:58:35,229 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:35,229 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:35,230 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message []
2017-10-24 16:58:35,230 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 16:58:35,230 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:58:35,230 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say go to step six., I don't understand., So,, Are you done?], sender=GenerateModule, reason=None))
2017-10-24 16:58:35,230 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say go to step six., I don't understand., So,, Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:58:35,230 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["I heard you say go to step six.", "I don't understand.", "So,", "Are you done?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:58:35,231 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:35,231 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 16:58:35,231 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 16:58:35,231 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:58:35,232 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:35,233 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:35,235 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["I heard you say go to step six.", "I don't understand.", "So,", "Are you done?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:58:35,236 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:35,236 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [I heard you say go to step six., I don't understand., So,, Are you done?], sender=TextOutputComponent, reason=None))
2017-10-24 16:58:35,236 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [I heard you say go to step six., I don't understand., So,, Are you done?], sender=TextOutputComponent, reason=None)
2017-10-24 16:58:35,236 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:58:35,236 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [I heard you say go to step six., I don't understand., So,, Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:35,236 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [I heard you say go to step six., I don't understand., So,, Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:35,236 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [I heard you say go to step six., I don't understand., So,, Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:35,237 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [I heard you say go to step six., I don't understand., So,, Are you done?], sender=TurnManager, reason=None))
2017-10-24 16:58:35,238 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857115.24
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [I heard you say go to step six., I don't understand., So,, Are you done?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step six
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:35,238 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:35,238 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:35,239 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:35,243 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
- tis.sys_turns: 0
?                ^
+ tis.sys_turns: 1
?                ^
-- END TIS changes --
2017-10-24 16:58:35,244 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:35,244 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:35,246 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:35,247 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:35,247 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:35,247 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:35,247 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:35,247 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:35,247 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:35,247 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:35,247 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:35,247 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:35,247 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:35,247 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:35,251 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                                         ^^^ ^^^^^ --------------                                       ----------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                                         ^^^ ^^
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:58:35,252 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:35,252 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:35,252 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:35,252 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:35,252 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:35,257 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
?                                                                                        ++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:58:35,257 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:35,257 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:35,258 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:35,258 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:35,258 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:35,262 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0)}
?                                                                                                                                      ++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 16:58:35,262 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:35,262 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:35,263 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:35,263 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:35,263 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:35,266 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?                                                                                                                                                                                    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.confirmation_yn(X)])
-- END TIS changes --
2017-10-24 16:58:35,266 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:35,266 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:35,267 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:35,267 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:35,267 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:35,267 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:35,267 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:35,267 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:35,267 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:35,267 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:35,268 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:35,268 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:35,268 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:35,268 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:35,268 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:35,268 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:35,268 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:35,269 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:35,269 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:35,269 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:35,269 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:35,272 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:35,272 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:35,272 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [I heard you say go to step six., I don't understand., So,, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:35,272 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:35,273 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:35,273 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:35,273 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:35,273 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [I heard you say go to step six., I don't understand., So,, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:58:35,274 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [I heard you say go to step six., I don't understand., So,, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:35,274 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [I heard you say go to step six., I don't understand., So,, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:35,274 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:43,272 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to step five"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:58:43,272 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:43,272 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to step five}], sender=TextInputComponent, reason=None))
2017-10-24 16:58:43,272 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to step five}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:43,272 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to step five}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:43,273 - session_2017-10-24T16_57_58_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to step five"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:58:43,273 - session_2017-10-24T16_57_58_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:58:43,274 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:58:43,274 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])} for DDD 'recipehelp'
2017-10-24 16:58:43,274 - session_2017-10-24T16_57_58_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}
2017-10-24 16:58:43,274 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:58:43,275 - session_2017-10-24T16_57_58_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to step five"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to step five", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AskMove": {"_type": "ask", "_ddd_name": "recipehelp", "_content": {"445f2b7f7189027ce75dac332c96dde0.WhQuestion": {"_type": "WHQ", "_content": {"24b0f339529d53d987534676834bafa7.LambdaAbstractedPredicateProposition": {"_ontology_name": "RecipehelpOntology", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.BuiltinSort": {"_dynamic": false, "_name": "string"}}, "name": "go_to_step", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to step five", "_modality": "speech", "_background": null, "_speaker": "USR"}}, {"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"7df9060a3399228b5ad4ef77628d15ef.PredicateProposition": {"_polarity": "POS", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.CustomSort": {"_ontology_name": "RecipehelpOntology", "_dynamic": false, "_name": "step"}}, "name": "step_to_choose", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}, "_content": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.CustomSort": {"_ontology_name": "RecipehelpOntology", "_dynamic": false, "_name": "step"}}, "name": "step_to_choose", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}, "_predicted": false, "_type": "PREDICATE", "individual": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.CustomSort": {"_ontology_name": "RecipehelpOntology", "_dynamic": false, "_name": "step"}}, "value": "step5"}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to step five", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:58:43,275 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to step five}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:43,275 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:58:43,275 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:58:43,275 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:43,276 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:43,276 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 16:58:43,276 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:43,276 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 16:58:43,276 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:43,277 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:43,278 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:43,278 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:43,280 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857123.28
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step five
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([?X.confirmation_yn(X)])
tis.sys_turns: 1
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:43,280 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:43,287 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                     ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                     ^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}
?                                                                                                                                    ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}
?                                                                                                                                    ^
-- END TIS changes --
2017-10-24 16:58:43,293 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                     ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                     ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}
?                                                                                                                                    ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}
?                                                                                                                                    ^^
-- END TIS changes --
2017-10-24 16:58:43,294 - session_2017-10-24T16_57_58_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:58:43,295 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:43,298 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five')])
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 16:58:43,298 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:43,305 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
- tis.sys_turns: 1
?                ^
+ tis.sys_turns: 0
?                ^
-- END TIS changes --
2017-10-24 16:58:43,305 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:43,305 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:43,309 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:43,309 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:43,309 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:43,315 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:43,315 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:43,315 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:43,316 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:43,316 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:43,316 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:43,316 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #])
2017-10-24 16:58:43,316 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:43,316 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #])
2017-10-24 16:58:43,316 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:43,322 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {confirmation_yn("go to step five")}
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to step five")}
?                                                                                              ++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five')}
-- END TIS changes --
2017-10-24 16:58:43,322 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:43,322 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:43,327 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to step five")}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to step five"), resolved(?X.confirmation_yn(X))}
?                                                                                                                                  +++++++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             -------------------------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:58:43,328 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:43,332 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          --------------------------------
+ tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:43,332 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:43,332 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:43,332 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:43,332 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:43,332 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:43,332 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:43,332 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:43,332 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:43,332 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:43,333 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:43,333 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:43,337 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          ----------------------------------
+ tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:43,337 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:43,337 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:43,341 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_if_then_else
-- BEGIN TIS changes --
- tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
+ tis.private.plan: Stack([jumpto(perform(say_step))])
-- END TIS changes --
2017-10-24 16:58:43,341 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:43,341 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:43,345 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                 +++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([jumpto(perform(say_step))])
+ tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:58:43,345 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:43,345 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:43,349 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                                                                                  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:58:43,349 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:43,349 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:43,350 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:43,350 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:43,353 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.confirmation_yn(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:58:43,353 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:43,357 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(confirmation_action))])
- tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             -------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:58:43,357 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:43,358 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:43,362 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.plan: Stack([jumpto(perform(confirmation_action))])
+ tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:43,362 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:43,362 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:43,367 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          -------------------------
+ tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to step five"), resolved(?X.confirmation_yn(X))}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
-- END TIS changes --
2017-10-24 16:58:43,367 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:43,367 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:43,367 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:43,367 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:43,368 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:43,368 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, confirmation_yn("go to step five"), sender=DmeModule, reason=None)
2017-10-24 16:58:43,368 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to step five, sender=DmeModule, reason=None)
2017-10-24 16:58:43,368 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:43,368 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:43,369 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857123.28
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five')])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step five
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five')}
tis.shared.pm: {ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:43,370 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:43,375 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.tmp.sys.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                                      -------------------------------------
+ tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:58:43,375 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:43,379 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:43,379 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:43,379 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:43,383 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:43,383 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:43,386 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:43,387 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:43,387 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:43,387 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:43,390 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:43,390 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:43,390 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:43,393 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:58:43,393 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:58:43,394 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:43,394 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, confirmation_yn("go to step five"), sender=DmeModule, reason=None))
2017-10-24 16:58:43,394 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, confirmation_yn("go to step five"), sender=DmeModule, reason=None)
2017-10-24 16:58:43,394 - session_2017-10-24T16_57_58_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, confirmation_yn("go to step five"), sender=DmeModule, reason=None)
2017-10-24 16:58:43,395 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to step five, sender=DmeModule, reason=None))
2017-10-24 16:58:43,395 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to step five, sender=DmeModule, reason=None)
2017-10-24 16:58:43,395 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to step five", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:58:43,395 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:43,395 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:43,395 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:43,396 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:43,396 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:43,397 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:58:43,397 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:43,398 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:58:43,398 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:43,398 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:43,400 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:43,400 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:43,400 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:58:43,400 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:43,400 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:43,401 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:58:43,401 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:58:43,401 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:43,401 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp') generated as u'Step ended'
2017-10-24 16:58:43,401 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:58:43,403 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:43,404 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:58:43,406 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:43,406 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:58:43,406 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:58:43,406 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:43,406 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:58:43,407 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:43,407 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:43,408 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f11996637a0>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1199659488>]
2017-10-24 16:58:43,408 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f11996637a0>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1199659488>], sender=GuiBackend, reason=None)
2017-10-24 16:58:43,408 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:58:43,408 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None))
2017-10-24 16:58:43,408 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:58:43,408 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Step ended"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:58:43,409 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:43,409 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:58:43,409 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:58:43,409 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Step ended"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:58:43,410 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:43,410 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f11996637a0>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1199659488>], sender=GuiBackend, reason=None))
2017-10-24 16:58:43,410 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f11996637a0>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1199659488>], sender=GuiBackend, reason=None)
2017-10-24 16:58:43,410 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "say_step", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Step ended"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:58:43,411 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:43,411 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:43,444 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Step ended"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:58:43,445 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:43,445 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None))
2017-10-24 16:58:43,445 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None)
2017-10-24 16:58:43,446 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:58:43,446 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:43,446 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:43,446 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:43,446 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None))
2017-10-24 16:58:43,448 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857123.45
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step five
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five')}
tis.shared.pm: {ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:43,448 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:43,453 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), Move(answer(step_to_choose(step5)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step five'), #])}
-- END TIS changes --
2017-10-24 16:58:43,453 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:43,454 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:43,454 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:43,461 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five')}
?            ^^
- tis.shared.pm: {ICMMove(icm:per*pos:"go to step six", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:43,461 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:43,461 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:43,464 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:58:43,464 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:43,464 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:43,464 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:43,464 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:43,464 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:43,464 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:43,464 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:43,464 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:43,464 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:43,464 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:43,464 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:43,469 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:58:43,469 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:43,469 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:43,470 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:43,470 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:43,470 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:43,473 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:43,473 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:43,473 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:43,473 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:43,473 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:43,474 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:43,474 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:43,474 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:43,474 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:43,474 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:43,474 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:43,474 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:43,474 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:43,474 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:43,474 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:43,475 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:43,475 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:43,475 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:43,475 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:43,475 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:43,476 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:43,476 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:43,478 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:58:43,479 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:43,479 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:43,479 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:43,479 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:43,479 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:43,480 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:43,480 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 16:58:43,481 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:43,481 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:43,482 - session_2017-10-24T16_57_58_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f1199663f38>:1.0
2017-10-24 16:58:43,482 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:44,482 - session_2017-10-24T16_57_58_0 - DEBUG - Timeout fired
2017-10-24 16:58:44,482 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:44,482 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:44,482 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:44,482 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:44,484 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857124.48
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step five
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five')}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:44,484 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:44,484 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:44,487 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:44,487 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:44,492 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer("go to step five"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to step five')}
-- END TIS changes --
2017-10-24 16:58:44,492 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:44,492 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:44,495 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:44,495 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:44,495 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:44,495 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:44,496 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:44,496 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:44,496 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:44,496 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:44,496 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:58:44,496 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:44,496 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:58:44,496 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:44,496 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:44,496 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:44,496 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:44,496 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:44,497 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:44,497 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:44,497 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:44,497 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:44,497 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:44,497 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:44,498 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:44,498 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:44,498 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:44,498 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:44,498 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:44,499 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:44,499 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:44,499 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:44,499 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:44,500 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857124.48
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step five
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:44,501 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:44,505 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:44,505 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:44,507 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:58:44,507 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:44,508 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:44,510 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
- tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:44,511 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:44,511 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:44,511 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:44,514 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:44,514 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:44,514 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:44,517 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:58:44,517 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:44,517 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:47,324 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 16:58:47,324 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:47,324 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None))
2017-10-24 16:58:47,324 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:47,324 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:47,325 - session_2017-10-24T16_57_58_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 16:58:47,325 - session_2017-10-24T16_57_58_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 16:58:47,325 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 16:58:47,326 - session_2017-10-24T16_57_58_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])} for DDD 'recipehelp'
2017-10-24 16:58:47,326 - session_2017-10-24T16_57_58_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
2017-10-24 16:58:47,326 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:58:47,326 - session_2017-10-24T16_57_58_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 16:58:47,326 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next}], sender=TextInputComponent, reason=None)
2017-10-24 16:58:47,327 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:47,327 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:47,327 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:47,327 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:47,328 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 16:58:47,328 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:47,329 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:58:47,329 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:47,330 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:47,331 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:47,332 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:47,332 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:47,332 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:47,332 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp') generated as u'Are you done?'
2017-10-24 16:58:47,333 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:58:47,334 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:47,337 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:47,337 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:58:47,337 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:47,337 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:47,337 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 16:58:47,338 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1199609878>]
2017-10-24 16:58:47,338 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1199609878>], sender=GuiBackend, reason=None)
2017-10-24 16:58:47,338 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:58:47,338 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None))
2017-10-24 16:58:47,338 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=InterpretModule, reason=None)
2017-10-24 16:58:47,338 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:47,339 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 16:58:47,339 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 16:58:47,339 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:47,339 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None))
2017-10-24 16:58:47,339 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Are you done?], sender=GenerateModule, reason=None)
2017-10-24 16:58:47,339 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Are you done?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:58:47,341 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:47,341 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1199609878>], sender=GuiBackend, reason=None))
2017-10-24 16:58:47,341 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f1199609878>], sender=GuiBackend, reason=None)
2017-10-24 16:58:47,341 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:58:47,342 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:47,342 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:47,357 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["Are you done?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:58:47,357 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:47,357 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None))
2017-10-24 16:58:47,357 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Are you done?], sender=TextOutputComponent, reason=None)
2017-10-24 16:58:47,357 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:58:47,358 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:47,358 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:47,358 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
2017-10-24 16:58:47,358 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None))
2017-10-24 16:58:47,360 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857127.36
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Are you done?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:47,360 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:47,360 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:47,360 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:47,363 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:58:47,364 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:47,364 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:47,367 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:47,367 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:47,367 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:47,367 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:47,367 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:47,367 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:47,367 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:47,367 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:47,368 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:47,368 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:47,368 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:47,368 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:47,371 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.confirmation_yn(X)])
-- END TIS changes --
2017-10-24 16:58:47,371 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:47,371 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:47,372 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:47,372 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:47,372 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:47,372 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:47,372 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:47,372 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:47,372 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:47,372 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:47,372 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:47,372 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:47,372 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:47,373 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:47,373 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:47,373 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:47,373 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:47,373 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:47,374 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:47,374 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:47,374 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:47,377 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 16:58:47,377 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:47,377 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:47,377 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:47,377 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:47,377 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:47,378 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:47,378 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 16:58:47,378 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:47,379 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Are you done?], latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 16:58:47,379 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:47,380 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:47,380 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
2017-10-24 16:58:47,380 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:47,382 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857127.38
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([?X.confirmation_yn(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:47,382 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:47,387 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
-- END TIS changes --
2017-10-24 16:58:47,394 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
?                                                                                                                               ^^
-- END TIS changes --
2017-10-24 16:58:47,396 - session_2017-10-24T16_57_58_0 - INFO - hypotheses reranking had no effect
2017-10-24 16:58:47,396 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:47,402 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
?                                        ^ ^^^^  ^^^^^ ^^^^^^^^^                                    ^^                              ^
+ tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
?                                       + ^^^ ^^ ++++ ^^ ^                                   + ^                              ^^                 +++++++++++++++++++++++++
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 16:58:47,402 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:47,409 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 16:58:47,409 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:47,409 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:47,412 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:47,412 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:47,412 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:47,417 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:47,417 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:47,417 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:47,417 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:47,417 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:47,417 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:47,417 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:58:47,417 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:47,418 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
2017-10-24 16:58:47,418 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:47,423 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {confirmation_yn("go to next")}
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
?                                                                                              +++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:58:47,423 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:47,423 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:47,427 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next")}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
?                                                                                                                             +++++++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             -------------------------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:58:47,428 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:47,431 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          --------------------------------
+ tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:47,431 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:47,432 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:47,432 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:47,432 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:47,432 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:47,432 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:47,432 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:47,432 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:47,432 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:47,432 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:47,432 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:47,437 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.plan: Stack([device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          ----------------------------------
+ tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:47,437 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:47,437 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:47,440 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_if_then_else
-- BEGIN TIS changes --
- tis.private.plan: Stack([if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
+ tis.private.plan: Stack([jumpto(perform(say_step))])
-- END TIS changes --
2017-10-24 16:58:47,440 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:47,440 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:47,444 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                 +++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([jumpto(perform(say_step))])
+ tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++
-- END TIS changes --
2017-10-24 16:58:47,444 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:47,444 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:47,448 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                                                                                  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 16:58:47,448 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:47,448 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:47,448 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:47,448 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:47,451 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.confirmation_yn(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 16:58:47,452 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:47,455 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(confirmation_action))])
- tis.shared.goals: stackset([perform(say_step), perform(confirmation_action), perform(top)])
?                             -------------------
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 16:58:47,455 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:47,455 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:47,459 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.plan: Stack([jumpto(perform(confirmation_action))])
+ tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 16:58:47,459 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:47,460 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:47,464 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          -------------------------
+ tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step), confirmation_yn("go to next"), resolved(?X.confirmation_yn(X))}
+ tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
-- END TIS changes --
2017-10-24 16:58:47,464 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:47,464 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:47,465 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:47,465 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:47,465 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:47,465 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:58:47,465 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:58:47,466 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:47,466 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:47,467 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857127.38
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:47,467 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:47,471 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:47,471 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:47,476 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:47,477 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:47,477 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:47,480 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 16:58:47,481 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:47,484 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:47,484 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:47,484 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:47,484 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:47,487 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:47,487 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:47,487 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:47,490 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 16:58:47,491 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:58:47,491 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:47,491 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None))
2017-10-24 16:58:47,491 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:58:47,491 - session_2017-10-24T16_57_58_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, confirmation_yn("go to next"), sender=DmeModule, reason=None)
2017-10-24 16:58:47,492 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None))
2017-10-24 16:58:47,492 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next, sender=DmeModule, reason=None)
2017-10-24 16:58:47,492 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 16:58:47,492 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:47,492 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:47,493 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:47,493 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:47,493 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:47,494 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None)))
2017-10-24 16:58:47,494 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}, sender=TurnManager, reason=None))
2017-10-24 16:58:47,495 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 16:58:47,495 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:47,495 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:47,497 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:47,497 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:47,497 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:58:47,497 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:47,497 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:47,497 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 16:58:47,498 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 16:58:47,498 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:47,498 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp') generated as u'Step ended'
2017-10-24 16:58:47,498 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:58:47,500 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:47,501 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:58:47,503 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 16:58:47,503 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 16:58:47,503 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 16:58:47,503 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:47,503 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 16:58:47,503 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), device_activity_terminated(say_step), DeviceResultProposition(go_to_next, [], True, None), DeviceResultProposition(say_step, [], True, None), confirmation(no)})
2017-10-24 16:58:47,503 - session_2017-10-24T16_57_58_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 16:58:47,504 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1198de5b90>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1198de59e0>]
2017-10-24 16:58:47,504 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1198de5b90>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1198de59e0>], sender=GuiBackend, reason=None)
2017-10-24 16:58:47,504 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posted event
2017-10-24 16:58:47,504 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None))
2017-10-24 16:58:47,505 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 16:58:47,505 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Step ended"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 16:58:47,505 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:47,505 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None))
2017-10-24 16:58:47,506 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 16:58:47,506 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Step ended"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 16:58:47,506 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:47,506 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1198de5b90>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1198de59e0>], sender=GuiBackend, reason=None))
2017-10-24 16:58:47,507 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f1198de5b90>, <tdm.tdm_gui_protocol.Popup instance at 0x7f1198de59e0>], sender=GuiBackend, reason=None)
2017-10-24 16:58:47,507 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "say_step", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Step ended"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 16:58:47,507 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:47,508 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:47,531 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Step ended"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 16:58:47,532 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 16:58:47,532 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None))
2017-10-24 16:58:47,532 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None)
2017-10-24 16:58:47,532 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 16:58:47,533 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:47,533 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:47,533 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 16:58:47,533 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None))
2017-10-24 16:58:47,535 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857127.53
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:47,535 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:47,538 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next'), #])}
-- END TIS changes --
2017-10-24 16:58:47,538 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:47,538 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:47,538 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:47,546 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
?            ^^
- tis.shared.pm: {Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:47,546 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:47,546 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:47,549 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 16:58:47,549 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:47,549 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:47,549 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:47,549 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:47,549 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:47,549 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:47,549 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:47,549 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:47,549 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:47,550 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 16:58:47,550 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:47,554 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 16:58:47,555 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:47,555 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:47,555 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:47,555 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:47,555 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:47,558 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 16:58:47,558 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 16:58:47,558 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:47,558 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 16:58:47,558 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:47,559 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:47,559 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:47,559 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:47,559 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:47,559 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:47,559 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:47,559 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:47,560 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:47,560 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:47,560 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:47,560 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:47,560 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:47,560 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:47,560 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:47,561 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:47,561 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:47,561 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:47,564 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 16:58:47,564 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:47,564 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:47,564 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 16:58:47,564 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:47,565 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 16:58:47,565 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 16:58:47,566 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 16:58:47,567 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:47,567 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Step ended], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 16:58:47,567 - session_2017-10-24T16_57_58_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f1198df7950>:1.0
2017-10-24 16:58:47,568 - session_2017-10-24T16_57_58_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 16:58:48,567 - session_2017-10-24T16_57_58_0 - DEBUG - Timeout fired
2017-10-24 16:58:48,568 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:48,568 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:48,568 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 16:58:48,568 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 16:58:48,570 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857128.57
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:48,570 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:filterReadings
2017-10-24 16:58:48,570 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 16:58:48,573 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:48,573 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 16:58:48,578 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer("go to next"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'go to next')}
-- END TIS changes --
2017-10-24 16:58:48,578 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 16:58:48,578 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 16:58:48,581 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:48,581 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 16:58:48,581 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 16:58:48,581 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 16:58:48,581 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 16:58:48,581 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 16:58:48,582 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 16:58:48,582 - session_2017-10-24T16_57_58_0 - INFO - BEGIN integrate_moves
2017-10-24 16:58:48,582 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:58:48,582 - session_2017-10-24T16_57_58_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 16:58:48,582 - session_2017-10-24T16_57_58_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 16:58:48,582 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:integrate
2017-10-24 16:58:48,582 - session_2017-10-24T16_57_58_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 16:58:48,582 - session_2017-10-24T16_57_58_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 16:58:48,582 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:48,582 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:48,582 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:48,582 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:accommodate
2017-10-24 16:58:48,583 - session_2017-10-24T16_57_58_0 - INFO - breaking out of accommodate
2017-10-24 16:58:48,583 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_reject
2017-10-24 16:58:48,583 - session_2017-10-24T16_57_58_0 - INFO - END integrate_moves
2017-10-24 16:58:48,583 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:48,583 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:48,584 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 16:58:48,584 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 16:58:48,584 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:exec_plan
2017-10-24 16:58:48,584 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:load_plan
2017-10-24 16:58:48,585 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 16:58:48,586 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 16:58:48,586 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 16:58:48,586 - session_2017-10-24T16_57_58_0 - INFO - running ISU module: select
2017-10-24 16:58:48,587 - session_2017-10-24T16_57_58_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f119b530090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f11995fcad0>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857128.57
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.sys.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}
tis.private.tmp.usr.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.usr.qud: stackset([?X.confirmation_yn(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 16:58:48,587 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 16:58:48,591 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:48,591 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_action
2017-10-24 16:58:48,593 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 16:58:48,594 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:48,594 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:48,596 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)))])
- tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 16:58:48,597 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_icm
2017-10-24 16:58:48,597 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:select_move
2017-10-24 16:58:48,597 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 16:58:48,599 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 16:58:48,599 - session_2017-10-24T16_57_58_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 16:58:48,599 - session_2017-10-24T16_57_58_0 - DEBUG - rulegroup:set_timeout
2017-10-24 16:58:48,602 - session_2017-10-24T16_57_58_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 16:58:48,602 - session_2017-10-24T16_57_58_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 16:58:48,603 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 17:02:50,489 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 17:02:50,489 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(STOP, None, sender=Backend, reason=None))
2017-10-24 17:02:50,490 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(STOP, None, sender=Backend, reason=None)
2017-10-24 17:02:50,490 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 17:02:50,491 - session_2017-10-24T16_57_58_0 - DEBUG - InterpretModule posts Event(STOPPED, None, sender=InterpretModule, reason=None)
2017-10-24 17:02:50,491 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 17:02:50,491 - session_2017-10-24T16_57_58_0 - DEBUG - DmeModule posts Event(STOPPED, None, sender=DmeModule, reason=None)
2017-10-24 17:02:50,491 - session_2017-10-24T16_57_58_0 - DEBUG - DeviceManager handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 17:02:50,491 - session_2017-10-24T16_57_58_0 - DEBUG - DeviceManager posts Event(STOPPED, None, sender=DeviceManager, reason=None)
2017-10-24 17:02:50,491 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 17:02:50,491 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule posts Event(STOPPED, None, sender=GenerateModule, reason=None)
2017-10-24 17:02:50,492 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 17:02:50,492 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend posts Event(STOPPED, None, sender=IndependentGuiBackend, reason=None)
2017-10-24 17:02:50,492 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 17:02:50,492 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend posts Event(STOPPED, None, sender=GuiBackend, reason=None)
2017-10-24 17:02:50,492 - session_2017-10-24T16_57_58_0 - DEBUG - CogloadModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 17:02:50,493 - session_2017-10-24T16_57_58_0 - DEBUG - CogloadModule posts Event(STOPPED, None, sender=CogloadModule, reason=None)
2017-10-24 17:02:50,493 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None))
2017-10-24 17:02:50,493 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: confirmation, grammar_entry: None, value: no}], sender=DmeModule, reason=None)
2017-10-24 17:02:50,493 - session_2017-10-24T16_57_58_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "confirmation", "grammar_entry": null, "value": "no"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 17:02:50,493 - session_2017-10-24T16_57_58_0 - DEBUG - Sent.
2017-10-24 17:02:50,494 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 17:02:50,494 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 17:02:50,494 - session_2017-10-24T16_57_58_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 17:02:50,494 - session_2017-10-24T16_57_58_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 17:02:50,495 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 17:02:50,496 - session_2017-10-24T16_57_58_0 - DEBUG - GenerateModule ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 17:02:50,498 - session_2017-10-24T16_57_58_0 - DEBUG - IndependentGuiBackend ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 17:02:50,500 - session_2017-10-24T16_57_58_0 - DEBUG - GuiBackend ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None), device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None), confirmation(no)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(go_to_next), device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 17:02:50,500 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=InterpretModule, reason=None))
2017-10-24 17:02:50,500 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=InterpretModule, reason=None)
2017-10-24 17:02:50,500 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=DmeModule, reason=None))
2017-10-24 17:02:50,500 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=DmeModule, reason=None)
2017-10-24 17:02:50,500 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=DeviceManager, reason=None))
2017-10-24 17:02:50,500 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=DeviceManager, reason=None)
2017-10-24 17:02:50,500 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=GenerateModule, reason=None))
2017-10-24 17:02:50,501 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=GenerateModule, reason=None)
2017-10-24 17:02:50,501 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=IndependentGuiBackend, reason=None))
2017-10-24 17:02:50,501 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=IndependentGuiBackend, reason=None)
2017-10-24 17:02:50,501 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=GuiBackend, reason=None))
2017-10-24 17:02:50,501 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=GuiBackend, reason=None)
2017-10-24 17:02:50,501 - session_2017-10-24T16_57_58_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=CogloadModule, reason=None))
2017-10-24 17:02:50,501 - session_2017-10-24T16_57_58_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=CogloadModule, reason=None)

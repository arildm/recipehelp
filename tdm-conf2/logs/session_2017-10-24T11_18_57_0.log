2017-10-24 11:18:57,538 - session_2017-10-24T11_18_57_0 - DEBUG - Backend()
2017-10-24 11:18:57,538 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.initialize()
2017-10-24 11:18:57,566 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.add_module(DmeModule, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7fc1d5119e50>>, False])
2017-10-24 11:18:57,566 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.add_module(GenerateModule, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7fc1d5119e50>>, 'eng'])
2017-10-24 11:18:57,566 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.add_module(DeviceManager, args=[])
2017-10-24 11:18:57,566 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.add_module(CogloadModule, args=[])
2017-10-24 11:18:57,567 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(IDLE, __init__) (previous state was None)
2017-10-24 11:18:57,567 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.add_module(GuiBackend, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7fc1d5119e50>>, True, 'disabled'])
2017-10-24 11:18:57,567 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.add_module(IndependentGuiBackend, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7fc1d5119e50>>])
2017-10-24 11:18:57,567 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.add_module(InterpretModule, args=[<bound method Backend.get_device_manager of <tdm.backend.Backend object at 0x7fc1d5119e50>>, <bound method Backend.get_tis of <tdm.backend.Backend object at 0x7fc1d5119e50>>, 'eng', False, True])
2017-10-24 11:18:57,567 - session_2017-10-24T11_18_57_0 - DEBUG - Backend initialized
2017-10-24 11:18:57,567 - session_2017-10-24T11_18_57_0 - DEBUG - Backend started in directory '/home/gusmatssar/recipedialogue/tdm'
2017-10-24 11:18:57,567 - session_2017-10-24T11_18_57_0 - DEBUG - Backend uses TDM version '5.0.0'
2017-10-24 11:18:57,567 - session_2017-10-24T11_18_57_0 - DEBUG - Backend uses backend config {u'active_ddd': u'recipehelp', u'ddds': [u'recipehelp'], u'asr': u'none', u'use_recognition_profile': False, u'use_word_list_correction': False, u'supported_languages': [u'eng'], u'repeat_questions': False}
2017-10-24 11:18:57,567 - session_2017-10-24T11_18_57_0 - DEBUG - Backend uses language 'eng'
2017-10-24 11:18:57,567 - session_2017-10-24T11_18_57_0 - DEBUG - running module InterpretModule
2017-10-24 11:18:57,567 - session_2017-10-24T11_18_57_0 - DEBUG - running module DmeModule
2017-10-24 11:18:57,569 - session_2017-10-24T11_18_57_0 - DEBUG - running module DeviceManager
2017-10-24 11:18:57,569 - session_2017-10-24T11_18_57_0 - DEBUG - running module GenerateModule
2017-10-24 11:18:57,569 - session_2017-10-24T11_18_57_0 - DEBUG - running module IndependentGuiBackend
2017-10-24 11:18:57,569 - session_2017-10-24T11_18_57_0 - DEBUG - running module GuiBackend
2017-10-24 11:18:57,569 - session_2017-10-24T11_18_57_0 - DEBUG - running module CogloadModule
2017-10-24 11:18:57,570 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:18:57,570 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:18:57,571 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(REGISTER_BACKEND, None, sender=Backend, reason=None))
2017-10-24 11:18:57,571 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(REGISTER_BACKEND, None, sender=Backend, reason=None)
2017-10-24 11:18:57,572 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "Backend", "_reason": null, "event_type": "REGISTER_BACKEND"}
2017-10-24 11:18:57,573 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:18:57,573 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:18:57,605 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend received event {"content": null, "_sender": "Frontend", "_reason": null, "event_type": "FRONTEND_READY"}
2017-10-24 11:18:57,606 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:18:57,606 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(FRONTEND_READY, None, sender=Frontend, reason=None))
2017-10-24 11:18:57,607 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(FRONTEND_READY, None, sender=Frontend, reason=None)
2017-10-24 11:18:57,607 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(BACKEND_READY, None, sender=Backend, reason=None))
2017-10-24 11:18:57,607 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(BACKEND_READY, None, sender=Backend, reason=None)
2017-10-24 11:18:57,607 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "Backend", "_reason": null, "event_type": "BACKEND_READY"}
2017-10-24 11:18:57,608 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:18:57,608 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:18:57,611 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend received event {"content": null, "_sender": "Frontend", "_reason": null, "event_type": "START"}
2017-10-24 11:18:57,611 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:18:57,611 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(START, None, sender=Frontend, reason=None))
2017-10-24 11:18:57,611 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:18:57,611 - session_2017-10-24T11_18_57_0 - DEBUG - InterpretModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:18:57,612 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:18:57,612 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 11:18:57,612 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: update (Event(START, None, sender=Frontend, reason=None))
2017-10-24 11:18:57,613 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836737.61
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(START, None, sender=Frontend, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: None
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([do(top)])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: None
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:18:57,613 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:18:57,613 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:18:57,613 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:18:57,616 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:18:57,616 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:18:57,617 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:18:57,619 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:18:57,619 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:18:57,619 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:18:57,619 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:18:57,619 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:18:57,619 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:18:57,619 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:18:57,619 - session_2017-10-24T11_18_57_0 - INFO - BEGIN integrate_moves
2017-10-24 11:18:57,619 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:18:57,620 - session_2017-10-24T11_18_57_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:18:57,620 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:18:57,620 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:18:57,620 - session_2017-10-24T11_18_57_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:18:57,620 - session_2017-10-24T11_18_57_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:18:57,620 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:18:57,620 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:18:57,620 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:18:57,621 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:18:57,621 - session_2017-10-24T11_18_57_0 - INFO - breaking out of accommodate
2017-10-24 11:18:57,621 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:18:57,621 - session_2017-10-24T11_18_57_0 - INFO - END integrate_moves
2017-10-24 11:18:57,621 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:18:57,622 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:18:57,624 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([do(top)])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:18:57,624 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:18:57,626 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:18:57,626 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:18:57,627 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:18:57,627 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:18:57,627 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:18:57,627 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:18:57,627 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:18:57,627 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:18:57,628 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:18:57,628 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:18:57,628 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:18:57,628 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: select
2017-10-24 11:18:57,629 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836737.61
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(START, None, sender=Frontend, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: None
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: None
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:18:57,629 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:18:57,632 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.goals: stackset([])
+ tis.private.tmp.sys.goals: stackset([perform(top)])
?                                      ++++++++++++
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 11:18:57,632 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:18:57,634 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.goal(X))])
?                                                                  +++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:18:57,634 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:18:57,637 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
?                                       +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.goal(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:18:57,637 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_move
2017-10-24 11:18:57,640 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
?                                                              +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:18:57,640 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:18:57,640 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_move
2017-10-24 11:18:57,640 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:18:57,642 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:18:57,642 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:18:57,642 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:18:57,644 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: None
?                       ^^^^
+ tis.timeout.duration: 5.0
?                       ^^^
-- END TIS changes --
2017-10-24 11:18:57,645 - session_2017-10-24T11_18_57_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:18:57,645 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None))
2017-10-24 11:18:57,645 - session_2017-10-24T11_18_57_0 - DEBUG - DeviceManager handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:18:57,645 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:18:57,645 - session_2017-10-24T11_18_57_0 - DEBUG - IndependentGuiBackend handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:18:57,645 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:18:57,645 - session_2017-10-24T11_18_57_0 - DEBUG - CogloadModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 11:18:57,646 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None))
2017-10-24 11:18:57,646 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 11:18:57,646 - session_2017-10-24T11_18_57_0 - DEBUG - IndependentGuiBackend handles Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 11:18:57,646 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend handles Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 11:18:57,646 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": {"ddd_name": "recipehelp", "language_code": "eng"}, "_sender": "DmeModule", "_reason": null, "event_type": "SET_DDD"}
2017-10-24 11:18:57,647 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:18:57,647 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:18:57,647 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:18:57,647 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:18:57,648 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:18:57,648 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None)))
2017-10-24 11:18:57,649 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None))
2017-10-24 11:18:57,649 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:18:57,649 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:18:57,649 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:18:57,650 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:18:57,650 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 11:18:57,650 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 11:18:57,650 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:18:57,650 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:18:57,651 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 11:18:57,651 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 11:18:57,651 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:18:57,652 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 11:18:57,652 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:18:57,653 - session_2017-10-24T11_18_57_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:18:57,654 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:18:57,655 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:18:57,655 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:18:57,655 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 11:18:57,655 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 11:18:57,655 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:18:57,655 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:18:57,656 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend generated message []
2017-10-24 11:18:57,656 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:18:57,656 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend posted event
2017-10-24 11:18:57,656 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 11:18:57,656 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:18:57,656 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:18:57,657 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:18:57,657 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 11:18:57,657 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:18:57,657 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:18:57,658 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:18:57,658 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:18:57,698 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend received event {"content": ["", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:18:57,699 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:18:57,699 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 11:18:57,699 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 11:18:57,699 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:18:57,699 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:18:57,700 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:18:57,700 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:18:57,700 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 11:18:57,701 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836737.7
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:18:57,701 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:18:57,701 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:18:57,701 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:18:57,705 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: None
?                        ^^^^
+ tis.shared.lu.speaker: SYS
?                        ^^^
-- END TIS changes --
2017-10-24 11:18:57,705 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:18:57,705 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:18:57,707 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:18:57,707 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:18:57,707 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:18:57,707 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:18:57,707 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:18:57,707 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:18:57,707 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:18:57,708 - session_2017-10-24T11_18_57_0 - INFO - BEGIN integrate_moves
2017-10-24 11:18:57,708 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:18:57,708 - session_2017-10-24T11_18_57_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:18:57,708 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:18:57,708 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:18:57,711 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:18:57,712 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:18:57,712 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:18:57,712 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:18:57,712 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:18:57,712 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:18:57,715 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 11:18:57,716 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:18:57,716 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:18:57,716 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:18:57,716 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:18:57,716 - session_2017-10-24T11_18_57_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:18:57,716 - session_2017-10-24T11_18_57_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:18:57,716 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:18:57,716 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:18:57,716 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:18:57,716 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:18:57,717 - session_2017-10-24T11_18_57_0 - INFO - breaking out of accommodate
2017-10-24 11:18:57,717 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:18:57,717 - session_2017-10-24T11_18_57_0 - INFO - END integrate_moves
2017-10-24 11:18:57,717 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:18:57,717 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:18:57,717 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:18:57,717 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:18:57,717 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:18:57,718 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:18:57,718 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:18:57,718 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:18:57,720 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:18:57,721 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:18:57,721 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:18:57,721 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:18:57,721 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:18:57,721 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:18:57,722 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:18:57,722 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:18:57,722 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:18:57,722 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:18:57,723 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:19:09,217 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "\u00f9tell me what to do"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:19:09,217 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:19:09,218 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: ùtell me what to do}], sender=TextInputComponent, reason=None))
2017-10-24 11:19:09,218 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: ùtell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:19:09,218 - session_2017-10-24T11_18_57_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: ùtell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:19:09,218 - session_2017-10-24T11_18_57_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "\u00f9tell me what to do"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:19:09,219 - session_2017-10-24T11_18_57_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:19:09,224 - session_2017-10-24T11_18_57_0 - DEBUG - ExactInterpreter: Found no valid exact interpretations, returning an empty result.
2017-10-24 11:19:09,224 - session_2017-10-24T11_18_57_0 - DEBUG - Result from 'ExactInterpreter': []
2017-10-24 11:19:09,224 - session_2017-10-24T11_18_57_0 - DEBUG - Starting 'RobustInterpreter'
2017-10-24 11:19:09,224 - session_2017-10-24T11_18_57_0 - DEBUG - DddInterpreter.interpret_partially: timeout=1.99461317062
2017-10-24 11:19:09,255 - session_2017-10-24T11_18_57_0 - DEBUG - robust grammatical interpretations: []
2017-10-24 11:19:09,264 - session_2017-10-24T11_18_57_0 - DEBUG - _remove_literals(): Got no valid interpretations of partial utterances
2017-10-24 11:19:09,264 - session_2017-10-24T11_18_57_0 - DEBUG - RobustInterpreter: Partial interpretation failed.
2017-10-24 11:19:09,264 - session_2017-10-24T11_18_57_0 - DEBUG - RobustInterpreter: use_word_list_correction disabled, skipping interpretation with word correction
2017-10-24 11:19:09,264 - session_2017-10-24T11_18_57_0 - DEBUG - RobustInterpreter: Found no robust interpretations, returning an empty result.
2017-10-24 11:19:09,264 - session_2017-10-24T11_18_57_0 - DEBUG - Result from 'RobustInterpreter': []
2017-10-24 11:19:09,264 - session_2017-10-24T11_18_57_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {}, sender=InterpretModule, reason=None)
2017-10-24 11:19:09,264 - session_2017-10-24T11_18_57_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:19:09,265 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: ùtell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:19:09,265 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {}, sender=InterpretModule, reason=None))
2017-10-24 11:19:09,265 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {}, sender=InterpretModule, reason=None)
2017-10-24 11:19:09,265 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:19:09,265 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:19:09,265 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 11:19:09,266 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:09,266 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 11:19:09,266 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 11:19:09,267 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 11:19:09,267 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
2017-10-24 11:19:09,267 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: update (Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 11:19:09,268 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836749.27
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: ùtell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:09,268 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:19:09,268 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:19:09,271 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:19:09,271 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:19:09,277 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:19:09,277 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:19:09,278 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:19:09,281 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:09,281 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:19:09,281 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:19:09,281 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:19:09,281 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:19:09,281 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:19:09,281 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:19:09,281 - session_2017-10-24T11_18_57_0 - INFO - BEGIN integrate_moves
2017-10-24 11:19:09,282 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:19:09,282 - session_2017-10-24T11_18_57_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:19:09,282 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:19:09,282 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:09,282 - session_2017-10-24T11_18_57_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:19:09,282 - session_2017-10-24T11_18_57_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:19:09,282 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:09,282 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:09,282 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:09,282 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:19:09,283 - session_2017-10-24T11_18_57_0 - INFO - breaking out of accommodate
2017-10-24 11:19:09,283 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:09,283 - session_2017-10-24T11_18_57_0 - INFO - END integrate_moves
2017-10-24 11:19:09,283 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:09,283 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:09,283 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:19:09,285 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.goal(X)])
?                           ----------
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:19:09,286 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:09,286 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:09,286 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:09,286 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:09,286 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:19:09,286 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:19:09,287 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: select
2017-10-24 11:19:09,288 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836749.27
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: ùtell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:09,288 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:19:09,291 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.tmp.sys.agenda: OpenQueue([#])
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                      ++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:19:09,291 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:09,293 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: reraiseIssue
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise)), raise(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:19:09,293 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:19:09,295 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectIcmSemNeg
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg)])
-- END TIS changes --
2017-10-24 11:19:09,295 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_move
2017-10-24 11:19:09,296 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:19:09,300 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise)])
?                                                                                                         ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise)), raise(?X.goal(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, raise(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:19:09,300 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_move
2017-10-24 11:19:09,303 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))])
?                                                                                                                               +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, raise(?X.goal(X))])
?                                 -------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:19:09,303 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:19:09,303 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_move
2017-10-24 11:19:09,303 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:19:09,305 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:09,305 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:19:09,305 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:19:09,307 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:09,308 - session_2017-10-24T11_18_57_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:19:09,308 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 11:19:09,308 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:19:09,308 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:19:09,308 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:19:09,309 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:09,309 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None)))
2017-10-24 11:19:09,309 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {}, sender=TurnManager, reason=None))
2017-10-24 11:19:09,310 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:19:09,310 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:09,311 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:09,312 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:09,312 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:per*pos:"ùtell me what to do"), facts={})
2017-10-24 11:19:09,312 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:per*pos:"ùtell me what to do")
2017-10-24 11:19:09,312 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:sem*neg), facts={})
2017-10-24 11:19:09,312 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:sem*neg)
2017-10-24 11:19:09,313 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise), facts={})
2017-10-24 11:19:09,313 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise)
2017-10-24 11:19:09,313 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:19:09,313 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:19:09,313 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:per*pos:"ùtell me what to do")
2017-10-24 11:19:09,313 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Move ICMMove(icm:per*pos:"ùtell me what to do") generated as u'I heard you say \xf9tell me what to do.'
2017-10-24 11:19:09,313 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:sem*neg)
2017-10-24 11:19:09,314 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Move ICMMove(icm:sem*neg) generated as u"I don't understand."
2017-10-24 11:19:09,314 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise)
2017-10-24 11:19:09,314 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise) generated as u'So,'
2017-10-24 11:19:09,314 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:19:09,315 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 11:19:09,315 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say ùtell me what to do., I don't understand., So,, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:19:09,316 - session_2017-10-24T11_18_57_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:09,318 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:09,318 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:19:09,319 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:19:09,319 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:per*pos:"ùtell me what to do"), facts={})
2017-10-24 11:19:09,320 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:per*pos:"ùtell me what to do")
2017-10-24 11:19:09,320 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:sem*neg), facts={})
2017-10-24 11:19:09,320 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:sem*neg)
2017-10-24 11:19:09,320 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise), facts={})
2017-10-24 11:19:09,320 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise)
2017-10-24 11:19:09,320 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:19:09,320 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:19:09,321 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend generated message []
2017-10-24 11:19:09,321 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:19:09,322 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend posted event
2017-10-24 11:19:09,322 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say ùtell me what to do., I don't understand., So,, What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 11:19:09,322 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [I heard you say ùtell me what to do., I don't understand., So,, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:19:09,322 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": ["I heard you say \u00f9tell me what to do.", "I don't understand.", "So,", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:19:09,322 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:09,323 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 11:19:09,323 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:19:09,323 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:19:09,325 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:09,325 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:19:09,326 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend received event {"content": ["I heard you say \u00f9tell me what to do.", "I don't understand.", "So,", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:19:09,326 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:19:09,327 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [I heard you say ùtell me what to do., I don't understand., So,, What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 11:19:09,327 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [I heard you say ùtell me what to do., I don't understand., So,, What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 11:19:09,327 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:19:09,327 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [I heard you say ùtell me what to do., I don't understand., So,, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:19:09,328 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [I heard you say ùtell me what to do., I don't understand., So,, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:19:09,328 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [I heard you say ùtell me what to do., I don't understand., So,, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:19:09,328 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [I heard you say ùtell me what to do., I don't understand., So,, What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 11:19:09,329 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836749.33
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [I heard you say ùtell me what to do., I don't understand., So,, What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: ùtell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:09,330 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:19:09,330 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:19:09,331 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:19:09,335 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
- tis.sys_turns: 0
?                ^
+ tis.sys_turns: 1
?                ^
-- END TIS changes --
2017-10-24 11:19:09,335 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:19:09,335 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:19:09,338 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:09,338 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:19:09,338 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:19:09,338 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:19:09,338 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:19:09,338 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:19:09,338 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:19:09,339 - session_2017-10-24T11_18_57_0 - INFO - BEGIN integrate_moves
2017-10-24 11:19:09,339 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:19:09,339 - session_2017-10-24T11_18_57_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:19:09,339 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:19:09,339 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:09,343 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                                         ^^^ ^^^^^^^^^^^^^^^^^^^^^^^^^                                       ----------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                                         ^^^ ^^^
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:19:09,343 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:19:09,343 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:09,344 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:19:09,344 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:09,344 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:09,347 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
?                                                                                             ++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:19:09,348 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:19:09,348 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:09,348 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:19:09,348 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:09,348 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:09,352 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0)}
?                                                                                                                                           ++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:19:09,352 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:19:09,352 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:09,352 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:19:09,352 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:09,352 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:09,355 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?                                                                                                                                                                                         ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 11:19:09,355 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:19:09,356 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:09,356 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:19:09,356 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:09,356 - session_2017-10-24T11_18_57_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:19:09,356 - session_2017-10-24T11_18_57_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:19:09,356 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:09,356 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:09,357 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:09,357 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:19:09,357 - session_2017-10-24T11_18_57_0 - INFO - breaking out of accommodate
2017-10-24 11:19:09,357 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:09,357 - session_2017-10-24T11_18_57_0 - INFO - END integrate_moves
2017-10-24 11:19:09,357 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:09,357 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:09,357 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:19:09,357 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:09,358 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:09,358 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:09,358 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:09,358 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:19:09,360 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:09,360 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:19:09,360 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [I heard you say ùtell me what to do., I don't understand., So,, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:19:09,361 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:19:09,361 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:19:09,361 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:19:09,361 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:09,361 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [I heard you say ùtell me what to do., I don't understand., So,, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:19:09,362 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [I heard you say ùtell me what to do., I don't understand., So,, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:19:09,362 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [I heard you say ùtell me what to do., I don't understand., So,, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:19:09,362 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:19:18,679 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to a step"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:19:18,679 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:19:18,679 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None))
2017-10-24 11:19:18,679 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 11:19:18,680 - session_2017-10-24T11_18_57_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 11:19:18,680 - session_2017-10-24T11_18_57_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to a step"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:19:18,680 - session_2017-10-24T11_18_57_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:19:18,682 - session_2017-10-24T11_18_57_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 11:19:18,682 - session_2017-10-24T11_18_57_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])} for DDD 'recipehelp'
2017-10-24 11:19:18,682 - session_2017-10-24T11_18_57_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
2017-10-24 11:19:18,682 - session_2017-10-24T11_18_57_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:19:18,683 - session_2017-10-24T11_18_57_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AskMove": {"_type": "ask", "_ddd_name": "recipehelp", "_content": {"445f2b7f7189027ce75dac332c96dde0.WhQuestion": {"_type": "WHQ", "_content": {"24b0f339529d53d987534676834bafa7.LambdaAbstractedPredicateProposition": {"_ontology_name": "RecipehelpOntology", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.BuiltinSort": {"_dynamic": false, "_name": "string"}}, "name": "go_to_step", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to a step", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to a step"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to a step", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:19:18,683 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to a step}], sender=TextInputComponent, reason=None)
2017-10-24 11:19:18,683 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None))
2017-10-24 11:19:18,683 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:19:18,683 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:19:18,683 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:19:18,683 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 11:19:18,684 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:18,684 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 11:19:18,684 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:19:18,685 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:19:18,686 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:19:18,686 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:19:18,687 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836758.69
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do"), ICMMove(icm:sem*neg), ICMMove(icm:reraise), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 1
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:18,688 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:19:18,694 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #]), OpenQueue([Move(answer("go to a step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
-- END TIS changes --
2017-10-24 11:19:18,694 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:19:18,699 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                 ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                 ^
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to a step'), #])}
?                                                                                                                                ^
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
?                                                                                                                                ^
-- END TIS changes --
2017-10-24 11:19:18,700 - session_2017-10-24T11_18_57_0 - INFO - hypotheses reranking had no effect
2017-10-24 11:19:18,700 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:19:18,703 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 11:19:18,703 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:19:18,709 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
- tis.sys_turns: 1
?                ^
+ tis.sys_turns: 0
?                ^
-- END TIS changes --
2017-10-24 11:19:18,709 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:19:18,709 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:19:18,711 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:18,711 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:19:18,711 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:19:18,716 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([])
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
- tis.private.tmp.usr.plan: Stack([])
+ tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
- tis.private.tmp.usr.qud: stackset([])
+ tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                    ++++++++++
-- END TIS changes --
2017-10-24 11:19:18,716 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:19:18,716 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:19:18,716 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:19:18,716 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:19:18,716 - session_2017-10-24T11_18_57_0 - INFO - BEGIN integrate_moves
2017-10-24 11:19:18,716 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
2017-10-24 11:19:18,717 - session_2017-10-24T11_18_57_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:19:18,717 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
2017-10-24 11:19:18,717 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:18,720 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: integrateUsrAsk
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
- tis.private.nim: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
- tis.shared.qud: stackset([?X.goal(X)])
+ tis.shared.qud: stackset([?X.go_to_step(X), ?X.goal(X)])
?                                ++++++++++++++++++
-- END TIS changes --
2017-10-24 11:19:18,720 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:19:18,720 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:18,723 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: downdateISSUES2
-- BEGIN TIS changes --
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                                                        --------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 11:19:18,723 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:19:18,723 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:18,727 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: findIssuePlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                                                   - ^ ^ -----------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^ ^^
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 11:19:18,727 - session_2017-10-24T11_18_57_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:19:18,727 - session_2017-10-24T11_18_57_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:19:18,727 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:18,727 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:18,727 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:18,727 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:19:18,728 - session_2017-10-24T11_18_57_0 - INFO - breaking out of accommodate
2017-10-24 11:19:18,728 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:18,728 - session_2017-10-24T11_18_57_0 - INFO - END integrate_moves
2017-10-24 11:19:18,728 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:18,728 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:18,728 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:19:18,731 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.go_to_step(X), ?X.goal(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:19:18,731 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:18,731 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:18,732 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:18,732 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:18,732 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:19:18,732 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None)
2017-10-24 11:19:18,732 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:19:18,732 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: select
2017-10-24 11:19:18,733 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836758.69
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.pm: {ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:18,733 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:19:18,738 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                             -----      ^^
+ tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                                                   ^^^^^^^^
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
+ tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 11:19:18,738 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:18,741 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                                                                                  +++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:19:18,741 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:19:18,744 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
-- END TIS changes --
2017-10-24 11:19:18,744 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_move
2017-10-24 11:19:18,744 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:19:18,748 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
?                                                             +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.step_to_choose(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.step_to_choose(X))])
-- END TIS changes --
2017-10-24 11:19:18,748 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_move
2017-10-24 11:19:18,751 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
?                                                                                    +++++++++++++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.step_to_choose(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:19:18,751 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:19:18,751 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_move
2017-10-24 11:19:18,751 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:19:18,754 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:18,754 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:19:18,754 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:19:18,757 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:18,757 - session_2017-10-24T11_18_57_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')])
2017-10-24 11:19:18,757 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:19:18,757 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None))
2017-10-24 11:19:18,758 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to a step, sender=DmeModule, reason=None)
2017-10-24 11:19:18,758 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to a step", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 11:19:18,758 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:18,758 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:19:18,759 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:19:18,759 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:19:18,759 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:18,760 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None)))
2017-10-24 11:19:18,760 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:19:18,760 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:19:18,761 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:18,761 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:18,762 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:18,763 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={})
2017-10-24 11:19:18,763 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 11:19:18,763 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 11:19:18,763 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 11:19:18,763 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:19:18,763 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 11:19:18,763 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 11:19:18,764 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 11:19:18,764 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 11:19:18,765 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 11:19:18,765 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 11:19:18,766 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Move Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp') generated as u'Which step?'
2017-10-24 11:19:18,766 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None)
2017-10-24 11:19:18,769 - session_2017-10-24T11_18_57_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:18,772 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:18,772 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:19:18,772 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')])
2017-10-24 11:19:18,772 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={})
2017-10-24 11:19:18,773 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 11:19:18,773 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 11:19:18,773 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 11:19:18,773 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:19:18,773 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 11:19:18,773 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend generated message []
2017-10-24 11:19:18,774 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:19:18,774 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend posted event
2017-10-24 11:19:18,774 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None))
2017-10-24 11:19:18,774 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, , Which step?], sender=GenerateModule, reason=None)
2017-10-24 11:19:18,774 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "", "Which step?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:19:18,775 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:18,775 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 11:19:18,775 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 11:19:18,775 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:19:18,776 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:18,776 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:19:18,783 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend received event {"content": ["", "", "Which step?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:19:18,783 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:19:18,783 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, , Which step?], sender=TextOutputComponent, reason=None))
2017-10-24 11:19:18,783 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, , Which step?], sender=TextOutputComponent, reason=None)
2017-10-24 11:19:18,783 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:19:18,784 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 11:19:18,784 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 11:19:18,784 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
2017-10-24 11:19:18,785 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None))
2017-10-24 11:19:18,786 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836758.79
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, , Which step?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to a step
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.pm: {ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:18,786 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:19:18,786 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:19:18,786 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:19:18,792 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
?            ^^
- tis.shared.pm: {ICMMove(icm:per*pos:"ùtell me what to do", speaker=SYS, score=1.0), ICMMove(icm:sem*neg, speaker=SYS, score=1.0), ICMMove(icm:reraise, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:19:18,792 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:19:18,792 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:19:18,794 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:18,794 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:19:18,794 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:19:18,794 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:19:18,795 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:19:18,795 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:19:18,795 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:19:18,795 - session_2017-10-24T11_18_57_0 - INFO - BEGIN integrate_moves
2017-10-24 11:19:18,795 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:19:18,795 - session_2017-10-24T11_18_57_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:19:18,795 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:19:18,795 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:18,800 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:19:18,800 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:19:18,800 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:18,800 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:19:18,800 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:18,800 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:18,804 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
?                                                                       +++++++++++++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:19:18,804 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:19:18,804 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:18,804 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:19:18,804 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:18,805 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:18,808 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.step_to_choose(X)])
-- END TIS changes --
2017-10-24 11:19:18,808 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:19:18,808 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:18,808 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:19:18,808 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:18,808 - session_2017-10-24T11_18_57_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:19:18,809 - session_2017-10-24T11_18_57_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:19:18,809 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:18,809 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:18,809 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:18,809 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:19:18,809 - session_2017-10-24T11_18_57_0 - INFO - breaking out of accommodate
2017-10-24 11:19:18,809 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:18,809 - session_2017-10-24T11_18_57_0 - INFO - END integrate_moves
2017-10-24 11:19:18,809 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:18,810 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:18,810 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:19:18,810 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:18,810 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:18,810 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:18,810 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:18,811 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:19:18,813 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:18,813 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:19:18,813 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:19:18,813 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:19:18,813 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:19:18,814 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:19:18,814 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:18,814 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:19:18,814 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:19:18,815 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, , Which step?], latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:19:18,815 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:19:32,706 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "tell me what to do"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:19:32,707 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:19:32,707 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None))
2017-10-24 11:19:32,707 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:19:32,707 - session_2017-10-24T11_18_57_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:19:32,707 - session_2017-10-24T11_18_57_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "tell me what to do"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:19:32,707 - session_2017-10-24T11_18_57_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:19:32,709 - session_2017-10-24T11_18_57_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 11:19:32,709 - session_2017-10-24T11_18_57_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])} for DDD 'recipehelp'
2017-10-24 11:19:32,709 - session_2017-10-24T11_18_57_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
2017-10-24 11:19:32,709 - session_2017-10-24T11_18_57_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:19:32,710 - session_2017-10-24T11_18_57_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AskMove": {"_type": "ask", "_ddd_name": "recipehelp", "_content": {"445f2b7f7189027ce75dac332c96dde0.WhQuestion": {"_type": "WHQ", "_content": {"24b0f339529d53d987534676834bafa7.LambdaAbstractedPredicateProposition": {"_ontology_name": "RecipehelpOntology", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.BuiltinSort": {"_dynamic": false, "_name": "string"}}, "name": "say_step", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "tell me what to do", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "tell me what to do"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "tell me what to do", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:19:32,710 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:19:32,710 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None))
2017-10-24 11:19:32,710 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:19:32,710 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:19:32,710 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:19:32,710 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 11:19:32,711 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:32,711 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 11:19:32,712 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:19:32,712 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:19:32,712 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:19:32,712 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:19:32,713 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836772.71
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), ICMMove(icm:loadplan), Move(ask(?X.step_to_choose(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.step_to_choose(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:32,714 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:19:32,716 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
-- END TIS changes --
2017-10-24 11:19:32,716 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:19:32,717 - session_2017-10-24T11_18_57_0 - INFO - hypotheses reranking had no effect
2017-10-24 11:19:32,717 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:19:32,721 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do')])
-- END TIS changes --
2017-10-24 11:19:32,722 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:19:32,726 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to a step')}
-- END TIS changes --
2017-10-24 11:19:32,726 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:19:32,726 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:19:32,729 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:32,729 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:19:32,729 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:19:32,734 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                                        ^^
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                                                      +++++++++++++++++++++++++++++++  ^^^^^^^^
- tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
+ tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
- tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                       ^ ^^
+ tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
?                                       ^^^^^^ ^^^^^^^
-- END TIS changes --
2017-10-24 11:19:32,734 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:19:32,734 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:19:32,738 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: irrelevantFollowup
-- BEGIN TIS changes --
- tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ------------------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
- tis.shared.qud: stackset([?X.step_to_choose(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:19:32,738 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:19:32,739 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:19:32,739 - session_2017-10-24T11_18_57_0 - INFO - BEGIN integrate_moves
2017-10-24 11:19:32,739 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])
2017-10-24 11:19:32,739 - session_2017-10-24T11_18_57_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:19:32,740 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])
2017-10-24 11:19:32,740 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:32,744 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: integrateUsrAsk
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
- tis.private.nim: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             +++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do')}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.say_step(X)])
?                           ++++++++++++++
-- END TIS changes --
2017-10-24 11:19:32,744 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:19:32,744 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:32,745 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:19:32,745 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:32,749 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: findIssuePlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                                                 -------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
+ tis.private.plan: Stack([device_query(?X.say_step(X))])
-- END TIS changes --
2017-10-24 11:19:32,749 - session_2017-10-24T11_18_57_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:19:32,749 - session_2017-10-24T11_18_57_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:19:32,749 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:32,750 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:32,750 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:32,750 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:19:32,750 - session_2017-10-24T11_18_57_0 - INFO - breaking out of accommodate
2017-10-24 11:19:32,750 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:32,750 - session_2017-10-24T11_18_57_0 - INFO - END integrate_moves
2017-10-24 11:19:32,750 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:32,753 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {}
+ tis.private.bel: {say_step("0")}
?                   +++++++++++++
- tis.private.plan: Stack([device_query(?X.say_step(X))])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 11:19:32,753 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:32,753 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:32,753 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:32,754 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:19:32,756 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.say_step(X)])
?                           --------------
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:19:32,756 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:32,756 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:32,757 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:32,757 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:32,757 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:19:32,757 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None)
2017-10-24 11:19:32,757 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:19:32,757 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: select
2017-10-24 11:19:32,759 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836772.71
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do')])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.say_step(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do')}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:32,759 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:19:32,765 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                         ---------------------------------
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.bel: {say_step("0")}
?                           +++++++++++++
- tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), resolve(?X.go_to_step(X)), perform(top)])
?                                                 +++++++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 11:19:32,765 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:32,768 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                                                 +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:19:32,768 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:19:32,771 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
-- END TIS changes --
2017-10-24 11:19:32,771 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_move
2017-10-24 11:19:32,773 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                         ---     ---- ^^^ ^^
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
?                                               ^^^^^^^^^^^^^ ^^^^^^
- tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:19:32,774 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:19:32,774 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_move
2017-10-24 11:19:32,774 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:19:32,776 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:32,776 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:19:32,777 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:19:32,779 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 11:19:32,779 - session_2017-10-24T11_18_57_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')])
2017-10-24 11:19:32,780 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:19:32,780 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None))
2017-10-24 11:19:32,780 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None)
2017-10-24 11:19:32,780 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": "tell me what to do", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 11:19:32,781 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:32,781 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None))
2017-10-24 11:19:32,781 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:19:32,781 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "0"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:19:32,782 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:32,783 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)))
2017-10-24 11:19:32,783 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:19:32,783 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:19:32,783 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:32,784 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:32,785 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:32,785 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("0")), ddd_name=u'recipehelp'), facts={say_step("0")})
2017-10-24 11:19:32,785 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:19:32,785 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:19:32,786 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Move Move(answer(say_step("0")), ddd_name=u'recipehelp') generated as u'Ok 0.'
2017-10-24 11:19:32,786 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None)
2017-10-24 11:19:32,787 - session_2017-10-24T11_18_57_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:32,788 - session_2017-10-24T11_18_57_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:19:32,789 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:32,789 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:19:32,789 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')])
2017-10-24 11:19:32,789 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("0")), ddd_name=u'recipehelp'), facts={say_step("0")})
2017-10-24 11:19:32,789 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:19:32,790 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.Popup instance at 0x7fc1d41c7a28>]
2017-10-24 11:19:32,791 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7fc1d41c7a28>], sender=GuiBackend, reason=None)
2017-10-24 11:19:32,791 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend posted event
2017-10-24 11:19:32,791 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None))
2017-10-24 11:19:32,791 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None)
2017-10-24 11:19:32,791 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok 0."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:19:32,792 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:32,792 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:19:32,792 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:19:32,792 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok 0."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:19:32,793 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:32,793 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7fc1d41c7a28>], sender=GuiBackend, reason=None))
2017-10-24 11:19:32,793 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7fc1d41c7a28>], sender=GuiBackend, reason=None)
2017-10-24 11:19:32,793 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok 0."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:19:32,794 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:32,794 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:19:32,818 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok 0."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:19:32,818 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:19:32,819 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok 0.], sender=TextOutputComponent, reason=None))
2017-10-24 11:19:32,819 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok 0.], sender=TextOutputComponent, reason=None)
2017-10-24 11:19:32,819 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:19:32,820 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:19:32,820 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:19:32,820 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:19:32,820 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None))
2017-10-24 11:19:32,821 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836772.82
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.say_step(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do')}
tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:32,821 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:19:32,822 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:19:32,822 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:19:32,827 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do')}
?            ^^
- tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:19:32,827 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:19:32,827 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:19:32,830 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:32,830 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:19:32,831 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:19:32,831 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:19:32,831 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:19:32,831 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:19:32,831 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:19:32,831 - session_2017-10-24T11_18_57_0 - INFO - BEGIN integrate_moves
2017-10-24 11:19:32,831 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:19:32,831 - session_2017-10-24T11_18_57_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:19:32,831 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:19:32,831 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:32,835 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {say_step("0")}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:19:32,835 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:19:32,835 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:32,838 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {say_step("0")}
+ tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
- tis.shared.goals: stackset([resolve(?X.say_step(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             -------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 11:19:32,839 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:19:32,839 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:32,839 - session_2017-10-24T11_18_57_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:19:32,839 - session_2017-10-24T11_18_57_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:19:32,839 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:32,839 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:32,839 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:32,840 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:19:32,840 - session_2017-10-24T11_18_57_0 - INFO - breaking out of accommodate
2017-10-24 11:19:32,840 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:32,840 - session_2017-10-24T11_18_57_0 - INFO - END integrate_moves
2017-10-24 11:19:32,840 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:32,843 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: recoverResolvePlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:resolve(?X.go_to_step(X))))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 11:19:32,843 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:32,843 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:32,844 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:32,844 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:19:32,844 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:32,844 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:32,845 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:32,845 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:32,845 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:19:32,847 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 11:19:32,848 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:19:32,848 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: select
2017-10-24 11:19:32,849 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836772.82
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:resolve(?X.go_to_step(X))))])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:32,849 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:19:32,854 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^ ^^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:resolve(?X.go_to_step(X))))])
?                                                                +++ ^^^^^^^^^^^^^^^^^^^^^^^^ ^^^^
- tis.private.tmp.sys.com: {}
+ tis.private.tmp.sys.com: {say_step("0"), resolved(?X.say_step(X))}
- tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), resolve(?X.go_to_step(X)), perform(top)])
?                                                 -------------------------
+ tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 11:19:32,855 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:32,858 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:resolve(?X.go_to_step(X))))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:resolve(?X.go_to_step(X)))), findout(?X.step_to_choose(X))])
?                                                                                           +++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:19:32,858 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:19:32,861 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X)))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:resolve(?X.go_to_step(X)))), findout(?X.step_to_choose(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.step_to_choose(X))])
-- END TIS changes --
2017-10-24 11:19:32,861 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_move
2017-10-24 11:19:32,864 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X)))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)))])
?                                                                                       +++++++++++++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.step_to_choose(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:19:32,864 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:19:32,864 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_move
2017-10-24 11:19:32,865 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:19:32,867 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:32,867 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:19:32,867 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:19:32,870 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 11:19:32,870 - session_2017-10-24T11_18_57_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')])
2017-10-24 11:19:32,871 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {say_step("0"), resolved(?X.say_step(X))}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None))
2017-10-24 11:19:32,871 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None))
2017-10-24 11:19:32,871 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:19:32,871 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "0"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:19:32,872 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:32,872 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {say_step("0"), resolved(?X.say_step(X))}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)))
2017-10-24 11:19:32,873 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {say_step("0"), resolved(?X.say_step(X))}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None))
2017-10-24 11:19:32,873 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:19:32,874 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {say_step("0"), resolved(?X.say_step(X))}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:32,874 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {say_step("0"), resolved(?X.say_step(X))}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:32,876 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {say_step("0"), resolved(?X.say_step(X))}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:32,877 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:resolve(?X.go_to_step(X))), facts={say_step("0"), resolved(?X.say_step(X))})
2017-10-24 11:19:32,877 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:resolve(?X.go_to_step(X)))
2017-10-24 11:19:32,877 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp'), facts={say_step("0"), resolved(?X.say_step(X))})
2017-10-24 11:19:32,877 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 11:19:32,877 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:resolve(?X.go_to_step(X)))
2017-10-24 11:19:32,878 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:resolve(?X.go_to_step(X))) generated as u'Returning to go to step.'
2017-10-24 11:19:32,878 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 11:19:32,878 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Move Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp') generated as u'Which step?'
2017-10-24 11:19:32,878 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to go to step., Which step?], sender=GenerateModule, reason=None)
2017-10-24 11:19:32,880 - session_2017-10-24T11_18_57_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {say_step("0"), resolved(?X.say_step(X))}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:32,883 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')]), com: {say_step("0"), resolved(?X.say_step(X))}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:32,883 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:19:32,883 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')])
2017-10-24 11:19:32,883 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:resolve(?X.go_to_step(X))), facts={say_step("0"), resolved(?X.say_step(X))})
2017-10-24 11:19:32,883 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:resolve(?X.go_to_step(X)))
2017-10-24 11:19:32,883 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp'), facts={say_step("0"), resolved(?X.say_step(X))})
2017-10-24 11:19:32,883 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp')
2017-10-24 11:19:32,884 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc1d420c200>]
2017-10-24 11:19:32,884 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc1d420c200>], sender=GuiBackend, reason=None)
2017-10-24 11:19:32,884 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend posted event
2017-10-24 11:19:32,885 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to go to step., Which step?], sender=GenerateModule, reason=None))
2017-10-24 11:19:32,885 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to go to step., Which step?], sender=GenerateModule, reason=None)
2017-10-24 11:19:32,885 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to go to step.", "Which step?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:19:32,885 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:32,885 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc1d420c200>], sender=GuiBackend, reason=None))
2017-10-24 11:19:32,886 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc1d420c200>], sender=GuiBackend, reason=None)
2017-10-24 11:19:32,886 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:19:32,887 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:32,887 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:19:32,925 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to go to step.", "Which step?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:19:32,925 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:19:32,925 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to go to step., Which step?], sender=TextOutputComponent, reason=None))
2017-10-24 11:19:32,925 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to go to step., Which step?], sender=TextOutputComponent, reason=None)
2017-10-24 11:19:32,926 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:19:32,926 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to go to step., Which step?], sender=TurnManager, reason=None)
2017-10-24 11:19:32,926 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to go to step., Which step?], sender=TurnManager, reason=None)
2017-10-24 11:19:32,926 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to go to step., Which step?], sender=TurnManager, reason=None)
2017-10-24 11:19:32,926 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to go to step., Which step?], sender=TurnManager, reason=None))
2017-10-24 11:19:32,928 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836772.93
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to go to step., Which step?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X)), speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:resolve(?X.go_to_step(X))))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {say_step("0"), resolved(?X.say_step(X))}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:32,928 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:19:32,928 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:19:32,928 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:19:32,934 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:resolve(?X.go_to_step(X)), speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do')}
-- END TIS changes --
2017-10-24 11:19:32,935 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:19:32,935 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:19:32,938 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:32,938 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:19:32,938 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:19:32,938 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:19:32,938 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:19:32,938 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:19:32,938 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:19:32,938 - session_2017-10-24T11_18_57_0 - INFO - BEGIN integrate_moves
2017-10-24 11:19:32,938 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:resolve(?X.go_to_step(X)), speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:19:32,938 - session_2017-10-24T11_18_57_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:19:32,939 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:resolve(?X.go_to_step(X)), speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:19:32,939 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:32,943 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:resolve(?X.go_to_step(X)), speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ------------------------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:resolve(?X.go_to_step(X)), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:19:32,943 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:19:32,943 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:32,943 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:19:32,944 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:32,944 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:32,947 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:resolve(?X.go_to_step(X)), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:resolve(?X.go_to_step(X)), speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.step_to_choose(X)])
-- END TIS changes --
2017-10-24 11:19:32,947 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:19:32,947 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:32,948 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:19:32,948 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:32,948 - session_2017-10-24T11_18_57_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:19:32,948 - session_2017-10-24T11_18_57_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:19:32,948 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:32,948 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:32,948 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:32,948 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:19:32,949 - session_2017-10-24T11_18_57_0 - INFO - breaking out of accommodate
2017-10-24 11:19:32,949 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:32,949 - session_2017-10-24T11_18_57_0 - INFO - END integrate_moves
2017-10-24 11:19:32,949 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:32,949 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:32,949 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:19:32,949 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:32,950 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:32,950 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:32,950 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:32,950 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:19:32,953 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 11:19:32,953 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:19:32,953 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to go to step., Which step?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X)), speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:19:32,954 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None))
2017-10-24 11:19:32,954 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:19:32,954 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "0"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:19:32,954 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:32,954 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to go to step., Which step?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X)), speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:19:32,955 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to go to step., Which step?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X)), speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:19:32,955 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to go to step., Which step?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X)), speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:19:32,955 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:19:41,066 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "step one"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:19:41,067 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:19:41,067 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None))
2017-10-24 11:19:41,067 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 11:19:41,067 - session_2017-10-24T11_18_57_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 11:19:41,067 - session_2017-10-24T11_18_57_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "step one"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:19:41,067 - session_2017-10-24T11_18_57_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:19:41,070 - session_2017-10-24T11_18_57_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 11:19:41,070 - session_2017-10-24T11_18_57_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])} for DDD 'recipehelp'
2017-10-24 11:19:41,070 - session_2017-10-24T11_18_57_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
2017-10-24 11:19:41,070 - session_2017-10-24T11_18_57_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:19:41,071 - session_2017-10-24T11_18_57_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "step one"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "step one", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.CustomSort": {"_ontology_name": "RecipehelpOntology", "_dynamic": false, "_name": "step"}}, "value": "step1"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "step one", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:19:41,071 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: step one}], sender=TextInputComponent, reason=None)
2017-10-24 11:19:41,071 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None))
2017-10-24 11:19:41,071 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:19:41,071 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:19:41,071 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 11:19:41,072 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 11:19:41,072 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:41,073 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 11:19:41,073 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:19:41,073 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:19:41,074 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:19:41,074 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:19:41,075 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836781.07
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X)), speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X))), Move(ask(?X.step_to_choose(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:resolve(?X.go_to_step(X))))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {say_step("0"), resolved(?X.say_step(X))}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:resolve(?X.go_to_step(X)), speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.step_to_choose(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:41,075 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:19:41,080 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #]), OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
-- END TIS changes --
2017-10-24 11:19:41,080 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:19:41,086 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
- tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
-- END TIS changes --
2017-10-24 11:19:41,091 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: uprankQUDResolving
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                         ^^
- tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^
+ tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
?                                                                                                                        ^^
-- END TIS changes --
2017-10-24 11:19:41,093 - session_2017-10-24T11_18_57_0 - INFO - hypotheses reranking had no effect
2017-10-24 11:19:41,093 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:19:41,099 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:resolve(?X.go_to_step(X)), speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')])
- tis.score: 1.0
?              ^
+ tis.score: 1.44
?              ^^
-- END TIS changes --
2017-10-24 11:19:41,099 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:19:41,105 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:resolve(?X.go_to_step(X)), speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:resolve(?X.go_to_step(X)), speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:19:41,105 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:19:41,105 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:19:41,108 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:41,108 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:19:41,108 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:19:41,113 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.bel: {}
+ tis.private.tmp.usr.bel: {say_step("0")}
?                           +++++++++++++
- tis.private.tmp.usr.com: {}
+ tis.private.tmp.usr.com: {say_step("0"), resolved(?X.say_step(X))}
-- END TIS changes --
2017-10-24 11:19:41,113 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:19:41,113 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:19:41,113 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:19:41,114 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:19:41,114 - session_2017-10-24T11_18_57_0 - INFO - BEGIN integrate_moves
2017-10-24 11:19:41,114 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
2017-10-24 11:19:41,114 - session_2017-10-24T11_18_57_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:19:41,114 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
2017-10-24 11:19:41,114 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:41,118 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {step_to_choose(step1)}
- tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
+ tis.shared.com: {say_step("0"), resolved(?X.say_step(X)), step_to_choose(step1)}
?                                                         +++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
-- END TIS changes --
2017-10-24 11:19:41,118 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:19:41,118 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:41,124 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {say_step("0"), resolved(?X.say_step(X)), step_to_choose(step1)}
+ tis.shared.com: {say_step("0"), resolved(?X.say_step(X)), step_to_choose(step1), resolved(?X.step_to_choose(X))}
?                                                                                ++++++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ------------------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 11:19:41,124 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:19:41,127 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
?                          -------------------------------
+ tis.private.plan: Stack([device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 11:19:41,128 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:41,128 - session_2017-10-24T11_18_57_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:19:41,128 - session_2017-10-24T11_18_57_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:19:41,128 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:41,128 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:41,128 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:41,128 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:19:41,128 - session_2017-10-24T11_18_57_0 - INFO - breaking out of accommodate
2017-10-24 11:19:41,128 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:41,129 - session_2017-10-24T11_18_57_0 - INFO - END integrate_moves
2017-10-24 11:19:41,129 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:41,132 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {say_step("0")}
+ tis.private.bel: {say_step("0"), go_to_step("chose a step")}
- tis.private.plan: Stack([device_query(?X.go_to_step(X)), forget(step_to_choose)])
?                          --------------------------------
+ tis.private.plan: Stack([forget(step_to_choose)])
-- END TIS changes --
2017-10-24 11:19:41,132 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:41,133 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:41,136 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(step_to_choose)])
+ tis.private.plan: Stack([])
- tis.shared.com: {say_step("0"), resolved(?X.say_step(X)), step_to_choose(step1), resolved(?X.step_to_choose(X))}
+ tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
-- END TIS changes --
2017-10-24 11:19:41,136 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:41,136 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:41,136 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:41,136 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:19:41,140 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.step_to_choose(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:19:41,140 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:41,140 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:41,141 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:41,141 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:41,141 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:19:41,141 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 11:19:41,141 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None)
2017-10-24 11:19:41,141 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}, {predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 11:19:41,141 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: select
2017-10-24 11:19:41,143 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836781.07
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')])
tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.bel: {say_step("0"), go_to_step("chose a step")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:resolve(?X.go_to_step(X))))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {say_step("0"), resolved(?X.say_step(X))}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {say_step("0")}
tis.private.tmp.usr.com: {say_step("0"), resolved(?X.say_step(X))}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.pm: {ICMMove(icm:reraise:resolve(?X.go_to_step(X)), speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:41,143 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:19:41,148 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:resolve(?X.go_to_step(X))))])
?                                                                --- ^ ---------------------------
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^^^
- tis.private.tmp.sys.bel: {say_step("0")}
+ tis.private.tmp.sys.bel: {say_step("0"), go_to_step("chose a step")}
- tis.private.tmp.sys.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 11:19:41,148 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:41,150 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                                                 +++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:19:41,151 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:19:41,154 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
-- END TIS changes --
2017-10-24 11:19:41,154 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_move
2017-10-24 11:19:41,157 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose a step")))])
- tis.private.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:19:41,157 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:19:41,157 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_move
2017-10-24 11:19:41,157 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:19:41,159 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:41,159 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:19:41,160 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:19:41,162 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 11:19:41,162 - session_2017-10-24T11_18_57_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')])
2017-10-24 11:19:41,163 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {say_step("0"), go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {say_step("0"), resolved(?X.say_step(X))}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:19:41,163 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None))
2017-10-24 11:19:41,163 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 11:19:41,163 - session_2017-10-24T11_18_57_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 11:19:41,163 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None))
2017-10-24 11:19:41,164 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, step one, sender=DmeModule, reason=None)
2017-10-24 11:19:41,164 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": "step one", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 11:19:41,164 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:41,164 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}, {predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None))
2017-10-24 11:19:41,165 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}, {predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 11:19:41,165 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "0"}, {"predicate": "go_to_step", "grammar_entry": null, "value": "chose a step"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:19:41,166 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:41,166 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {say_step("0"), go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {say_step("0"), resolved(?X.say_step(X))}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None)))
2017-10-24 11:19:41,167 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {say_step("0"), go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {say_step("0"), resolved(?X.say_step(X))}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:19:41,167 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:19:41,168 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {say_step("0"), go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {say_step("0"), resolved(?X.say_step(X))}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:41,168 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), bel: {say_step("0"), go_to_step("chose a step")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {say_step("0"), resolved(?X.say_step(X))}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:41,169 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0"), go_to_step("chose a step")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), com: {say_step("0"), resolved(?X.say_step(X))}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:41,170 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp'), facts={say_step("0"), resolved(?X.say_step(X)), go_to_step("chose a step")})
2017-10-24 11:19:41,170 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')
2017-10-24 11:19:41,170 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')
2017-10-24 11:19:41,170 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Move Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp') generated as u'Ok chose a step.'
2017-10-24 11:19:41,170 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose a step.], sender=GenerateModule, reason=None)
2017-10-24 11:19:41,172 - session_2017-10-24T11_18_57_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0"), go_to_step("chose a step")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), com: {say_step("0"), resolved(?X.say_step(X))}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:41,173 - session_2017-10-24T11_18_57_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok chose a step.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:19:41,176 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0"), go_to_step("chose a step")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose a step")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')]), com: {say_step("0"), resolved(?X.say_step(X))}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:41,176 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:19:41,176 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')])
2017-10-24 11:19:41,177 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp'), facts={say_step("0"), resolved(?X.say_step(X)), go_to_step("chose a step")})
2017-10-24 11:19:41,177 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp')
2017-10-24 11:19:41,178 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.Popup instance at 0x7fc1d4224098>]
2017-10-24 11:19:41,179 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7fc1d4224098>], sender=GuiBackend, reason=None)
2017-10-24 11:19:41,179 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend posted event
2017-10-24 11:19:41,179 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose a step.], sender=GenerateModule, reason=None))
2017-10-24 11:19:41,179 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose a step.], sender=GenerateModule, reason=None)
2017-10-24 11:19:41,180 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok chose a step."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:19:41,181 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:41,181 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok chose a step.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:19:41,182 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok chose a step.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:19:41,182 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok chose a step."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:19:41,185 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:41,186 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7fc1d4224098>], sender=GuiBackend, reason=None))
2017-10-24 11:19:41,186 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7fc1d4224098>], sender=GuiBackend, reason=None)
2017-10-24 11:19:41,186 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok chose a step."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:19:41,188 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok chose a step."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:19:41,189 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:41,189 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:19:41,189 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:19:41,189 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok chose a step.], sender=TextOutputComponent, reason=None))
2017-10-24 11:19:41,190 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok chose a step.], sender=TextOutputComponent, reason=None)
2017-10-24 11:19:41,190 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:19:41,190 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
2017-10-24 11:19:41,190 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
2017-10-24 11:19:41,190 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
2017-10-24 11:19:41,190 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None))
2017-10-24 11:19:41,193 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836781.19
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok chose a step.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose a step")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {say_step("0"), go_to_step("chose a step")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0"), go_to_step("chose a step")}
tis.private.tmp.sys.com: {say_step("0"), resolved(?X.say_step(X))}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {say_step("0")}
tis.private.tmp.usr.com: {say_step("0"), resolved(?X.say_step(X))}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.pm: {ICMMove(icm:reraise:resolve(?X.go_to_step(X)), speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:41,193 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:19:41,194 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:19:41,194 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:19:41,200 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
?            ^^
- tis.shared.pm: {ICMMove(icm:reraise:resolve(?X.go_to_step(X)), speaker=SYS, score=1.0), Move(ask(?X.step_to_choose(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:19:41,200 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:19:41,201 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:19:41,204 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:41,204 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:19:41,204 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:19:41,204 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:19:41,204 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:19:41,204 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:19:41,204 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:19:41,204 - session_2017-10-24T11_18_57_0 - INFO - BEGIN integrate_moves
2017-10-24 11:19:41,204 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:19:41,204 - session_2017-10-24T11_18_57_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:19:41,205 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:19:41,205 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:41,208 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
+ tis.shared.com: {say_step("0"), resolved(?X.say_step(X)), go_to_step("chose a step")}
?                                                         ++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:19:41,208 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:19:41,208 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:41,213 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {say_step("0"), resolved(?X.say_step(X)), go_to_step("chose a step")}
+ tis.shared.com: {say_step("0"), resolved(?X.say_step(X)), go_to_step("chose a step"), resolved(?X.go_to_step(X))}
?                                                                                     ++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                             ---------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 11:19:41,213 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:19:41,213 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:41,213 - session_2017-10-24T11_18_57_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:19:41,213 - session_2017-10-24T11_18_57_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:19:41,213 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:41,213 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:41,213 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:41,214 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:19:41,214 - session_2017-10-24T11_18_57_0 - INFO - breaking out of accommodate
2017-10-24 11:19:41,214 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:41,214 - session_2017-10-24T11_18_57_0 - INFO - END integrate_moves
2017-10-24 11:19:41,214 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:41,214 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:41,214 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:19:41,214 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:41,214 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:41,215 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:41,215 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:41,215 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:19:41,217 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 11:19:41,218 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}, {predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 11:19:41,218 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:19:41,218 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}, {predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None))
2017-10-24 11:19:41,218 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}, {predicate: go_to_step, grammar_entry: None, value: chose a step}], sender=DmeModule, reason=None)
2017-10-24 11:19:41,218 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "0"}, {"predicate": "go_to_step", "grammar_entry": null, "value": "chose a step"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:19:41,219 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:41,219 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 11:19:41,219 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:19:41,219 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok chose a step.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:19:41,220 - session_2017-10-24T11_18_57_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7fc1d4216f38>:1.0
2017-10-24 11:19:41,220 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:19:42,220 - session_2017-10-24T11_18_57_0 - DEBUG - Timeout fired
2017-10-24 11:19:42,220 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:19:42,220 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:19:42,220 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:19:42,220 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:19:42,222 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836782.22
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose a step")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {say_step("0"), go_to_step("chose a step")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0"), go_to_step("chose a step")}
tis.private.tmp.sys.com: {say_step("0"), resolved(?X.say_step(X))}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {say_step("0")}
tis.private.tmp.usr.com: {say_step("0"), resolved(?X.say_step(X))}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {say_step("0"), resolved(?X.say_step(X)), go_to_step("chose a step"), resolved(?X.go_to_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:42,222 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:19:42,222 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:19:42,224 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:19:42,224 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:19:42,229 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(answer(step1), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.44, modality=speech, utterance=u'step one')}
-- END TIS changes --
2017-10-24 11:19:42,229 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:19:42,229 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:19:42,232 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:42,232 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:19:42,232 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:19:42,232 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:19:42,232 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:19:42,232 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:19:42,232 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:19:42,232 - session_2017-10-24T11_18_57_0 - INFO - BEGIN integrate_moves
2017-10-24 11:19:42,232 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:19:42,232 - session_2017-10-24T11_18_57_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:19:42,233 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:19:42,233 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:42,233 - session_2017-10-24T11_18_57_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:19:42,233 - session_2017-10-24T11_18_57_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:19:42,233 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:42,233 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:42,233 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:42,233 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:19:42,233 - session_2017-10-24T11_18_57_0 - INFO - breaking out of accommodate
2017-10-24 11:19:42,233 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:42,234 - session_2017-10-24T11_18_57_0 - INFO - END integrate_moves
2017-10-24 11:19:42,234 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:42,236 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:19:42,236 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:42,237 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:42,240 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {say_step("0"), go_to_step("chose a step")}
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {say_step("0"), resolved(?X.say_step(X)), go_to_step("chose a step"), resolved(?X.go_to_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 11:19:42,240 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:42,240 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:42,241 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:42,241 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:19:42,241 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:42,241 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:42,241 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:42,241 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:42,242 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:19:42,242 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:19:42,242 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: select
2017-10-24 11:19:42,243 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836782.22
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0"), go_to_step("chose a step")}
tis.private.tmp.sys.com: {say_step("0"), resolved(?X.say_step(X))}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {say_step("0")}
tis.private.tmp.usr.com: {say_step("0"), resolved(?X.say_step(X))}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: step one
tis.repeat_questions: False
tis.score: 1.44
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:42,243 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:19:42,247 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^  ^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                +++ ^^^^ +++ ^^^^^^^
- tis.private.tmp.sys.bel: {say_step("0"), go_to_step("chose a step")}
- tis.private.tmp.sys.com: {say_step("0"), resolved(?X.say_step(X))}
+ tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.com: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                                      ---------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 11:19:42,248 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:42,250 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:19:42,250 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:19:42,252 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:19:42,253 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_move
2017-10-24 11:19:42,255 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:19:42,255 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:19:42,256 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_move
2017-10-24 11:19:42,256 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:19:42,258 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:42,258 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:19:42,258 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:19:42,261 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 11:19:42,261 - session_2017-10-24T11_18_57_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:19:42,261 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:19:46,996 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "tell me what to do"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 11:19:46,996 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:19:46,996 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None))
2017-10-24 11:19:46,996 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:19:46,997 - session_2017-10-24T11_18_57_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:19:46,997 - session_2017-10-24T11_18_57_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "tell me what to do"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 11:19:46,997 - session_2017-10-24T11_18_57_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 11:19:46,998 - session_2017-10-24T11_18_57_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 11:19:46,998 - session_2017-10-24T11_18_57_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])} for DDD 'recipehelp'
2017-10-24 11:19:46,998 - session_2017-10-24T11_18_57_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
2017-10-24 11:19:46,999 - session_2017-10-24T11_18_57_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:19:46,999 - session_2017-10-24T11_18_57_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AskMove": {"_type": "ask", "_ddd_name": "recipehelp", "_content": {"445f2b7f7189027ce75dac332c96dde0.WhQuestion": {"_type": "WHQ", "_content": {"24b0f339529d53d987534676834bafa7.LambdaAbstractedPredicateProposition": {"_ontology_name": "RecipehelpOntology", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.BuiltinSort": {"_dynamic": false, "_name": "string"}}, "name": "say_step", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "tell me what to do", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "tell me what to do"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "tell me what to do", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 11:19:46,999 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 11:19:46,999 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:19:46,999 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:19:47,000 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:19:47,000 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:47,001 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 11:19:47,001 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:19:47,001 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:19:47,001 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:47,002 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:47,002 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:47,003 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:19:47,003 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:19:47,003 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:19:47,003 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:19:47,003 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 11:19:47,004 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 11:19:47,004 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:19:47,004 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 11:19:47,004 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:19:47,005 - session_2017-10-24T11_18_57_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:47,007 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:47,007 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:19:47,007 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:19:47,007 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 11:19:47,007 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 11:19:47,007 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 11:19:47,007 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 11:19:47,008 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc1d41b9c20>]
2017-10-24 11:19:47,008 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc1d41b9c20>], sender=GuiBackend, reason=None)
2017-10-24 11:19:47,008 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend posted event
2017-10-24 11:19:47,009 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None))
2017-10-24 11:19:47,009 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None)
2017-10-24 11:19:47,009 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:19:47,009 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 11:19:47,009 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 11:19:47,010 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:47,010 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 11:19:47,010 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 11:19:47,010 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:19:47,011 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:47,011 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc1d41b9c20>], sender=GuiBackend, reason=None))
2017-10-24 11:19:47,011 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7fc1d41b9c20>], sender=GuiBackend, reason=None)
2017-10-24 11:19:47,011 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:19:47,012 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:47,012 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:19:47,032 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:19:47,032 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:19:47,032 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 11:19:47,032 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 11:19:47,033 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:19:47,033 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:19:47,033 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:19:47,033 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 11:19:47,033 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 11:19:47,035 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836787.03
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {say_step("0")}
tis.private.tmp.usr.com: {say_step("0"), resolved(?X.say_step(X))}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:47,035 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:19:47,035 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:19:47,035 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:19:47,039 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(go_to_step("chose a step")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:19:47,039 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:19:47,040 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:19:47,042 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:47,042 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:19:47,042 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:19:47,042 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:19:47,042 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:19:47,042 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:19:47,043 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:19:47,043 - session_2017-10-24T11_18_57_0 - INFO - BEGIN integrate_moves
2017-10-24 11:19:47,043 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:19:47,043 - session_2017-10-24T11_18_57_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:19:47,043 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:19:47,043 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:47,047 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 11:19:47,047 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:19:47,047 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:47,047 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:19:47,047 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:47,047 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:47,051 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 11:19:47,051 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:19:47,051 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:47,051 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:19:47,051 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:47,051 - session_2017-10-24T11_18_57_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:19:47,051 - session_2017-10-24T11_18_57_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:19:47,052 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:47,052 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:47,052 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:47,052 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:19:47,052 - session_2017-10-24T11_18_57_0 - INFO - breaking out of accommodate
2017-10-24 11:19:47,052 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:47,052 - session_2017-10-24T11_18_57_0 - INFO - END integrate_moves
2017-10-24 11:19:47,052 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:47,052 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:47,053 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:19:47,053 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:47,053 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:47,053 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:47,053 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:47,053 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:19:47,056 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 11:19:47,056 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:19:47,056 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:19:47,056 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:19:47,056 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:19:47,056 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:19:47,057 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:47,057 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 11:19:47,057 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:19:47,058 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 11:19:47,059 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:19:47,059 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:19:47,059 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 11:19:47,059 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:19:47,061 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836787.06
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {say_step("0")}
tis.private.tmp.usr.com: {say_step("0"), resolved(?X.say_step(X))}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:47,061 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:19:47,063 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
-- END TIS changes --
2017-10-24 11:19:47,063 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:19:47,068 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
?                                                                                                                              ^
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
?                                                                                                                              ^
-- END TIS changes --
2017-10-24 11:19:47,069 - session_2017-10-24T11_18_57_0 - INFO - hypotheses reranking had no effect
2017-10-24 11:19:47,069 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:19:47,075 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 11:19:47,075 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:19:47,082 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 11:19:47,082 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:19:47,082 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:19:47,084 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:47,084 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:19:47,084 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:19:47,091 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.bel: {say_step("0")}
?                           -------------
+ tis.private.tmp.usr.bel: {}
- tis.private.tmp.usr.com: {say_step("0"), resolved(?X.say_step(X))}
+ tis.private.tmp.usr.com: {}
- tis.private.tmp.usr.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                                                      -------------------------------  ^^^^^^^^
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                                                        ^^
- tis.private.tmp.usr.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
+ tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
- tis.private.tmp.usr.qud: stackset([?X.step_to_choose(X)])
?                                       ^^^^^^ ^^^^^^^
+ tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                       ^ ^^
-- END TIS changes --
2017-10-24 11:19:47,092 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:19:47,092 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:19:47,092 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:19:47,092 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:19:47,092 - session_2017-10-24T11_18_57_0 - INFO - BEGIN integrate_moves
2017-10-24 11:19:47,092 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
2017-10-24 11:19:47,092 - session_2017-10-24T11_18_57_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:19:47,092 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
2017-10-24 11:19:47,092 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:47,096 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: integrateUsrAsk
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
- tis.private.nim: OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
- tis.shared.qud: stackset([?X.goal(X)])
+ tis.shared.qud: stackset([?X.say_step(X), ?X.goal(X)])
?                              ++++++++++++++++
-- END TIS changes --
2017-10-24 11:19:47,096 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:19:47,096 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:47,098 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: downdateISSUES2
-- BEGIN TIS changes --
- tis.shared.goals: stackset([resolve(?X.say_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                                                      --------------------------
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 11:19:47,099 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:19:47,099 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:47,103 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: findIssuePlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                                                 -------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.plan: Stack([findout(?X.goal(X))])
?                          ^ ^^^ ^    ^^ ^
+ tis.private.plan: Stack([device_query(?X.say_step(X))])
?                          ^^^ ^^^^ ^^^    ^ ^^^^^^
-- END TIS changes --
2017-10-24 11:19:47,104 - session_2017-10-24T11_18_57_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:19:47,104 - session_2017-10-24T11_18_57_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:19:47,104 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:47,104 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:47,104 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:47,104 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:19:47,104 - session_2017-10-24T11_18_57_0 - INFO - breaking out of accommodate
2017-10-24 11:19:47,104 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:47,104 - session_2017-10-24T11_18_57_0 - INFO - END integrate_moves
2017-10-24 11:19:47,104 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:47,107 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {}
+ tis.private.bel: {say_step("0")}
?                   +++++++++++++
- tis.private.plan: Stack([device_query(?X.say_step(X))])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 11:19:47,107 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:47,107 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:47,107 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:47,108 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:19:47,110 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.say_step(X), ?X.goal(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 11:19:47,110 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:47,110 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:47,110 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:47,111 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:47,111 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:19:47,111 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None)
2017-10-24 11:19:47,111 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:19:47,111 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: select
2017-10-24 11:19:47,112 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836787.06
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:47,112 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:19:47,116 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                --- ^ --------------
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^^^
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.bel: {say_step("0")}
?                           +++++++++++++
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      +++++++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 11:19:47,117 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:47,119 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                                                 +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:19:47,119 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:19:47,123 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.say_step(X))])
?                                   --------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
-- END TIS changes --
2017-10-24 11:19:47,123 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_move
2017-10-24 11:19:47,126 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                         ---     ---- ^^^ ^^
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
?                                               ^^^^^^^^^^^^^ ^^^^^^
- tis.private.agenda: OpenQueue([#, respond(?X.say_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:19:47,126 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:19:47,126 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_move
2017-10-24 11:19:47,126 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:19:47,129 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:47,129 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:19:47,129 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:19:47,131 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 11:19:47,131 - session_2017-10-24T11_18_57_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')])
2017-10-24 11:19:47,132 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:19:47,132 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None))
2017-10-24 11:19:47,132 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None)
2017-10-24 11:19:47,132 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": "tell me what to do", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 11:19:47,133 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:47,133 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None))
2017-10-24 11:19:47,133 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:19:47,134 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "0"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:19:47,134 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:47,135 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)))
2017-10-24 11:19:47,135 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 11:19:47,135 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:19:47,136 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:47,136 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.say_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), bel: {say_step("0")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:47,137 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:47,137 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("0")), ddd_name=u'recipehelp'), facts={say_step("0")})
2017-10-24 11:19:47,137 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:19:47,137 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:19:47,138 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule: Move Move(answer(say_step("0")), ddd_name=u'recipehelp') generated as u'Ok 0.'
2017-10-24 11:19:47,138 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None)
2017-10-24 11:19:47,139 - session_2017-10-24T11_18_57_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:47,140 - session_2017-10-24T11_18_57_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:19:47,141 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {say_step("0")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(say_step("0")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.say_step(X)), moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:19:47,141 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 11:19:47,142 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp')])
2017-10-24 11:19:47,142 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(say_step("0")), ddd_name=u'recipehelp'), facts={say_step("0")})
2017-10-24 11:19:47,142 - session_2017-10-24T11_18_57_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(say_step("0")), ddd_name=u'recipehelp')
2017-10-24 11:19:47,143 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.Popup instance at 0x7fc1d42063b0>]
2017-10-24 11:19:47,143 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7fc1d42063b0>], sender=GuiBackend, reason=None)
2017-10-24 11:19:47,143 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend posted event
2017-10-24 11:19:47,143 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None))
2017-10-24 11:19:47,143 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok 0.], sender=GenerateModule, reason=None)
2017-10-24 11:19:47,143 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok 0."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 11:19:47,144 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:47,144 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:19:47,144 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok 0.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:19:47,144 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok 0."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 11:19:47,145 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:47,145 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7fc1d42063b0>], sender=GuiBackend, reason=None))
2017-10-24 11:19:47,145 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7fc1d42063b0>], sender=GuiBackend, reason=None)
2017-10-24 11:19:47,146 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok 0."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 11:19:47,146 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:47,146 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:19:47,159 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok 0."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 11:19:47,160 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:19:47,160 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok 0.], sender=TextOutputComponent, reason=None))
2017-10-24 11:19:47,160 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok 0.], sender=TextOutputComponent, reason=None)
2017-10-24 11:19:47,160 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 11:19:47,160 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:19:47,160 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:19:47,160 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
2017-10-24 11:19:47,161 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None))
2017-10-24 11:19:47,162 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836787.16
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok 0.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:47,162 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:19:47,162 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:19:47,162 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:19:47,169 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
?            ^^
- tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:19:47,169 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:19:47,169 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:19:47,171 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:47,171 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:19:47,171 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:19:47,172 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:19:47,172 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:19:47,172 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:19:47,172 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:19:47,172 - session_2017-10-24T11_18_57_0 - INFO - BEGIN integrate_moves
2017-10-24 11:19:47,172 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:19:47,172 - session_2017-10-24T11_18_57_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:19:47,173 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 11:19:47,173 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:47,176 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {say_step("0")}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 11:19:47,176 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 11:19:47,176 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:47,180 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {say_step("0")}
+ tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
- tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             -------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 11:19:47,180 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 11:19:47,180 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:47,180 - session_2017-10-24T11_18_57_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:19:47,180 - session_2017-10-24T11_18_57_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:19:47,180 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:47,180 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:47,180 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:47,181 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:19:47,181 - session_2017-10-24T11_18_57_0 - INFO - breaking out of accommodate
2017-10-24 11:19:47,181 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:47,181 - session_2017-10-24T11_18_57_0 - INFO - END integrate_moves
2017-10-24 11:19:47,181 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:47,181 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:47,181 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:19:47,181 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:47,182 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:47,182 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:47,182 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:47,182 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:19:47,185 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 11:19:47,185 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:19:47,185 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:19:47,185 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None))
2017-10-24 11:19:47,186 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: say_step, grammar_entry: None, value: 0}], sender=DmeModule, reason=None)
2017-10-24 11:19:47,186 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "say_step", "grammar_entry": null, "value": "0"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:19:47,186 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:19:47,186 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 11:19:47,187 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:19:47,187 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok 0.], latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 11:19:47,187 - session_2017-10-24T11_18_57_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7fc1d42248c0>:1.0
2017-10-24 11:19:47,187 - session_2017-10-24T11_18_57_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 11:19:48,187 - session_2017-10-24T11_18_57_0 - DEBUG - Timeout fired
2017-10-24 11:19:48,187 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:19:48,188 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:19:48,188 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 11:19:48,188 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:19:48,189 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836788.19
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(say_step("0")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {say_step("0")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:48,189 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:filterReadings
2017-10-24 11:19:48,189 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 11:19:48,191 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:19:48,191 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 11:19:48,195 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(ask(?X.say_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
-- END TIS changes --
2017-10-24 11:19:48,195 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 11:19:48,195 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 11:19:48,197 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:48,197 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 11:19:48,198 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 11:19:48,198 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 11:19:48,198 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 11:19:48,198 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 11:19:48,198 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 11:19:48,198 - session_2017-10-24T11_18_57_0 - INFO - BEGIN integrate_moves
2017-10-24 11:19:48,198 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:19:48,198 - session_2017-10-24T11_18_57_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 11:19:48,199 - session_2017-10-24T11_18_57_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 11:19:48,199 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:integrate
2017-10-24 11:19:48,199 - session_2017-10-24T11_18_57_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 11:19:48,199 - session_2017-10-24T11_18_57_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 11:19:48,199 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:48,199 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:48,199 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:48,199 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:accommodate
2017-10-24 11:19:48,199 - session_2017-10-24T11_18_57_0 - INFO - breaking out of accommodate
2017-10-24 11:19:48,199 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_reject
2017-10-24 11:19:48,200 - session_2017-10-24T11_18_57_0 - INFO - END integrate_moves
2017-10-24 11:19:48,200 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:48,202 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:19:48,202 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:48,202 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:48,205 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {say_step("0")}
?                   -------------
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {say_step("0"), resolved(?X.say_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 11:19:48,205 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:48,205 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:48,206 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:48,206 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 11:19:48,206 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 11:19:48,206 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:exec_plan
2017-10-24 11:19:48,206 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:load_plan
2017-10-24 11:19:48,207 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 11:19:48,207 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 11:19:48,207 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:19:48,207 - session_2017-10-24T11_18_57_0 - INFO - running ISU module: select
2017-10-24 11:19:48,208 - session_2017-10-24T11_18_57_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7fc1d5119fd0>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7fc1d48e0210>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508836788.19
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
tis.private.tmp.sys.bel: {say_step("0")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(say_step("0")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 11:19:48,208 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 11:19:48,212 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
?                                                                 ^^^  ^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                +++ ^^^^ +++ ^^^^^^^
- tis.private.tmp.sys.bel: {say_step("0")}
?                           -------------
+ tis.private.tmp.sys.bel: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                                      -------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 11:19:48,212 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_action
2017-10-24 11:19:48,214 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 11:19:48,214 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:19:48,217 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 11:19:48,217 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_move
2017-10-24 11:19:48,219 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 11:19:48,220 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_icm
2017-10-24 11:19:48,220 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:select_move
2017-10-24 11:19:48,220 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 11:19:48,222 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 11:19:48,222 - session_2017-10-24T11_18_57_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 11:19:48,222 - session_2017-10-24T11_18_57_0 - DEBUG - rulegroup:set_timeout
2017-10-24 11:19:48,225 - session_2017-10-24T11_18_57_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 11:19:48,225 - session_2017-10-24T11_18_57_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 11:19:48,225 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:25:20,086 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 11:25:20,086 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(STOP, None, sender=Backend, reason=None))
2017-10-24 11:25:20,087 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:25:20,087 - session_2017-10-24T11_18_57_0 - DEBUG - InterpretModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:25:20,087 - session_2017-10-24T11_18_57_0 - DEBUG - InterpretModule posts Event(STOPPED, None, sender=InterpretModule, reason=None)
2017-10-24 11:25:20,087 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:25:20,087 - session_2017-10-24T11_18_57_0 - DEBUG - DmeModule posts Event(STOPPED, None, sender=DmeModule, reason=None)
2017-10-24 11:25:20,087 - session_2017-10-24T11_18_57_0 - DEBUG - DeviceManager handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:25:20,087 - session_2017-10-24T11_18_57_0 - DEBUG - DeviceManager posts Event(STOPPED, None, sender=DeviceManager, reason=None)
2017-10-24 11:25:20,087 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:25:20,088 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule posts Event(STOPPED, None, sender=GenerateModule, reason=None)
2017-10-24 11:25:20,088 - session_2017-10-24T11_18_57_0 - DEBUG - IndependentGuiBackend handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:25:20,088 - session_2017-10-24T11_18_57_0 - DEBUG - IndependentGuiBackend posts Event(STOPPED, None, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:25:20,088 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:25:20,089 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend posts Event(STOPPED, None, sender=GuiBackend, reason=None)
2017-10-24 11:25:20,089 - session_2017-10-24T11_18_57_0 - DEBUG - CogloadModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 11:25:20,089 - session_2017-10-24T11_18_57_0 - DEBUG - CogloadModule posts Event(STOPPED, None, sender=CogloadModule, reason=None)
2017-10-24 11:25:20,089 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 11:25:20,089 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 11:25:20,090 - session_2017-10-24T11_18_57_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 11:25:20,091 - session_2017-10-24T11_18_57_0 - DEBUG - Sent.
2017-10-24 11:25:20,091 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 11:25:20,091 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 11:25:20,091 - session_2017-10-24T11_18_57_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 11:25:20,092 - session_2017-10-24T11_18_57_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:25:20,092 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:25:20,093 - session_2017-10-24T11_18_57_0 - DEBUG - GenerateModule ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:25:20,094 - session_2017-10-24T11_18_57_0 - DEBUG - IndependentGuiBackend ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:25:20,095 - session_2017-10-24T11_18_57_0 - DEBUG - GuiBackend ignores Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 11:25:20,095 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=InterpretModule, reason=None))
2017-10-24 11:25:20,095 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=InterpretModule, reason=None)
2017-10-24 11:25:20,095 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=DmeModule, reason=None))
2017-10-24 11:25:20,095 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=DmeModule, reason=None)
2017-10-24 11:25:20,095 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=DeviceManager, reason=None))
2017-10-24 11:25:20,095 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=DeviceManager, reason=None)
2017-10-24 11:25:20,095 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=GenerateModule, reason=None))
2017-10-24 11:25:20,096 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=GenerateModule, reason=None)
2017-10-24 11:25:20,096 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=IndependentGuiBackend, reason=None))
2017-10-24 11:25:20,096 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=IndependentGuiBackend, reason=None)
2017-10-24 11:25:20,096 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=GuiBackend, reason=None))
2017-10-24 11:25:20,096 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=GuiBackend, reason=None)
2017-10-24 11:25:20,096 - session_2017-10-24T11_18_57_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=CogloadModule, reason=None))
2017-10-24 11:25:20,096 - session_2017-10-24T11_18_57_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=CogloadModule, reason=None)

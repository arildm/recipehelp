2017-10-24 17:05:21,832 - session_2017-10-24T17_05_21_0 - DEBUG - Backend()
2017-10-24 17:05:21,833 - session_2017-10-24T17_05_21_0 - DEBUG - Backend.initialize()
2017-10-24 17:05:21,866 - session_2017-10-24T17_05_21_0 - DEBUG - Backend.add_module(DmeModule, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f3ef665ef10>>, False])
2017-10-24 17:05:21,866 - session_2017-10-24T17_05_21_0 - DEBUG - Backend.add_module(GenerateModule, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f3ef665ef10>>, 'eng'])
2017-10-24 17:05:21,867 - session_2017-10-24T17_05_21_0 - DEBUG - Backend.add_module(DeviceManager, args=[])
2017-10-24 17:05:21,867 - session_2017-10-24T17_05_21_0 - DEBUG - Backend.add_module(CogloadModule, args=[])
2017-10-24 17:05:21,867 - session_2017-10-24T17_05_21_0 - INFO - TurnManager.enter_state(IDLE, __init__) (previous state was None)
2017-10-24 17:05:21,867 - session_2017-10-24T17_05_21_0 - DEBUG - Backend.add_module(GuiBackend, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f3ef665ef10>>, True, 'disabled'])
2017-10-24 17:05:21,867 - session_2017-10-24T17_05_21_0 - DEBUG - Backend.add_module(IndependentGuiBackend, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f3ef665ef10>>])
2017-10-24 17:05:21,867 - session_2017-10-24T17_05_21_0 - DEBUG - Backend.add_module(InterpretModule, args=[<bound method Backend.get_device_manager of <tdm.backend.Backend object at 0x7f3ef665ef10>>, <bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f3ef665ef10>>, 'eng', False, True])
2017-10-24 17:05:21,867 - session_2017-10-24T17_05_21_0 - DEBUG - Backend initialized
2017-10-24 17:05:21,867 - session_2017-10-24T17_05_21_0 - DEBUG - Backend started in directory '/home/gusmatssar/recipedialogue/tdm'
2017-10-24 17:05:21,867 - session_2017-10-24T17_05_21_0 - DEBUG - Backend uses TDM version '5.0.0'
2017-10-24 17:05:21,867 - session_2017-10-24T17_05_21_0 - DEBUG - Backend uses backend config {u'active_ddd': u'recipehelp', u'ddds': [u'recipehelp'], u'asr': u'none', u'use_recognition_profile': False, u'use_word_list_correction': False, u'supported_languages': [u'eng'], u'repeat_questions': False}
2017-10-24 17:05:21,867 - session_2017-10-24T17_05_21_0 - DEBUG - Backend uses language 'eng'
2017-10-24 17:05:21,868 - session_2017-10-24T17_05_21_0 - DEBUG - running module InterpretModule
2017-10-24 17:05:21,868 - session_2017-10-24T17_05_21_0 - DEBUG - running module DmeModule
2017-10-24 17:05:21,869 - session_2017-10-24T17_05_21_0 - DEBUG - running module DeviceManager
2017-10-24 17:05:21,869 - session_2017-10-24T17_05_21_0 - DEBUG - running module GenerateModule
2017-10-24 17:05:21,869 - session_2017-10-24T17_05_21_0 - DEBUG - running module IndependentGuiBackend
2017-10-24 17:05:21,870 - session_2017-10-24T17_05_21_0 - DEBUG - running module GuiBackend
2017-10-24 17:05:21,870 - session_2017-10-24T17_05_21_0 - DEBUG - running module CogloadModule
2017-10-24 17:05:21,870 - session_2017-10-24T17_05_21_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 17:05:21,870 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 17:05:21,871 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(REGISTER_BACKEND, None, sender=Backend, reason=None))
2017-10-24 17:05:21,871 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(REGISTER_BACKEND, None, sender=Backend, reason=None)
2017-10-24 17:05:21,871 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "Backend", "_reason": null, "event_type": "REGISTER_BACKEND"}
2017-10-24 17:05:21,872 - session_2017-10-24T17_05_21_0 - DEBUG - Sent.
2017-10-24 17:05:21,872 - session_2017-10-24T17_05_21_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 17:05:21,901 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend received event {"content": null, "_sender": "Frontend", "_reason": null, "event_type": "FRONTEND_READY"}
2017-10-24 17:05:21,902 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 17:05:21,902 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(FRONTEND_READY, None, sender=Frontend, reason=None))
2017-10-24 17:05:21,903 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(FRONTEND_READY, None, sender=Frontend, reason=None)
2017-10-24 17:05:21,904 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(BACKEND_READY, None, sender=Backend, reason=None))
2017-10-24 17:05:21,904 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(BACKEND_READY, None, sender=Backend, reason=None)
2017-10-24 17:05:21,904 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "Backend", "_reason": null, "event_type": "BACKEND_READY"}
2017-10-24 17:05:21,905 - session_2017-10-24T17_05_21_0 - DEBUG - Sent.
2017-10-24 17:05:21,905 - session_2017-10-24T17_05_21_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 17:05:21,908 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend received event {"content": null, "_sender": "Frontend", "_reason": null, "event_type": "START"}
2017-10-24 17:05:21,908 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 17:05:21,908 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(START, None, sender=Frontend, reason=None))
2017-10-24 17:05:21,908 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(START, None, sender=Frontend, reason=None)
2017-10-24 17:05:21,908 - session_2017-10-24T17_05_21_0 - DEBUG - InterpretModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 17:05:21,909 - session_2017-10-24T17_05_21_0 - DEBUG - DmeModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 17:05:21,909 - session_2017-10-24T17_05_21_0 - DEBUG - DmeModule posts Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 17:05:21,909 - session_2017-10-24T17_05_21_0 - INFO - running ISU module: update (Event(START, None, sender=Frontend, reason=None))
2017-10-24 17:05:21,910 - session_2017-10-24T17_05_21_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f3ef5e28090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f3ef665e850>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857521.91
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(START, None, sender=Frontend, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: None
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([do(top)])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: None
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 17:05:21,910 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:filterReadings
2017-10-24 17:05:21,910 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 17:05:21,910 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 17:05:21,913 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 17:05:21,913 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 17:05:21,913 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 17:05:21,915 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 17:05:21,915 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 17:05:21,915 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 17:05:21,915 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 17:05:21,915 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 17:05:21,915 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 17:05:21,915 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 17:05:21,916 - session_2017-10-24T17_05_21_0 - INFO - BEGIN integrate_moves
2017-10-24 17:05:21,916 - session_2017-10-24T17_05_21_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 17:05:21,916 - session_2017-10-24T17_05_21_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 17:05:21,916 - session_2017-10-24T17_05_21_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 17:05:21,916 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:integrate
2017-10-24 17:05:21,916 - session_2017-10-24T17_05_21_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 17:05:21,916 - session_2017-10-24T17_05_21_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 17:05:21,916 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 17:05:21,916 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_action
2017-10-24 17:05:21,916 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_reject
2017-10-24 17:05:21,917 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:accommodate
2017-10-24 17:05:21,917 - session_2017-10-24T17_05_21_0 - INFO - breaking out of accommodate
2017-10-24 17:05:21,917 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_reject
2017-10-24 17:05:21,917 - session_2017-10-24T17_05_21_0 - INFO - END integrate_moves
2017-10-24 17:05:21,917 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:exec_plan
2017-10-24 17:05:21,918 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:21,920 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([do(top)])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 17:05:21,920 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:exec_plan
2017-10-24 17:05:21,922 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 17:05:21,923 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:21,923 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:exec_plan
2017-10-24 17:05:21,923 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:21,923 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 17:05:21,923 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 17:05:21,923 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:exec_plan
2017-10-24 17:05:21,923 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:21,924 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 17:05:21,924 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 17:05:21,924 - session_2017-10-24T17_05_21_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 17:05:21,924 - session_2017-10-24T17_05_21_0 - INFO - running ISU module: select
2017-10-24 17:05:21,925 - session_2017-10-24T17_05_21_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f3ef5e28090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f3ef665e850>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857521.91
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(START, None, sender=Frontend, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: None
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: None
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 17:05:21,925 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 17:05:21,928 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.goals: stackset([])
+ tis.private.tmp.sys.goals: stackset([perform(top)])
?                                      ++++++++++++
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 17:05:21,928 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_action
2017-10-24 17:05:21,930 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.goal(X))])
?                                                                  +++++++++++++++++++++
-- END TIS changes --
2017-10-24 17:05:21,931 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_icm
2017-10-24 17:05:21,933 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
?                                       +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.goal(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 17:05:21,933 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_move
2017-10-24 17:05:21,936 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
?                                                              +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 17:05:21,936 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_icm
2017-10-24 17:05:21,936 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_move
2017-10-24 17:05:21,936 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 17:05:21,938 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 17:05:21,938 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 17:05:21,938 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:set_timeout
2017-10-24 17:05:21,940 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: None
?                       ^^^^
+ tis.timeout.duration: 5.0
?                       ^^^
-- END TIS changes --
2017-10-24 17:05:21,941 - session_2017-10-24T17_05_21_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 17:05:21,941 - session_2017-10-24T17_05_21_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None))
2017-10-24 17:05:21,941 - session_2017-10-24T17_05_21_0 - DEBUG - DeviceManager handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 17:05:21,941 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 17:05:21,941 - session_2017-10-24T17_05_21_0 - DEBUG - IndependentGuiBackend handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 17:05:21,941 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 17:05:21,941 - session_2017-10-24T17_05_21_0 - DEBUG - CogloadModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 17:05:21,942 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None))
2017-10-24 17:05:21,942 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 17:05:21,942 - session_2017-10-24T17_05_21_0 - DEBUG - IndependentGuiBackend handles Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 17:05:21,942 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend handles Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 17:05:21,942 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend is sending event {"content": {"ddd_name": "recipehelp", "language_code": "eng"}, "_sender": "DmeModule", "_reason": null, "event_type": "SET_DDD"}
2017-10-24 17:05:21,942 - session_2017-10-24T17_05_21_0 - DEBUG - Sent.
2017-10-24 17:05:21,943 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 17:05:21,943 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 17:05:21,943 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 17:05:21,944 - session_2017-10-24T17_05_21_0 - DEBUG - Sent.
2017-10-24 17:05:21,944 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None)))
2017-10-24 17:05:21,946 - session_2017-10-24T17_05_21_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None))
2017-10-24 17:05:21,946 - session_2017-10-24T17_05_21_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 17:05:21,947 - session_2017-10-24T17_05_21_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 17:05:21,947 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 17:05:21,949 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 17:05:21,949 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 17:05:21,949 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 17:05:21,949 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 17:05:21,949 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 17:05:21,949 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 17:05:21,950 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 17:05:21,950 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 17:05:21,950 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 17:05:21,951 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 17:05:21,951 - session_2017-10-24T17_05_21_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 17:05:21,953 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 17:05:21,953 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 17:05:21,953 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 17:05:21,953 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 17:05:21,953 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 17:05:21,954 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 17:05:21,954 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 17:05:21,954 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend generated message []
2017-10-24 17:05:21,954 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 17:05:21,954 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend posted event
2017-10-24 17:05:21,954 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 17:05:21,954 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 17:05:21,955 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 17:05:21,955 - session_2017-10-24T17_05_21_0 - DEBUG - Sent.
2017-10-24 17:05:21,955 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 17:05:21,955 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 17:05:21,955 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 17:05:21,957 - session_2017-10-24T17_05_21_0 - DEBUG - Sent.
2017-10-24 17:05:21,957 - session_2017-10-24T17_05_21_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 17:05:22,016 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend received event {"content": ["", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 17:05:22,017 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 17:05:22,017 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 17:05:22,017 - session_2017-10-24T17_05_21_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 17:05:22,017 - session_2017-10-24T17_05_21_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 17:05:22,017 - session_2017-10-24T17_05_21_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 17:05:22,017 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 17:05:22,018 - session_2017-10-24T17_05_21_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 17:05:22,018 - session_2017-10-24T17_05_21_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 17:05:22,019 - session_2017-10-24T17_05_21_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f3ef5e28090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f3ef665e850>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857522.02
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 17:05:22,019 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:filterReadings
2017-10-24 17:05:22,019 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 17:05:22,019 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 17:05:22,022 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: None
?                        ^^^^
+ tis.shared.lu.speaker: SYS
?                        ^^^
-- END TIS changes --
2017-10-24 17:05:22,022 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 17:05:22,022 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 17:05:22,025 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 17:05:22,025 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 17:05:22,025 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 17:05:22,025 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 17:05:22,025 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 17:05:22,025 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 17:05:22,025 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 17:05:22,025 - session_2017-10-24T17_05_21_0 - INFO - BEGIN integrate_moves
2017-10-24 17:05:22,025 - session_2017-10-24T17_05_21_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 17:05:22,025 - session_2017-10-24T17_05_21_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 17:05:22,026 - session_2017-10-24T17_05_21_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 17:05:22,026 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:integrate
2017-10-24 17:05:22,029 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 17:05:22,029 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 17:05:22,029 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 17:05:22,029 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 17:05:22,029 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:22,029 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:integrate
2017-10-24 17:05:22,032 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 17:05:22,032 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 17:05:22,032 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 17:05:22,033 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 17:05:22,033 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:22,033 - session_2017-10-24T17_05_21_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 17:05:22,033 - session_2017-10-24T17_05_21_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 17:05:22,033 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 17:05:22,033 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_action
2017-10-24 17:05:22,033 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_reject
2017-10-24 17:05:22,033 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:accommodate
2017-10-24 17:05:22,033 - session_2017-10-24T17_05_21_0 - INFO - breaking out of accommodate
2017-10-24 17:05:22,034 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_reject
2017-10-24 17:05:22,034 - session_2017-10-24T17_05_21_0 - INFO - END integrate_moves
2017-10-24 17:05:22,034 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:exec_plan
2017-10-24 17:05:22,034 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:22,034 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 17:05:22,034 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 17:05:22,034 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:exec_plan
2017-10-24 17:05:22,035 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:22,035 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 17:05:22,035 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 17:05:22,037 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 17:05:22,037 - session_2017-10-24T17_05_21_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 17:05:22,037 - session_2017-10-24T17_05_21_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 17:05:22,037 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 17:05:22,037 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 17:05:22,037 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 17:05:22,038 - session_2017-10-24T17_05_21_0 - DEBUG - Sent.
2017-10-24 17:05:22,038 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 17:05:22,038 - session_2017-10-24T17_05_21_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 17:05:22,039 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 17:05:22,039 - session_2017-10-24T17_05_21_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 17:05:24,980 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "tell me what to do"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 17:05:24,981 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 17:05:24,981 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None))
2017-10-24 17:05:24,981 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 17:05:24,981 - session_2017-10-24T17_05_21_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 17:05:24,981 - session_2017-10-24T17_05_21_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "tell me what to do"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 17:05:24,981 - session_2017-10-24T17_05_21_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 17:05:24,987 - session_2017-10-24T17_05_21_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 17:05:24,987 - session_2017-10-24T17_05_21_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])} for DDD 'recipehelp'
2017-10-24 17:05:24,987 - session_2017-10-24T17_05_21_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
2017-10-24 17:05:24,987 - session_2017-10-24T17_05_21_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None)
2017-10-24 17:05:24,988 - session_2017-10-24T17_05_21_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "tell me what to do"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "tell me what to do", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "say_step"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "tell me what to do", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 17:05:24,988 - session_2017-10-24T17_05_21_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: tell me what to do}], sender=TextInputComponent, reason=None)
2017-10-24 17:05:24,988 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None))
2017-10-24 17:05:24,988 - session_2017-10-24T17_05_21_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=InterpretModule, reason=None)
2017-10-24 17:05:24,988 - session_2017-10-24T17_05_21_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 17:05:24,988 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 17:05:24,988 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 17:05:24,989 - session_2017-10-24T17_05_21_0 - DEBUG - Sent.
2017-10-24 17:05:24,989 - session_2017-10-24T17_05_21_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 17:05:24,989 - session_2017-10-24T17_05_21_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 17:05:24,990 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 17:05:24,991 - session_2017-10-24T17_05_21_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
2017-10-24 17:05:24,991 - session_2017-10-24T17_05_21_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 17:05:24,992 - session_2017-10-24T17_05_21_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f3ef5e28090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f3ef665e850>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857524.99
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 17:05:24,992 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:filterReadings
2017-10-24 17:05:24,994 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("tell me what to do"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #]), OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
-- END TIS changes --
2017-10-24 17:05:24,995 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:filterReadings
2017-10-24 17:05:24,999 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                             ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                             ^
- tis.latest_moves_amb: {OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'tell me what to do'), #])}
?                                                                                                                            ^
+ tis.latest_moves_amb: {OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
?                                                                                                                            ^
-- END TIS changes --
2017-10-24 17:05:24,999 - session_2017-10-24T17_05_21_0 - INFO - hypotheses reranking had no effect
2017-10-24 17:05:24,999 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 17:05:25,003 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 17:05:25,003 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 17:05:25,008 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 17:05:25,008 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 17:05:25,008 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 17:05:25,010 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 17:05:25,010 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 17:05:25,010 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 17:05:25,014 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([])
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
- tis.private.tmp.usr.plan: Stack([])
+ tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
- tis.private.tmp.usr.qud: stackset([])
+ tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                    ++++++++++
-- END TIS changes --
2017-10-24 17:05:25,014 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 17:05:25,014 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 17:05:25,014 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 17:05:25,014 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 17:05:25,014 - session_2017-10-24T17_05_21_0 - INFO - BEGIN integrate_moves
2017-10-24 17:05:25,014 - session_2017-10-24T17_05_21_0 - INFO - init_shift: OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
2017-10-24 17:05:25,015 - session_2017-10-24T17_05_21_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 17:05:25,015 - session_2017-10-24T17_05_21_0 - INFO - init_shift: OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
2017-10-24 17:05:25,015 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:integrate
2017-10-24 17:05:25,018 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: integrateUsrRequest
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])
+ tis.private.nim: OpenQueue([#])
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([do(say_step), findout(?X.goal(X))])
?                          ++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([perform(say_step), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
-- END TIS changes --
2017-10-24 17:05:25,019 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 17:05:25,019 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 17:05:25,023 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: downdateISSUES3
-- BEGIN TIS changes --
- tis.shared.goals: stackset([perform(say_step), resolve_user(?X.goal(X)), perform(top)])
?                                                --------------------------
+ tis.shared.goals: stackset([perform(say_step), perform(top)])
-- END TIS changes --
2017-10-24 17:05:25,023 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 17:05:25,023 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:25,026 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.plan: Stack([do(say_step), findout(?X.goal(X))])
+ tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
-- END TIS changes --
2017-10-24 17:05:25,026 - session_2017-10-24T17_05_21_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 17:05:25,026 - session_2017-10-24T17_05_21_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 17:05:25,026 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 17:05:25,026 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_action
2017-10-24 17:05:25,027 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_reject
2017-10-24 17:05:25,027 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:accommodate
2017-10-24 17:05:25,027 - session_2017-10-24T17_05_21_0 - INFO - breaking out of accommodate
2017-10-24 17:05:25,027 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_reject
2017-10-24 17:05:25,027 - session_2017-10-24T17_05_21_0 - INFO - END integrate_moves
2017-10-24 17:05:25,027 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:exec_plan
2017-10-24 17:05:25,031 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.bel: {}
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
- tis.private.plan: Stack([dev_perform(say_step, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 17:05:25,031 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:25,031 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:exec_plan
2017-10-24 17:05:25,031 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:25,032 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 17:05:25,034 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.goal(X)])
?                           ----------
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 17:05:25,034 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 17:05:25,034 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:exec_plan
2017-10-24 17:05:25,034 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:25,035 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 17:05:25,035 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 17:05:25,035 - session_2017-10-24T17_05_21_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None)
2017-10-24 17:05:25,035 - session_2017-10-24T17_05_21_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 17:05:25,035 - session_2017-10-24T17_05_21_0 - INFO - running ISU module: select
2017-10-24 17:05:25,036 - session_2017-10-24T17_05_21_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f3ef5e28090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f3ef665e850>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857524.99
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')])
tis.latest_moves_amb: {OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(say_step), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 17:05:25,036 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 17:05:25,040 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.tmp.sys.bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([perform(say_step), perform(top)])
?                                              +++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 17:05:25,040 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_icm
2017-10-24 17:05:25,043 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(say_step, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
-- END TIS changes --
2017-10-24 17:05:25,043 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_move
2017-10-24 17:05:25,046 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 17:05:25,046 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_icm
2017-10-24 17:05:25,047 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_move
2017-10-24 17:05:25,047 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 17:05:25,049 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 17:05:25,049 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 17:05:25,049 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:set_timeout
2017-10-24 17:05:25,051 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 17:05:25,052 - session_2017-10-24T17_05_21_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 17:05:25,052 - session_2017-10-24T17_05_21_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(say_step), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 17:05:25,052 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None))
2017-10-24 17:05:25,052 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, tell me what to do, sender=DmeModule, reason=None)
2017-10-24 17:05:25,052 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend is sending event {"content": "tell me what to do", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 17:05:25,053 - session_2017-10-24T17_05_21_0 - DEBUG - Sent.
2017-10-24 17:05:25,053 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 17:05:25,053 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 17:05:25,053 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 17:05:25,054 - session_2017-10-24T17_05_21_0 - DEBUG - Sent.
2017-10-24 17:05:25,055 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(say_step), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None)))
2017-10-24 17:05:25,055 - session_2017-10-24T17_05_21_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(say_step), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}, sender=TurnManager, reason=None))
2017-10-24 17:05:25,055 - session_2017-10-24T17_05_21_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 17:05:25,055 - session_2017-10-24T17_05_21_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(say_step), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 17:05:25,055 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), top_perform_goal: perform(say_step), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 17:05:25,056 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(say_step), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 17:05:25,056 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 17:05:25,057 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 17:05:25,057 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 17:05:25,057 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 17:05:25,057 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 17:05:25,057 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 17:05:25,057 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 17:05:25,058 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp') generated as u'Step ended'
2017-10-24 17:05:25,058 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 17:05:25,059 - session_2017-10-24T17_05_21_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(say_step), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 17:05:25,060 - session_2017-10-24T17_05_21_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 17:05:25,061 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(say_step), device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(say_step), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 17:05:25,061 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 17:05:25,061 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 17:05:25,061 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 17:05:25,061 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 17:05:25,061 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 17:05:25,062 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp')
2017-10-24 17:05:25,062 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f3ef413ebd8>, <tdm.tdm_gui_protocol.Popup instance at 0x7f3ef40e3050>]
2017-10-24 17:05:25,062 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f3ef413ebd8>, <tdm.tdm_gui_protocol.Popup instance at 0x7f3ef40e3050>], sender=GuiBackend, reason=None)
2017-10-24 17:05:25,063 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend posted event
2017-10-24 17:05:25,063 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None))
2017-10-24 17:05:25,063 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Step ended], sender=GenerateModule, reason=None)
2017-10-24 17:05:25,064 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Step ended"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 17:05:25,065 - session_2017-10-24T17_05_21_0 - DEBUG - Sent.
2017-10-24 17:05:25,065 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None))
2017-10-24 17:05:25,065 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Step ended}, sender=IndependentGuiBackend, reason=None)
2017-10-24 17:05:25,066 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Step ended"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 17:05:25,067 - session_2017-10-24T17_05_21_0 - DEBUG - Sent.
2017-10-24 17:05:25,067 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f3ef413ebd8>, <tdm.tdm_gui_protocol.Popup instance at 0x7f3ef40e3050>], sender=GuiBackend, reason=None))
2017-10-24 17:05:25,068 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f3ef413ebd8>, <tdm.tdm_gui_protocol.Popup instance at 0x7f3ef40e3050>], sender=GuiBackend, reason=None)
2017-10-24 17:05:25,068 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "say_step", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Step ended"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 17:05:25,070 - session_2017-10-24T17_05_21_0 - DEBUG - Sent.
2017-10-24 17:05:25,070 - session_2017-10-24T17_05_21_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 17:05:25,071 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Step ended"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 17:05:25,072 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 17:05:25,072 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None))
2017-10-24 17:05:25,072 - session_2017-10-24T17_05_21_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Step ended], sender=TextOutputComponent, reason=None)
2017-10-24 17:05:25,072 - session_2017-10-24T17_05_21_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 17:05:25,073 - session_2017-10-24T17_05_21_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 17:05:25,074 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 17:05:25,074 - session_2017-10-24T17_05_21_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
2017-10-24 17:05:25,075 - session_2017-10-24T17_05_21_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None))
2017-10-24 17:05:25,076 - session_2017-10-24T17_05_21_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f3ef5e28090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f3ef665e850>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857525.08
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(say_step, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(say_step), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(say_step), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 17:05:25,076 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:filterReadings
2017-10-24 17:05:25,076 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 17:05:25,076 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 17:05:25,082 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
?            ^^
- tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 17:05:25,083 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 17:05:25,083 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 17:05:25,086 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(say_step, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 17:05:25,086 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 17:05:25,086 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 17:05:25,086 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 17:05:25,086 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 17:05:25,086 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 17:05:25,086 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 17:05:25,086 - session_2017-10-24T17_05_21_0 - INFO - BEGIN integrate_moves
2017-10-24 17:05:25,086 - session_2017-10-24T17_05_21_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 17:05:25,086 - session_2017-10-24T17_05_21_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 17:05:25,087 - session_2017-10-24T17_05_21_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 17:05:25,087 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:integrate
2017-10-24 17:05:25,090 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 17:05:25,091 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 17:05:25,091 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 17:05:25,091 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 17:05:25,091 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:25,091 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:integrate
2017-10-24 17:05:25,094 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {device_activity_terminated(say_step)}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 17:05:25,094 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 17:05:25,094 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 17:05:25,097 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(perform(confirmation_action))])
- tis.shared.goals: stackset([perform(say_step), perform(top)])
?                                     -------------------
+ tis.shared.goals: stackset([perform(top)])
- tis.shared.previous_goal: None
?                           ^ ^
+ tis.shared.previous_goal: perform(say_step)
?                           ^^^^ ^^^^^^^^^ ++
-- END TIS changes --
2017-10-24 17:05:25,097 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 17:05:25,097 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:25,097 - session_2017-10-24T17_05_21_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 17:05:25,097 - session_2017-10-24T17_05_21_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 17:05:25,097 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 17:05:25,097 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_action
2017-10-24 17:05:25,097 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_reject
2017-10-24 17:05:25,098 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:accommodate
2017-10-24 17:05:25,098 - session_2017-10-24T17_05_21_0 - INFO - breaking out of accommodate
2017-10-24 17:05:25,098 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_reject
2017-10-24 17:05:25,098 - session_2017-10-24T17_05_21_0 - INFO - END integrate_moves
2017-10-24 17:05:25,098 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:exec_plan
2017-10-24 17:05:25,101 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([jumpto(perform(confirmation_action))])
+ tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
-- END TIS changes --
2017-10-24 17:05:25,102 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:25,102 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:exec_plan
2017-10-24 17:05:25,105 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(confirmation_yn), findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
?                          -------------------------
+ tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 17:05:25,105 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:25,105 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:exec_plan
2017-10-24 17:05:25,106 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:25,106 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 17:05:25,106 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 17:05:25,106 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:exec_plan
2017-10-24 17:05:25,106 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:25,106 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 17:05:25,107 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 17:05:25,109 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 17:05:25,109 - session_2017-10-24T17_05_21_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 17:05:25,109 - session_2017-10-24T17_05_21_0 - INFO - running ISU module: select
2017-10-24 17:05:25,110 - session_2017-10-24T17_05_21_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f3ef5e28090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f3ef665e850>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857525.08
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(say_step, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(say_step), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 17:05:25,110 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 17:05:25,116 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(say_step, [], True, None))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.com: {}
+ tis.private.tmp.sys.com: {device_activity_terminated(say_step)}
- tis.private.tmp.sys.goals: stackset([perform(say_step), perform(top)])
?                                              ^ ^ ^ ^^
+ tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
?                                              ^^^^^^^ ^^^^ ^^ ^^^
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
-- END TIS changes --
2017-10-24 17:05:25,116 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_action
2017-10-24 17:05:25,119 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.confirmation_yn(X))])
?                                                                  ++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 17:05:25,119 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_icm
2017-10-24 17:05:25,122 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
?                                       +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.confirmation_yn(X))])
?                                 ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
-- END TIS changes --
2017-10-24 17:05:25,122 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_move
2017-10-24 17:05:25,125 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))])
?                                                              ++++++++++++++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.confirmation_yn(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 17:05:25,125 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_icm
2017-10-24 17:05:25,126 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_move
2017-10-24 17:05:25,126 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 17:05:25,128 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 17:05:25,128 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 17:05:25,128 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:set_timeout
2017-10-24 17:05:25,131 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 17:05:25,131 - session_2017-10-24T17_05_21_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 17:05:25,132 - session_2017-10-24T17_05_21_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None))
2017-10-24 17:05:25,132 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 17:05:25,132 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 17:05:25,132 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 17:05:25,132 - session_2017-10-24T17_05_21_0 - DEBUG - Sent.
2017-10-24 17:05:25,133 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None)))
2017-10-24 17:05:25,133 - session_2017-10-24T17_05_21_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(say_step)}, cogload_strategy: None}, sender=DmeModule, reason=Event(SYSTEM_MOVES, [, Step ended], sender=TurnManager, reason=None))
2017-10-24 17:05:25,133 - session_2017-10-24T17_05_21_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 17:05:25,134 - session_2017-10-24T17_05_21_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 17:05:25,134 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(confirmation_action), device_outputs: Stack([]), top_perform_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, facts_being_grounded: [], current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), com: {device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 17:05:25,136 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 17:05:25,136 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 17:05:25,136 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 17:05:25,136 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 17:05:25,137 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 17:05:25,137 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 17:05:25,137 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 17:05:25,137 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 17:05:25,138 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule: Move Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp') generated as u'Are you done?'
2017-10-24 17:05:25,138 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Are you done?], sender=GenerateModule, reason=None)
2017-10-24 17:05:25,139 - session_2017-10-24T17_05_21_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 17:05:25,141 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))]), bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(confirmation_action), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: perform(say_step), current_goal: perform(confirmation_action), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')]), com: {device_activity_terminated(say_step)}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 17:05:25,141 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 17:05:25,142 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')])
2017-10-24 17:05:25,142 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 17:05:25,142 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 17:05:25,142 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp'), facts={device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)})
2017-10-24 17:05:25,142 - session_2017-10-24T17_05_21_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp')
2017-10-24 17:05:25,142 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f3ef40f1c68>]
2017-10-24 17:05:25,143 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f3ef40f1c68>], sender=GuiBackend, reason=None)
2017-10-24 17:05:25,143 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend posted event
2017-10-24 17:05:25,143 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Are you done?], sender=GenerateModule, reason=None))
2017-10-24 17:05:25,143 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Are you done?], sender=GenerateModule, reason=None)
2017-10-24 17:05:25,143 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Are you done?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 17:05:25,143 - session_2017-10-24T17_05_21_0 - DEBUG - Sent.
2017-10-24 17:05:25,144 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f3ef40f1c68>], sender=GuiBackend, reason=None))
2017-10-24 17:05:25,144 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f3ef40f1c68>], sender=GuiBackend, reason=None)
2017-10-24 17:05:25,144 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 17:05:25,145 - session_2017-10-24T17_05_21_0 - DEBUG - Sent.
2017-10-24 17:05:25,145 - session_2017-10-24T17_05_21_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 17:05:25,151 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Are you done?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 17:05:25,152 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 17:05:25,152 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Are you done?], sender=TextOutputComponent, reason=None))
2017-10-24 17:05:25,152 - session_2017-10-24T17_05_21_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Are you done?], sender=TextOutputComponent, reason=None)
2017-10-24 17:05:25,152 - session_2017-10-24T17_05_21_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 17:05:25,152 - session_2017-10-24T17_05_21_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Are you done?], sender=TurnManager, reason=None)
2017-10-24 17:05:25,153 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Are you done?], sender=TurnManager, reason=None)
2017-10-24 17:05:25,153 - session_2017-10-24T17_05_21_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Are you done?], sender=TurnManager, reason=None)
2017-10-24 17:05:25,153 - session_2017-10-24T17_05_21_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Are you done?], sender=TurnManager, reason=None))
2017-10-24 17:05:25,155 - session_2017-10-24T17_05_21_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f3ef5e28090>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f3ef665e850>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508857525.15
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Are you done?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.confirmation_yn(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {device_activity_terminated(say_step), DeviceResultProposition(say_step, [], True, None)}
tis.private.tmp.sys.com: {device_activity_terminated(say_step)}
tis.private.tmp.sys.goals: stackset([perform(confirmation_action), perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.confirmation_yn(X)), device_query(?X.confirmation(X)), if_then_else(confirmation(yes), jumpto(perform(go_to_next)), jumpto(perform(say_step)))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: tell me what to do
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {device_activity_terminated(say_step)}
tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
tis.shared.previous_goal: perform(say_step)
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 17:05:25,155 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:filterReadings
2017-10-24 17:05:25,155 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 17:05:25,155 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 17:05:25,161 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(say_step, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(request(say_step), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'tell me what to do')}
-- END TIS changes --
2017-10-24 17:05:25,161 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 17:05:25,162 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 17:05:25,165 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 17:05:25,165 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 17:05:25,165 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 17:05:25,165 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 17:05:25,165 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 17:05:25,165 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 17:05:25,165 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 17:05:25,165 - session_2017-10-24T17_05_21_0 - INFO - BEGIN integrate_moves
2017-10-24 17:05:25,166 - session_2017-10-24T17_05_21_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 17:05:25,166 - session_2017-10-24T17_05_21_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 17:05:25,166 - session_2017-10-24T17_05_21_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 17:05:25,166 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:integrate
2017-10-24 17:05:25,169 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 17:05:25,169 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 17:05:25,170 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 17:05:25,170 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 17:05:25,170 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:25,170 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:integrate
2017-10-24 17:05:25,173 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(confirmation_action), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.confirmation_yn(X)), perform(confirmation_action), perform(top)])
?                             +++++++++++++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.confirmation_yn(X)])
-- END TIS changes --
2017-10-24 17:05:25,173 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 17:05:25,173 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 17:05:25,174 - session_2017-10-24T17_05_21_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 17:05:25,174 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:25,174 - session_2017-10-24T17_05_21_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 17:05:25,174 - session_2017-10-24T17_05_21_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 17:05:25,174 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 17:05:25,174 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_action
2017-10-24 17:05:25,174 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_reject
2017-10-24 17:05:25,174 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:accommodate
2017-10-24 17:05:25,175 - session_2017-10-24T17_05_21_0 - INFO - breaking out of accommodate
2017-10-24 17:05:25,175 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:select_reject
2017-10-24 17:05:25,175 - session_2017-10-24T17_05_21_0 - INFO - END integrate_moves
2017-10-24 17:05:25,175 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:exec_plan
2017-10-24 17:05:25,175 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:25,175 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 17:05:25,175 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 17:05:25,176 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:exec_plan
2017-10-24 17:05:25,176 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:load_plan
2017-10-24 17:05:25,176 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 17:05:25,176 - session_2017-10-24T17_05_21_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 17:05:25,179 - session_2017-10-24T17_05_21_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 17:05:25,179 - session_2017-10-24T17_05_21_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 17:05:25,179 - session_2017-10-24T17_05_21_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 17:05:25,179 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 17:05:25,180 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 17:05:25,180 - session_2017-10-24T17_05_21_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 17:05:25,180 - session_2017-10-24T17_05_21_0 - DEBUG - Sent.
2017-10-24 17:05:25,180 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 17:05:25,181 - session_2017-10-24T17_05_21_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 17:05:25,181 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, Are you done?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.confirmation_yn(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 17:05:25,181 - session_2017-10-24T17_05_21_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 17:05:51,414 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 17:05:51,414 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(STOP, None, sender=Backend, reason=None))
2017-10-24 17:05:51,414 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(STOP, None, sender=Backend, reason=None)
2017-10-24 17:05:51,415 - session_2017-10-24T17_05_21_0 - DEBUG - InterpretModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 17:05:51,415 - session_2017-10-24T17_05_21_0 - DEBUG - InterpretModule posts Event(STOPPED, None, sender=InterpretModule, reason=None)
2017-10-24 17:05:51,415 - session_2017-10-24T17_05_21_0 - DEBUG - DmeModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 17:05:51,415 - session_2017-10-24T17_05_21_0 - DEBUG - DmeModule posts Event(STOPPED, None, sender=DmeModule, reason=None)
2017-10-24 17:05:51,415 - session_2017-10-24T17_05_21_0 - DEBUG - DeviceManager handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 17:05:51,415 - session_2017-10-24T17_05_21_0 - DEBUG - DeviceManager posts Event(STOPPED, None, sender=DeviceManager, reason=None)
2017-10-24 17:05:51,415 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 17:05:51,415 - session_2017-10-24T17_05_21_0 - DEBUG - GenerateModule posts Event(STOPPED, None, sender=GenerateModule, reason=None)
2017-10-24 17:05:51,416 - session_2017-10-24T17_05_21_0 - DEBUG - IndependentGuiBackend handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 17:05:51,416 - session_2017-10-24T17_05_21_0 - DEBUG - IndependentGuiBackend posts Event(STOPPED, None, sender=IndependentGuiBackend, reason=None)
2017-10-24 17:05:51,416 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 17:05:51,416 - session_2017-10-24T17_05_21_0 - DEBUG - GuiBackend posts Event(STOPPED, None, sender=GuiBackend, reason=None)
2017-10-24 17:05:51,417 - session_2017-10-24T17_05_21_0 - DEBUG - CogloadModule handles Event(STOP, None, sender=Backend, reason=None)
2017-10-24 17:05:51,417 - session_2017-10-24T17_05_21_0 - DEBUG - CogloadModule posts Event(STOPPED, None, sender=CogloadModule, reason=None)
2017-10-24 17:05:51,417 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=InterpretModule, reason=None))
2017-10-24 17:05:51,417 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=InterpretModule, reason=None)
2017-10-24 17:05:51,418 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=DmeModule, reason=None))
2017-10-24 17:05:51,418 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=DmeModule, reason=None)
2017-10-24 17:05:51,418 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=DeviceManager, reason=None))
2017-10-24 17:05:51,418 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=DeviceManager, reason=None)
2017-10-24 17:05:51,418 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=GenerateModule, reason=None))
2017-10-24 17:05:51,418 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=GenerateModule, reason=None)
2017-10-24 17:05:51,418 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=IndependentGuiBackend, reason=None))
2017-10-24 17:05:51,418 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=IndependentGuiBackend, reason=None)
2017-10-24 17:05:51,419 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=GuiBackend, reason=None))
2017-10-24 17:05:51,419 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=GuiBackend, reason=None)
2017-10-24 17:05:51,419 - session_2017-10-24T17_05_21_0 - DEBUG - Backend._handle_event(Event(STOPPED, None, sender=CogloadModule, reason=None))
2017-10-24 17:05:51,419 - session_2017-10-24T17_05_21_0 - DEBUG - EventDispatcher: dispatching event Event(STOPPED, None, sender=CogloadModule, reason=None)

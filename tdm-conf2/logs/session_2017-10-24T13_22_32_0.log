2017-10-24 13:22:32,112 - session_2017-10-24T13_22_32_0 - DEBUG - Backend()
2017-10-24 13:22:32,113 - session_2017-10-24T13_22_32_0 - DEBUG - Backend.initialize()
2017-10-24 13:22:32,146 - session_2017-10-24T13_22_32_0 - DEBUG - Backend.add_module(DmeModule, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f91ac177dd0>>, False])
2017-10-24 13:22:32,146 - session_2017-10-24T13_22_32_0 - DEBUG - Backend.add_module(GenerateModule, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f91ac177dd0>>, 'eng'])
2017-10-24 13:22:32,147 - session_2017-10-24T13_22_32_0 - DEBUG - Backend.add_module(DeviceManager, args=[])
2017-10-24 13:22:32,147 - session_2017-10-24T13_22_32_0 - DEBUG - Backend.add_module(CogloadModule, args=[])
2017-10-24 13:22:32,147 - session_2017-10-24T13_22_32_0 - INFO - TurnManager.enter_state(IDLE, __init__) (previous state was None)
2017-10-24 13:22:32,147 - session_2017-10-24T13_22_32_0 - DEBUG - Backend.add_module(GuiBackend, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f91ac177dd0>>, True, 'disabled'])
2017-10-24 13:22:32,147 - session_2017-10-24T13_22_32_0 - DEBUG - Backend.add_module(IndependentGuiBackend, args=[<bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f91ac177dd0>>])
2017-10-24 13:22:32,147 - session_2017-10-24T13_22_32_0 - DEBUG - Backend.add_module(InterpretModule, args=[<bound method Backend.get_device_manager of <tdm.backend.Backend object at 0x7f91ac177dd0>>, <bound method Backend.get_tis of <tdm.backend.Backend object at 0x7f91ac177dd0>>, 'eng', False, True])
2017-10-24 13:22:32,147 - session_2017-10-24T13_22_32_0 - DEBUG - Backend initialized
2017-10-24 13:22:32,147 - session_2017-10-24T13_22_32_0 - DEBUG - Backend started in directory '/home/gusmatssar/recipedialogue/tdm'
2017-10-24 13:22:32,147 - session_2017-10-24T13_22_32_0 - DEBUG - Backend uses TDM version '5.0.0'
2017-10-24 13:22:32,147 - session_2017-10-24T13_22_32_0 - DEBUG - Backend uses backend config {u'active_ddd': u'recipehelp', u'ddds': [u'recipehelp'], u'asr': u'none', u'use_recognition_profile': False, u'use_word_list_correction': False, u'supported_languages': [u'eng'], u'repeat_questions': False}
2017-10-24 13:22:32,148 - session_2017-10-24T13_22_32_0 - DEBUG - Backend uses language 'eng'
2017-10-24 13:22:32,148 - session_2017-10-24T13_22_32_0 - DEBUG - running module InterpretModule
2017-10-24 13:22:32,148 - session_2017-10-24T13_22_32_0 - DEBUG - running module DmeModule
2017-10-24 13:22:32,149 - session_2017-10-24T13_22_32_0 - DEBUG - running module DeviceManager
2017-10-24 13:22:32,150 - session_2017-10-24T13_22_32_0 - DEBUG - running module GenerateModule
2017-10-24 13:22:32,150 - session_2017-10-24T13_22_32_0 - DEBUG - running module IndependentGuiBackend
2017-10-24 13:22:32,150 - session_2017-10-24T13_22_32_0 - DEBUG - running module GuiBackend
2017-10-24 13:22:32,150 - session_2017-10-24T13_22_32_0 - DEBUG - running module CogloadModule
2017-10-24 13:22:32,150 - session_2017-10-24T13_22_32_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 13:22:32,151 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 13:22:32,152 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(REGISTER_BACKEND, None, sender=Backend, reason=None))
2017-10-24 13:22:32,152 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(REGISTER_BACKEND, None, sender=Backend, reason=None)
2017-10-24 13:22:32,152 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "Backend", "_reason": null, "event_type": "REGISTER_BACKEND"}
2017-10-24 13:22:32,153 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:32,153 - session_2017-10-24T13_22_32_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 13:22:32,166 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend received event {"content": null, "_sender": "Frontend", "_reason": null, "event_type": "FRONTEND_READY"}
2017-10-24 13:22:32,167 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 13:22:32,167 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(FRONTEND_READY, None, sender=Frontend, reason=None))
2017-10-24 13:22:32,168 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(FRONTEND_READY, None, sender=Frontend, reason=None)
2017-10-24 13:22:32,168 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(BACKEND_READY, None, sender=Backend, reason=None))
2017-10-24 13:22:32,168 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(BACKEND_READY, None, sender=Backend, reason=None)
2017-10-24 13:22:32,169 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "Backend", "_reason": null, "event_type": "BACKEND_READY"}
2017-10-24 13:22:32,169 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:32,169 - session_2017-10-24T13_22_32_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 13:22:32,172 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend received event {"content": null, "_sender": "Frontend", "_reason": null, "event_type": "START"}
2017-10-24 13:22:32,172 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 13:22:32,172 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(START, None, sender=Frontend, reason=None))
2017-10-24 13:22:32,173 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(START, None, sender=Frontend, reason=None)
2017-10-24 13:22:32,173 - session_2017-10-24T13_22_32_0 - DEBUG - InterpretModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 13:22:32,173 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 13:22:32,173 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule posts Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 13:22:32,173 - session_2017-10-24T13_22_32_0 - INFO - running ISU module: update (Event(START, None, sender=Frontend, reason=None))
2017-10-24 13:22:32,174 - session_2017-10-24T13_22_32_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f91ac177e50>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f91a9a5f910>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508844152.17
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(START, None, sender=Frontend, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: None
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([do(top)])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: None
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 13:22:32,174 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:filterReadings
2017-10-24 13:22:32,175 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 13:22:32,175 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 13:22:32,178 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 13:22:32,178 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 13:22:32,178 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 13:22:32,180 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 13:22:32,180 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 13:22:32,180 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 13:22:32,180 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 13:22:32,180 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 13:22:32,180 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 13:22:32,181 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 13:22:32,181 - session_2017-10-24T13_22_32_0 - INFO - BEGIN integrate_moves
2017-10-24 13:22:32,181 - session_2017-10-24T13_22_32_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 13:22:32,181 - session_2017-10-24T13_22_32_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 13:22:32,181 - session_2017-10-24T13_22_32_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 13:22:32,181 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrate
2017-10-24 13:22:32,181 - session_2017-10-24T13_22_32_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 13:22:32,182 - session_2017-10-24T13_22_32_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 13:22:32,182 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 13:22:32,182 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_action
2017-10-24 13:22:32,182 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_reject
2017-10-24 13:22:32,182 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:accommodate
2017-10-24 13:22:32,182 - session_2017-10-24T13_22_32_0 - INFO - breaking out of accommodate
2017-10-24 13:22:32,182 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_reject
2017-10-24 13:22:32,182 - session_2017-10-24T13_22_32_0 - INFO - END integrate_moves
2017-10-24 13:22:32,182 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:32,183 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:32,185 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([do(top)])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 13:22:32,185 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:32,187 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 13:22:32,187 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:32,187 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:32,188 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:32,188 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 13:22:32,188 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 13:22:32,188 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:32,188 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:32,188 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 13:22:32,188 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 13:22:32,189 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 13:22:32,189 - session_2017-10-24T13_22_32_0 - INFO - running ISU module: select
2017-10-24 13:22:32,190 - session_2017-10-24T13_22_32_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f91ac177e50>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f91a9a5f910>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508844152.17
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(START, None, sender=Frontend, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: None
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: None
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 13:22:32,190 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 13:22:32,193 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.tmp.sys.goals: stackset([])
+ tis.private.tmp.sys.goals: stackset([perform(top)])
?                                      ++++++++++++
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 13:22:32,193 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_action
2017-10-24 13:22:32,195 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.goal(X))])
?                                                                  +++++++++++++++++++++
-- END TIS changes --
2017-10-24 13:22:32,196 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_icm
2017-10-24 13:22:32,198 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
?                                       +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), findout(?X.goal(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 13:22:32,198 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_move
2017-10-24 13:22:32,201 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
?                                                              +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 13:22:32,201 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_icm
2017-10-24 13:22:32,201 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_move
2017-10-24 13:22:32,201 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 13:22:32,203 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 13:22:32,203 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 13:22:32,203 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:set_timeout
2017-10-24 13:22:32,205 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: None
?                       ^^^^
+ tis.timeout.duration: 5.0
?                       ^^^
-- END TIS changes --
2017-10-24 13:22:32,205 - session_2017-10-24T13_22_32_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 13:22:32,206 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None))
2017-10-24 13:22:32,206 - session_2017-10-24T13_22_32_0 - DEBUG - DeviceManager handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 13:22:32,206 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 13:22:32,206 - session_2017-10-24T13_22_32_0 - DEBUG - IndependentGuiBackend handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 13:22:32,206 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 13:22:32,206 - session_2017-10-24T13_22_32_0 - DEBUG - CogloadModule handles Event(START, None, sender=Frontend, reason=None)
2017-10-24 13:22:32,206 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None))
2017-10-24 13:22:32,206 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 13:22:32,207 - session_2017-10-24T13_22_32_0 - DEBUG - IndependentGuiBackend handles Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 13:22:32,207 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend handles Event(SET_DDD, {ddd_name: recipehelp, language_code: eng}, sender=DmeModule, reason=None)
2017-10-24 13:22:32,207 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": {"ddd_name": "recipehelp", "language_code": "eng"}, "_sender": "DmeModule", "_reason": null, "event_type": "SET_DDD"}
2017-10-24 13:22:32,207 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:32,207 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 13:22:32,208 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 13:22:32,208 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 13:22:32,209 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:32,209 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None)))
2017-10-24 13:22:32,209 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(START, None, sender=Frontend, reason=None))
2017-10-24 13:22:32,209 - session_2017-10-24T13_22_32_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 13:22:32,209 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 13:22:32,210 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 13:22:32,210 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 13:22:32,211 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 13:22:32,211 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 13:22:32,211 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 13:22:32,211 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 13:22:32,211 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:loadplan)
2017-10-24 13:22:32,212 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule: Move ICMMove(icm:loadplan) generated as ''
2017-10-24 13:22:32,212 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 13:22:32,212 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 13:22:32,212 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 13:22:32,213 - session_2017-10-24T13_22_32_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 13:22:32,215 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 13:22:32,215 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 13:22:32,215 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 13:22:32,215 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:loadplan), facts={})
2017-10-24 13:22:32,215 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:loadplan)
2017-10-24 13:22:32,215 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 13:22:32,215 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 13:22:32,216 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend generated message []
2017-10-24 13:22:32,216 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 13:22:32,216 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend posted event
2017-10-24 13:22:32,216 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 13:22:32,216 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 13:22:32,216 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 13:22:32,217 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:32,217 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None))
2017-10-24 13:22:32,217 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [], sender=GuiBackend, reason=None)
2017-10-24 13:22:32,217 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 13:22:32,218 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:32,218 - session_2017-10-24T13_22_32_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 13:22:32,259 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend received event {"content": ["", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 13:22:32,259 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 13:22:32,259 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 13:22:32,259 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 13:22:32,259 - session_2017-10-24T13_22_32_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 13:22:32,259 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 13:22:32,259 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 13:22:32,259 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 13:22:32,260 - session_2017-10-24T13_22_32_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 13:22:32,261 - session_2017-10-24T13_22_32_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f91ac177e50>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f91a9a5f910>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508844152.26
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: None
tis.repeat_questions: False
tis.score: 0.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: None
tis.shared.lu.turn_cont: {}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 13:22:32,261 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:filterReadings
2017-10-24 13:22:32,261 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 13:22:32,261 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 13:22:32,264 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: None
?                        ^^^^
+ tis.shared.lu.speaker: SYS
?                        ^^^
-- END TIS changes --
2017-10-24 13:22:32,264 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 13:22:32,264 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 13:22:32,267 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 13:22:32,267 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 13:22:32,267 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 13:22:32,267 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 13:22:32,267 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 13:22:32,267 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 13:22:32,268 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 13:22:32,268 - session_2017-10-24T13_22_32_0 - INFO - BEGIN integrate_moves
2017-10-24 13:22:32,268 - session_2017-10-24T13_22_32_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 13:22:32,268 - session_2017-10-24T13_22_32_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 13:22:32,268 - session_2017-10-24T13_22_32_0 - INFO - init_shift: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 13:22:32,268 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrate
2017-10-24 13:22:32,272 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 13:22:32,272 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 13:22:32,272 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 13:22:32,272 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 13:22:32,272 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:32,272 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrate
2017-10-24 13:22:32,275 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 13:22:32,275 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 13:22:32,275 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 13:22:32,275 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 13:22:32,275 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:32,275 - session_2017-10-24T13_22_32_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 13:22:32,276 - session_2017-10-24T13_22_32_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 13:22:32,276 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 13:22:32,276 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_action
2017-10-24 13:22:32,276 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_reject
2017-10-24 13:22:32,276 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:accommodate
2017-10-24 13:22:32,276 - session_2017-10-24T13_22_32_0 - INFO - breaking out of accommodate
2017-10-24 13:22:32,276 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_reject
2017-10-24 13:22:32,276 - session_2017-10-24T13_22_32_0 - INFO - END integrate_moves
2017-10-24 13:22:32,276 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:32,276 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:32,277 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 13:22:32,277 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 13:22:32,277 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:32,277 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:32,277 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 13:22:32,277 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 13:22:32,279 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 13:22:32,279 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 13:22:32,279 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 13:22:32,280 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 13:22:32,280 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 13:22:32,280 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 13:22:32,280 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:32,280 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 13:22:32,281 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 13:22:32,282 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [, What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 13:22:32,282 - session_2017-10-24T13_22_32_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 13:22:42,881 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to step one"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 13:22:42,881 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 13:22:42,881 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to step one}], sender=TextInputComponent, reason=None))
2017-10-24 13:22:42,882 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to step one}], sender=TextInputComponent, reason=None)
2017-10-24 13:22:42,882 - session_2017-10-24T13_22_32_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to step one}], sender=TextInputComponent, reason=None)
2017-10-24 13:22:42,882 - session_2017-10-24T13_22_32_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to step one"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 13:22:42,882 - session_2017-10-24T13_22_32_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 13:22:42,888 - session_2017-10-24T13_22_32_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 13:22:42,888 - session_2017-10-24T13_22_32_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #])} for DDD 'recipehelp'
2017-10-24 13:22:42,889 - session_2017-10-24T13_22_32_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #])}
2017-10-24 13:22:42,889 - session_2017-10-24T13_22_32_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #])}, sender=InterpretModule, reason=None)
2017-10-24 13:22:42,889 - session_2017-10-24T13_22_32_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to step one"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to step one", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AskMove": {"_type": "ask", "_ddd_name": "recipehelp", "_content": {"445f2b7f7189027ce75dac332c96dde0.WhQuestion": {"_type": "WHQ", "_content": {"24b0f339529d53d987534676834bafa7.LambdaAbstractedPredicateProposition": {"_ontology_name": "RecipehelpOntology", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.BuiltinSort": {"_dynamic": false, "_name": "string"}}, "name": "go_to_step", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to step one", "_modality": "speech", "_background": null, "_speaker": "USR"}}, {"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"7df9060a3399228b5ad4ef77628d15ef.PredicateProposition": {"_polarity": "POS", "predicate": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.CustomSort": {"_ontology_name": "RecipehelpOntology", "_dynamic": false, "_name": "step"}}, "name": "step_to_choose", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}, "_content": {"59344e6b24703bf8b6d12bbc60ef78f6.Predicate": {"sort": {"29469b87e7e7f813b80409572cadd835.CustomSort": {"_ontology_name": "RecipehelpOntology", "_dynamic": false, "_name": "step"}}, "name": "step_to_choose", "grammar_category": null, "_ontology_name": "RecipehelpOntology", "_multiple_instances": false, "feature_of_name": null}}, "_predicted": false, "_type": "PREDICATE", "individual": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.CustomSort": {"_ontology_name": "RecipehelpOntology", "_dynamic": false, "_name": "step"}}, "value": "step1"}}}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to step one", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 13:22:42,890 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to step one}], sender=TextInputComponent, reason=None)
2017-10-24 13:22:42,890 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #])}, sender=InterpretModule, reason=None))
2017-10-24 13:22:42,890 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #])}, sender=InterpretModule, reason=None)
2017-10-24 13:22:42,890 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager posts Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 13:22:42,891 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_LISTENING, None, sender=TurnManager, reason=None)
2017-10-24 13:22:42,891 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_LISTENING"}
2017-10-24 13:22:42,891 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:42,892 - session_2017-10-24T13_22_32_0 - INFO - TurnManager.enter_state(IDLE, Not interrupting) (previous state was IDLE)
2017-10-24 13:22:42,892 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 13:22:42,892 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 13:22:42,893 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None)
2017-10-24 13:22:42,893 - session_2017-10-24T13_22_32_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 13:22:42,894 - session_2017-10-24T13_22_32_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f91ac177e50>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f91a9a5f910>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508844162.89
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:loadplan), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([])
tis.private.tmp.usr.plan: Stack([])
tis.private.tmp.usr.qud: stackset([])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step one
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 13:22:42,894 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:filterReadings
2017-10-24 13:22:42,899 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to step one"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #]), OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #])}
-- END TIS changes --
2017-10-24 13:22:42,899 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:filterReadings
2017-10-24 13:22:42,904 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                 ^                                                                                                                                                      ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                                 ^                                                                                                                                                      ^
- tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to step one'), #])}
?                                                                                                                                ^                                                                                                                                                      ^
+ tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), #])}
?                                                                                                                                ^                                                                                                                                                      ^
-- END TIS changes --
2017-10-24 13:22:42,904 - session_2017-10-24T13_22_32_0 - INFO - hypotheses reranking had no effect
2017-10-24 13:22:42,904 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 13:22:42,907 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 13:22:42,907 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 13:22:42,913 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 13:22:42,913 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 13:22:42,914 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 13:22:42,916 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 13:22:42,917 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 13:22:42,917 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 13:22:42,922 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
- tis.private.tmp.usr.goals: stackset([])
+ tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
- tis.private.tmp.usr.plan: Stack([])
+ tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
- tis.private.tmp.usr.qud: stackset([])
+ tis.private.tmp.usr.qud: stackset([?X.goal(X)])
?                                    ++++++++++
-- END TIS changes --
2017-10-24 13:22:42,922 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 13:22:42,922 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 13:22:42,923 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 13:22:42,923 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 13:22:42,923 - session_2017-10-24T13_22_32_0 - INFO - BEGIN integrate_moves
2017-10-24 13:22:42,923 - session_2017-10-24T13_22_32_0 - INFO - init_shift: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), #])
2017-10-24 13:22:42,923 - session_2017-10-24T13_22_32_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 13:22:42,923 - session_2017-10-24T13_22_32_0 - INFO - init_shift: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), #])
2017-10-24 13:22:42,923 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrate
2017-10-24 13:22:42,927 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: integrateUsrAsk
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
- tis.private.nim: OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), #])
+ tis.private.nim: OpenQueue([Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), #])
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one')}
- tis.shared.qud: stackset([?X.goal(X)])
+ tis.shared.qud: stackset([?X.go_to_step(X), ?X.goal(X)])
?                                ++++++++++++++++++
-- END TIS changes --
2017-10-24 13:22:42,927 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 13:22:42,927 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 13:22:42,930 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: downdateISSUES2
-- BEGIN TIS changes --
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), resolve_user(?X.goal(X)), perform(top)])
?                                                        --------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 13:22:42,930 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 13:22:42,930 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:42,935 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: findIssuePlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), respond(?X.go_to_step(X))])
?                                                                   - ^ ^ -----------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^ ^^
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 13:22:42,935 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrate
2017-10-24 13:22:42,936 - session_2017-10-24T13_22_32_0 - INFO - shifted: OpenQueue([#, Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one')])
2017-10-24 13:22:42,936 - session_2017-10-24T13_22_32_0 - INFO - breaking out: nim fully shifted: OpenQueue([#, Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one')])
2017-10-24 13:22:42,936 - session_2017-10-24T13_22_32_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 13:22:42,936 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 13:22:42,936 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_action
2017-10-24 13:22:42,936 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_reject
2017-10-24 13:22:42,936 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:accommodate
2017-10-24 13:22:42,940 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: accommodatePlan2Goals
-- BEGIN TIS changes --
- tis.private.issues_being_accommodated: {}
+ tis.private.issues_being_accommodated: {?X.step_to_choose(X)}
?                                         ++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ++++++++++++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 13:22:42,940 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:retract
2017-10-24 13:22:42,940 - session_2017-10-24T13_22_32_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 13:22:42,940 - session_2017-10-24T13_22_32_0 - INFO - init_shift: OpenQueue([Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), #])
2017-10-24 13:22:42,941 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrate
2017-10-24 13:22:42,944 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: integrateUsrAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), #])
+ tis.private.nim: OpenQueue([#])
- tis.recent_commitments: {}
+ tis.recent_commitments: {step_to_choose(step1)}
- tis.shared.com: {}
+ tis.shared.com: {step_to_choose(step1)}
- tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one')}
+ tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one')}
-- END TIS changes --
2017-10-24 13:22:42,944 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 13:22:42,944 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 13:22:42,948 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {step_to_choose(step1)}
+ tis.shared.com: {step_to_choose(step1), resolved(?X.step_to_choose(X))}
- tis.shared.goals: stackset([resolve_user(?X.step_to_choose(X)), resolve(?X.go_to_step(X)), perform(top)])
?                             ------------------------------------
+ tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
-- END TIS changes --
2017-10-24 13:22:42,948 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 13:22:42,951 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: removeFindout
-- BEGIN TIS changes --
- tis.private.plan: Stack([findout(?X.step_to_choose(X)), device_query(?X.go_to_step(X)), forget(step_to_choose)])
?                          -------------------------------
+ tis.private.plan: Stack([device_query(?X.go_to_step(X)), forget(step_to_choose)])
-- END TIS changes --
2017-10-24 13:22:42,951 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:42,952 - session_2017-10-24T13_22_32_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 13:22:42,952 - session_2017-10-24T13_22_32_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 13:22:42,952 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 13:22:42,952 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_action
2017-10-24 13:22:42,952 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_reject
2017-10-24 13:22:42,952 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:accommodate
2017-10-24 13:22:42,952 - session_2017-10-24T13_22_32_0 - INFO - breaking out of accommodate
2017-10-24 13:22:42,952 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_reject
2017-10-24 13:22:42,952 - session_2017-10-24T13_22_32_0 - INFO - END integrate_moves
2017-10-24 13:22:42,953 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:42,956 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: exec_dev_query
-- BEGIN TIS changes --
- tis.private.bel: {}
+ tis.private.bel: {go_to_step("chose step1")}
- tis.private.plan: Stack([device_query(?X.go_to_step(X)), forget(step_to_choose)])
?                          --------------------------------
+ tis.private.plan: Stack([forget(step_to_choose)])
-- END TIS changes --
2017-10-24 13:22:42,956 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:42,956 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:42,959 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: exec_forget
-- BEGIN TIS changes --
- tis.private.plan: Stack([forget(step_to_choose)])
+ tis.private.plan: Stack([])
- tis.shared.com: {step_to_choose(step1), resolved(?X.step_to_choose(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 13:22:42,959 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:42,959 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:42,959 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:42,959 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 13:22:42,962 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.go_to_step(X), ?X.goal(X)])
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 13:22:42,963 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 13:22:42,963 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:42,963 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:42,963 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 13:22:42,964 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 13:22:42,964 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule posts Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 13:22:42,964 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to step one, sender=DmeModule, reason=None)
2017-10-24 13:22:42,964 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None)
2017-10-24 13:22:42,964 - session_2017-10-24T13_22_32_0 - INFO - running ISU module: select
2017-10-24 13:22:42,965 - session_2017-10-24T13_22_32_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f91ac177e50>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f91a9a5f910>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508844162.89
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one')])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.bel: {go_to_step("chose step1")}
tis.private.issues_being_accommodated: {?X.step_to_choose(X)}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step one
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one')}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 13:22:42,965 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 13:22:42,970 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                ++++++++++++++++++++++++++++++++
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.bel: {go_to_step("chose step1")}
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                                      +++++++++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 13:22:42,970 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_action
2017-10-24 13:22:42,974 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: selectRespond
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), respond(?X.go_to_step(X))])
?                                                                                                  +++++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 13:22:42,974 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_icm
2017-10-24 13:22:42,978 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan)), respond(?X.go_to_step(X))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), respond(?X.go_to_step(X))])
-- END TIS changes --
2017-10-24 13:22:42,978 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_move
2017-10-24 13:22:42,978 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_icm
2017-10-24 13:22:42,981 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan)), respond(?X.go_to_step(X))])
?                                   ---------------------------------
+ tis.private.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
-- END TIS changes --
2017-10-24 13:22:42,981 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_move
2017-10-24 13:22:42,984 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: selectAnswer
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose step1")))])
- tis.private.agenda: OpenQueue([#, respond(?X.go_to_step(X))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 13:22:42,984 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_icm
2017-10-24 13:22:42,984 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_move
2017-10-24 13:22:42,984 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 13:22:42,987 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 13:22:42,987 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 13:22:42,987 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:set_timeout
2017-10-24 13:22:42,989 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 13:22:42,990 - session_2017-10-24T13_22_32_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')])
2017-10-24 13:22:42,990 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose step1")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 13:22:42,990 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None))
2017-10-24 13:22:42,990 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 13:22:42,991 - session_2017-10-24T13_22_32_0 - DEBUG - DeviceManager handles Event(COMMITMENTS_UPDATE, step_to_choose(step1), sender=DmeModule, reason=None)
2017-10-24 13:22:42,991 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to step one, sender=DmeModule, reason=None))
2017-10-24 13:22:42,991 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to step one, sender=DmeModule, reason=None)
2017-10-24 13:22:42,991 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to step one", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 13:22:42,991 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:42,992 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None))
2017-10-24 13:22:42,992 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None)
2017-10-24 13:22:42,992 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "go_to_step", "grammar_entry": null, "value": "chose step1"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 13:22:42,993 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:42,994 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose step1")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None)))
2017-10-24 13:22:42,994 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose step1")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), #])}, sender=TurnManager, reason=None))
2017-10-24 13:22:42,994 - session_2017-10-24T13_22_32_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 13:22:42,995 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose step1")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 13:22:42,995 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: resolve(?X.go_to_step(X)), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), bel: {go_to_step("chose step1")}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 13:22:42,996 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose step1")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 13:22:42,998 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp'), facts={go_to_step("chose step1")})
2017-10-24 13:22:42,998 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')
2017-10-24 13:22:42,998 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule: Generating utterance part from move Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')
2017-10-24 13:22:42,999 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule: Move Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp') generated as u'Ok chose step1.'
2017-10-24 13:22:42,999 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose step1.], sender=GenerateModule, reason=None)
2017-10-24 13:22:43,001 - session_2017-10-24T13_22_32_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose step1")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 13:22:43,002 - session_2017-10-24T13_22_32_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Ok chose step1.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 13:22:43,003 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {go_to_step("chose step1")}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, Move(answer(go_to_step("chose step1")))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: resolve(?X.go_to_step(X)), moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 13:22:43,003 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 13:22:43,004 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')])
2017-10-24 13:22:43,004 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move(move=Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp'), facts={go_to_step("chose step1")})
2017-10-24 13:22:43,004 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp')
2017-10-24 13:22:43,005 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.Popup instance at 0x7f91a92107e8>]
2017-10-24 13:22:43,005 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f91a92107e8>], sender=GuiBackend, reason=None)
2017-10-24 13:22:43,005 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend posted event
2017-10-24 13:22:43,006 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose step1.], sender=GenerateModule, reason=None))
2017-10-24 13:22:43,006 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Ok chose step1.], sender=GenerateModule, reason=None)
2017-10-24 13:22:43,006 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Ok chose step1."], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 13:22:43,006 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:43,006 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Ok chose step1.}, sender=IndependentGuiBackend, reason=None))
2017-10-24 13:22:43,007 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Ok chose step1.}, sender=IndependentGuiBackend, reason=None)
2017-10-24 13:22:43,007 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Ok chose step1."}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 13:22:43,008 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:43,009 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f91a92107e8>], sender=GuiBackend, reason=None))
2017-10-24 13:22:43,009 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.Popup instance at 0x7f91a92107e8>], sender=GuiBackend, reason=None)
2017-10-24 13:22:43,009 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Ok chose step1."}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 13:22:43,011 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:43,012 - session_2017-10-24T13_22_32_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 13:22:43,014 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend received event {"content": ["Ok chose step1."], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 13:22:43,015 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 13:22:43,015 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Ok chose step1.], sender=TextOutputComponent, reason=None))
2017-10-24 13:22:43,015 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Ok chose step1.], sender=TextOutputComponent, reason=None)
2017-10-24 13:22:43,015 - session_2017-10-24T13_22_32_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 13:22:43,016 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Ok chose step1.], sender=TurnManager, reason=None)
2017-10-24 13:22:43,016 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Ok chose step1.], sender=TurnManager, reason=None)
2017-10-24 13:22:43,016 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Ok chose step1.], sender=TurnManager, reason=None)
2017-10-24 13:22:43,016 - session_2017-10-24T13_22_32_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Ok chose step1.], sender=TurnManager, reason=None))
2017-10-24 13:22:43,018 - session_2017-10-24T13_22_32_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f91ac177e50>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f91a9a5f910>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508844163.02
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Ok chose step1.], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose step1")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {go_to_step("chose step1")}
tis.private.issues_being_accommodated: {?X.step_to_choose(X)}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {go_to_step("chose step1")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step one
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one')}
tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 13:22:43,018 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:filterReadings
2017-10-24 13:22:43,018 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 13:22:43,018 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 13:22:43,025 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.issues_being_accommodated: {?X.step_to_choose(X)}
?                                         --------------------
+ tis.private.issues_being_accommodated: {}
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one')}
?            ^^
- tis.shared.pm: {ICMMove(icm:loadplan, speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 13:22:43,025 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 13:22:43,025 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 13:22:43,028 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 13:22:43,028 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 13:22:43,028 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 13:22:43,028 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 13:22:43,028 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 13:22:43,028 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 13:22:43,029 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 13:22:43,029 - session_2017-10-24T13_22_32_0 - INFO - BEGIN integrate_moves
2017-10-24 13:22:43,029 - session_2017-10-24T13_22_32_0 - INFO - init_shift: OpenQueue([Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 13:22:43,029 - session_2017-10-24T13_22_32_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 13:22:43,029 - session_2017-10-24T13_22_32_0 - INFO - init_shift: OpenQueue([Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 13:22:43,029 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrate
2017-10-24 13:22:43,033 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: integrateSysAnswer
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {go_to_step("chose step1")}
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 13:22:43,033 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 13:22:43,033 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 13:22:43,037 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: downdateISSUES
-- BEGIN TIS changes --
- tis.shared.com: {go_to_step("chose step1")}
+ tis.shared.com: {go_to_step("chose step1"), resolved(?X.go_to_step(X))}
?                                           ++++++++++++++++++++++++++++
- tis.shared.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                             ---------------------------
+ tis.shared.goals: stackset([perform(top)])
-- END TIS changes --
2017-10-24 13:22:43,037 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 13:22:43,037 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:43,037 - session_2017-10-24T13_22_32_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 13:22:43,037 - session_2017-10-24T13_22_32_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 13:22:43,037 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 13:22:43,037 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_action
2017-10-24 13:22:43,037 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_reject
2017-10-24 13:22:43,037 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:accommodate
2017-10-24 13:22:43,037 - session_2017-10-24T13_22_32_0 - INFO - breaking out of accommodate
2017-10-24 13:22:43,037 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_reject
2017-10-24 13:22:43,037 - session_2017-10-24T13_22_32_0 - INFO - END integrate_moves
2017-10-24 13:22:43,038 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:43,038 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:43,038 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 13:22:43,038 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 13:22:43,038 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:43,038 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:43,038 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 13:22:43,039 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 13:22:43,041 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: enableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: False
?                      ^^^^
+ tis.timeout.enabled: True
?                      ^^^
-- END TIS changes --
2017-10-24 13:22:43,042 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule posts Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None)
2017-10-24 13:22:43,042 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Ok chose step1.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 13:22:43,042 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None))
2017-10-24 13:22:43,042 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [{predicate: go_to_step, grammar_entry: None, value: chose step1}], sender=DmeModule, reason=None)
2017-10-24 13:22:43,042 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"predicate": "go_to_step", "grammar_entry": null, "value": "chose step1"}], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 13:22:43,043 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:43,043 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Ok chose step1.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None))
2017-10-24 13:22:43,043 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Ok chose step1.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 13:22:43,043 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Ok chose step1.], latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, 1.0), sender=DmeModule, reason=None)
2017-10-24 13:22:43,044 - session_2017-10-24T13_22_32_0 - INFO - starting TIMEOUT timer: <tdm.maharani.scheduler.DelayedCall instance at 0x7f91a9210c20>:1.0
2017-10-24 13:22:43,044 - session_2017-10-24T13_22_32_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 13:22:44,044 - session_2017-10-24T13_22_32_0 - DEBUG - Timeout fired
2017-10-24 13:22:44,044 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager posts Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 13:22:44,045 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 13:22:44,045 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule handles Event(TIMEOUT, None, sender=TurnManager, reason=None)
2017-10-24 13:22:44,045 - session_2017-10-24T13_22_32_0 - INFO - running ISU module: update (Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 13:22:44,046 - session_2017-10-24T13_22_32_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f91ac177e50>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f91a9a5f910>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508844164.05
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, Move(answer(go_to_step("chose step1")))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {go_to_step("chose step1")}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {go_to_step("chose step1")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step one
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {go_to_step("chose step1"), resolved(?X.go_to_step(X))}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one')}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 13:22:44,046 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:filterReadings
2017-10-24 13:22:44,046 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 13:22:44,049 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#])
-- END TIS changes --
2017-10-24 13:22:44,049 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 13:22:44,053 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {Move(ask(?X.go_to_step(X)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one'), Move(answer(step_to_choose(step1)), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to step one')}
-- END TIS changes --
2017-10-24 13:22:44,053 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 13:22:44,053 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 13:22:44,056 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 13:22:44,056 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 13:22:44,056 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 13:22:44,056 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 13:22:44,056 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 13:22:44,056 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 13:22:44,056 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 13:22:44,056 - session_2017-10-24T13_22_32_0 - INFO - BEGIN integrate_moves
2017-10-24 13:22:44,056 - session_2017-10-24T13_22_32_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 13:22:44,056 - session_2017-10-24T13_22_32_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 13:22:44,056 - session_2017-10-24T13_22_32_0 - INFO - init_shift: OpenQueue([#])
2017-10-24 13:22:44,056 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrate
2017-10-24 13:22:44,057 - session_2017-10-24T13_22_32_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 13:22:44,057 - session_2017-10-24T13_22_32_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 13:22:44,057 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 13:22:44,057 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_action
2017-10-24 13:22:44,057 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_reject
2017-10-24 13:22:44,057 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:accommodate
2017-10-24 13:22:44,057 - session_2017-10-24T13_22_32_0 - INFO - breaking out of accommodate
2017-10-24 13:22:44,057 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_reject
2017-10-24 13:22:44,057 - session_2017-10-24T13_22_32_0 - INFO - END integrate_moves
2017-10-24 13:22:44,057 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:44,060 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: recoverPerformPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 13:22:44,060 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:44,061 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:44,064 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: exec_forget_all
-- BEGIN TIS changes --
- tis.private.bel: {go_to_step("chose step1")}
+ tis.private.bel: {}
- tis.private.plan: Stack([forget_all, findout(?X.goal(X))])
?                           ------------
+ tis.private.plan: Stack([findout(?X.goal(X))])
- tis.shared.com: {go_to_step("chose step1"), resolved(?X.go_to_step(X))}
+ tis.shared.com: {}
-- END TIS changes --
2017-10-24 13:22:44,064 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:44,064 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:44,065 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:44,065 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 13:22:44,065 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 13:22:44,065 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:44,065 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:44,065 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 13:22:44,066 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 13:22:44,066 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 13:22:44,066 - session_2017-10-24T13_22_32_0 - INFO - running ISU module: select
2017-10-24 13:22:44,067 - session_2017-10-24T13_22_32_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f91ac177e50>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f91a9a5f910>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508844164.05
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(TIMEOUT, None, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#])
tis.latest_moves_amb: {}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
tis.private.tmp.sys.bel: {go_to_step("chose step1")}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to step one
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 13:22:44,067 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 13:22:44,072 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), emit_icm(ICMMove(icm:loadplan))])
?                                                                 ^^^  ^^^^^^^^^^^^  ^^^^ ----------- ^^^
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
?                                                                +++ ^^^^ +++ ^  ^  ^
- tis.private.tmp.sys.bel: {go_to_step("chose step1")}
+ tis.private.tmp.sys.bel: {}
- tis.private.tmp.sys.goals: stackset([resolve(?X.go_to_step(X)), perform(top)])
?                                      ---------------------------
+ tis.private.tmp.sys.goals: stackset([perform(top)])
- tis.private.tmp.sys.plan: Stack([])
+ tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  +++++++++++++++++++
-- END TIS changes --
2017-10-24 13:22:44,072 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_action
2017-10-24 13:22:44,074 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: selectFromPlan
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
?                                                                              +++++++++++++++++++++
-- END TIS changes --
2017-10-24 13:22:44,075 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_icm
2017-10-24 13:22:44,077 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top))), findout(?X.goal(X))])
+ tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
-- END TIS changes --
2017-10-24 13:22:44,077 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_move
2017-10-24 13:22:44,080 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: selectAsk
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top))])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
?                                                                          +++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, findout(?X.goal(X))])
?                                 ---------------------
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 13:22:44,080 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_icm
2017-10-24 13:22:44,080 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_move
2017-10-24 13:22:44,080 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 13:22:44,082 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 13:22:44,082 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 13:22:44,082 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:set_timeout
2017-10-24 13:22:44,084 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: setLongTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 1.0
?                       ^
+ tis.timeout.duration: 5.0
?                       ^
-- END TIS changes --
2017-10-24 13:22:44,085 - session_2017-10-24T13_22_32_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 13:22:44,085 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 13:22:58,115 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend received event {"content": [{"score": 1.0, "utterance": "go to next step"}], "_sender": "TextInputComponent", "_reason": null, "event_type": "RECOGNITION"}
2017-10-24 13:22:58,115 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 13:22:58,115 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(RECOGNITION, [{score: 1.0, utterance: go to next step}], sender=TextInputComponent, reason=None))
2017-10-24 13:22:58,115 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(RECOGNITION, [{score: 1.0, utterance: go to next step}], sender=TextInputComponent, reason=None)
2017-10-24 13:22:58,115 - session_2017-10-24T13_22_32_0 - DEBUG - InterpretModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next step}], sender=TextInputComponent, reason=None)
2017-10-24 13:22:58,116 - session_2017-10-24T13_22_32_0 - ANALYTICS - RECOGNITION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": [{"score": 1.0, "utterance": "go to next step"}], "type": "RECOGNITION", "_sender": "TextInputComponent", "_reason": null}}
2017-10-24 13:22:58,116 - session_2017-10-24T13_22_32_0 - DEBUG - Starting 'ExactInterpreter'
2017-10-24 13:22:58,117 - session_2017-10-24T13_22_32_0 - DEBUG - ExactInterpreter: Got exact non-literal interpretations
2017-10-24 13:22:58,117 - session_2017-10-24T13_22_32_0 - DEBUG - ExactInterpreter: Returning exact interpretations {OpenQueue([Move(answer("go to next step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #])} for DDD 'recipehelp'
2017-10-24 13:22:58,117 - session_2017-10-24T13_22_32_0 - DEBUG - Result from 'ExactInterpreter': {OpenQueue([Move(answer("go to next step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #])}
2017-10-24 13:22:58,118 - session_2017-10-24T13_22_32_0 - DEBUG - InterpretModule posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #])}, sender=InterpretModule, reason=None)
2017-10-24 13:22:58,118 - session_2017-10-24T13_22_32_0 - ANALYTICS - INTERPRETATION - {"d4e3f6ea14687580669e21d8f8eb326f.Event": {"content": {"08f37221b2c0bde3539cf6828f6374be.Set": {"content": [{"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.AnswerMove": {"_type": "answer", "_ddd_name": "recipehelp", "_content": {"295b14b878e50960c506a133efa5cd94.Individual": {"_ontology_name": "RecipehelpOntology", "sort": {"29469b87e7e7f813b80409572cadd835.StringSort": {"_dynamic": false, "_name": "string"}}, "value": "go to next step"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next step", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}, {"08f37221b2c0bde3539cf6828f6374be.OpenQueue": {"_unshifted_content": null, "front_content": [{"ecb0845d22fdab10cf20c1c1dc2b6a0d.RequestMove": {"_type": "request", "_ddd_name": "recipehelp", "_content": {"6e33aa3d9d132b93a4a4a6e9b2d00468.Action": {"_ontology_name": "RecipehelpOntology", "value": "go_to_next"}}, "_weighted_score": 1.0, "_score": 1.0, "_utterance": "go to next step", "_modality": "speech", "_background": null, "_speaker": "USR"}}], "back_content": []}}], "contentclass": null}}, "type": "INTERPRETATION", "_sender": "InterpretModule", "_reason": null}}
2017-10-24 13:22:58,118 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule handles Event(RECOGNITION, [{score: 1.0, utterance: go to next step}], sender=TextInputComponent, reason=None)
2017-10-24 13:22:58,118 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 13:22:58,118 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 13:22:58,118 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 13:22:58,119 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:58,120 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None)))
2017-10-24 13:22:58,120 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(TIMEOUT, None, sender=TurnManager, reason=None))
2017-10-24 13:22:58,120 - session_2017-10-24T13_22_32_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 13:22:58,120 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 13:22:58,120 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(top), device_outputs: Stack([]), top_perform_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), bel: {}, facts_being_grounded: [], current_plan: Stack([findout(?X.goal(X))]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 13:22:58,121 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 13:22:58,121 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 13:22:58,122 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 13:22:58,122 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 13:22:58,122 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 13:22:58,122 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:reraise:perform(top))
2017-10-24 13:22:58,122 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule: Move ICMMove(icm:reraise:perform(top)) generated as u'Returning to the start view.'
2017-10-24 13:22:58,122 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule: Generating utterance part from move Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 13:22:58,123 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule: Move Move(ask(?X.goal(X)), ddd_name=u'recipehelp') generated as u'What would you like to do?'
2017-10-24 13:22:58,123 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 13:22:58,124 - session_2017-10-24T13_22_32_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 13:22:58,125 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([findout(?X.goal(X))]), bel: {}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(top), device_outputs: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(top), moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 13:22:58,125 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 13:22:58,125 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)), ddd_name=u'recipehelp')])
2017-10-24 13:22:58,126 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:reraise:perform(top)), facts={})
2017-10-24 13:22:58,126 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:reraise:perform(top))
2017-10-24 13:22:58,126 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move(move=Move(ask(?X.goal(X)), ddd_name=u'recipehelp'), facts={})
2017-10-24 13:22:58,126 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move finished, result is Move(ask(?X.goal(X)), ddd_name=u'recipehelp')
2017-10-24 13:22:58,126 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f91a9220a70>]
2017-10-24 13:22:58,126 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f91a9220a70>], sender=GuiBackend, reason=None)
2017-10-24 13:22:58,126 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend posted event
2017-10-24 13:22:58,127 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(INTERPRETATION, {OpenQueue([Move(answer("go to next step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #])}, sender=InterpretModule, reason=None))
2017-10-24 13:22:58,127 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #])}, sender=InterpretModule, reason=None)
2017-10-24 13:22:58,127 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager posts Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 13:22:58,127 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(STOP_SPEAKING, None, sender=TurnManager, reason=None)
2017-10-24 13:22:58,127 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": null, "_sender": "TurnManager", "_reason": null, "event_type": "STOP_SPEAKING"}
2017-10-24 13:22:58,129 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:58,130 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None))
2017-10-24 13:22:58,130 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [Returning to the start view., What would you like to do?], sender=GenerateModule, reason=None)
2017-10-24 13:22:58,131 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 13:22:58,132 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:58,133 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f91a9220a70>], sender=GuiBackend, reason=None))
2017-10-24 13:22:58,133 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.ClosePopup instance at 0x7f91a9220a70>], sender=GuiBackend, reason=None)
2017-10-24 13:22:58,133 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.ClosePopup": {}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 13:22:58,134 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:58,134 - session_2017-10-24T13_22_32_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 13:22:58,137 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend received event {"content": ["Returning to the start view.", "What would you like to do?"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 13:22:58,137 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 13:22:58,137 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None))
2017-10-24 13:22:58,137 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [Returning to the start view., What would you like to do?], sender=TextOutputComponent, reason=None)
2017-10-24 13:22:58,137 - session_2017-10-24T13_22_32_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 13:22:58,137 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 13:22:58,137 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 13:22:58,137 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
2017-10-24 13:22:58,138 - session_2017-10-24T13_22_32_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None))
2017-10-24 13:22:58,139 - session_2017-10-24T13_22_32_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f91ac177e50>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f91a9a5f910>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508844178.14
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [Returning to the start view., What would you like to do?], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next step
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {}
tis.shared.pm: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: True
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 13:22:58,139 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:filterReadings
2017-10-24 13:22:58,139 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 13:22:58,139 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 13:22:58,144 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: False
?                   ^^^^
+ tis.passive_mode: True
?                   ^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
- tis.shared.pm: {Move(answer(go_to_step("chose step1")), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
+ tis.shared.pm: {}
-- END TIS changes --
2017-10-24 13:22:58,144 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 13:22:58,144 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 13:22:58,147 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 13:22:58,147 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 13:22:58,147 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 13:22:58,147 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 13:22:58,147 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 13:22:58,147 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 13:22:58,147 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 13:22:58,147 - session_2017-10-24T13_22_32_0 - INFO - BEGIN integrate_moves
2017-10-24 13:22:58,147 - session_2017-10-24T13_22_32_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 13:22:58,147 - session_2017-10-24T13_22_32_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 13:22:58,148 - session_2017-10-24T13_22_32_0 - INFO - init_shift: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 13:22:58,148 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrate
2017-10-24 13:22:58,152 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             -----------------------------------------------------------
+ tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 13:22:58,152 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 13:22:58,152 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 13:22:58,152 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 13:22:58,152 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:58,152 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrate
2017-10-24 13:22:58,156 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: integrateSysAsk
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
?                             ++++++++++++++++++++++++++
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
- tis.shared.qud: stackset([])
+ tis.shared.qud: stackset([?X.goal(X)])
?                           ++++++++++
-- END TIS changes --
2017-10-24 13:22:58,156 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 13:22:58,156 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 13:22:58,156 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 13:22:58,156 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:58,156 - session_2017-10-24T13_22_32_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 13:22:58,156 - session_2017-10-24T13_22_32_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 13:22:58,156 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 13:22:58,156 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_action
2017-10-24 13:22:58,157 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_reject
2017-10-24 13:22:58,157 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:accommodate
2017-10-24 13:22:58,157 - session_2017-10-24T13_22_32_0 - INFO - breaking out of accommodate
2017-10-24 13:22:58,157 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_reject
2017-10-24 13:22:58,157 - session_2017-10-24T13_22_32_0 - INFO - END integrate_moves
2017-10-24 13:22:58,157 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:58,157 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:58,157 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 13:22:58,157 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 13:22:58,158 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:58,158 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:58,158 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 13:22:58,158 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 13:22:58,160 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: disableTimeout
-- BEGIN TIS changes --
- tis.timeout.enabled: True
?                      ^^^
+ tis.timeout.enabled: False
?                      ^^^^
-- END TIS changes --
2017-10-24 13:22:58,161 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 13:22:58,161 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule posts Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 13:22:58,161 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 13:22:58,161 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 13:22:58,161 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 13:22:58,162 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:58,162 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None))
2017-10-24 13:22:58,162 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager handles Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 13:22:58,162 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(END_SYSTEM_TURN, ({utterance: [Returning to the start view., What would you like to do?], latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])}, None), sender=DmeModule, reason=None)
2017-10-24 13:22:58,163 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager posts Event(INTERPRETATION, {OpenQueue([Move(answer("go to next step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #])}, sender=TurnManager, reason=None)
2017-10-24 13:22:58,163 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(INTERPRETATION, {OpenQueue([Move(answer("go to next step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #])}, sender=TurnManager, reason=None)
2017-10-24 13:22:58,164 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule handles Event(INTERPRETATION, {OpenQueue([Move(answer("go to next step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #])}, sender=TurnManager, reason=None)
2017-10-24 13:22:58,164 - session_2017-10-24T13_22_32_0 - INFO - running ISU module: update (Event(INTERPRETATION, {OpenQueue([Move(answer("go to next step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #])}, sender=TurnManager, reason=None))
2017-10-24 13:22:58,165 - session_2017-10-24T13_22_32_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f91ac177e50>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f91a9a5f910>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508844178.16
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(answer("go to next step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:reraise:perform(top)), Move(ask(?X.goal(X)))])
tis.next_utterance.plan_item: None
tis.passive_mode: True
tis.private.agenda: OpenQueue([#])
tis.private.bel: {}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next step
tis.repeat_questions: False
tis.score: 1.0
tis.shared.com: {}
tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: SYS
tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.pm: {}
tis.shared.previous_goal: None
tis.shared.qud: stackset([?X.goal(X)])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 13:22:58,165 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:filterReadings
2017-10-24 13:22:58,168 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: exclude_qud_irrelevant_literal_answer_moves
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(answer("go to next step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #])}, sender=TurnManager, reason=None)
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #])}, sender=TurnManager, reason=None)
- tis.latest_moves_amb: {OpenQueue([Move(answer("go to next step"), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #]), OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #])}
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #])}
-- END TIS changes --
2017-10-24 13:22:58,168 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:filterReadings
2017-10-24 13:22:58,172 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: uprankQUDRelevant
-- BEGIN TIS changes --
- tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
+ tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next step'), #])}, sender=TurnManager, reason=None)
?                                                                                                                                               ^
- tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.0, modality=speech, utterance=u'go to next step'), #])}
?                                                                                                                              ^
+ tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next step'), #])}
?                                                                                                                              ^
-- END TIS changes --
2017-10-24 13:22:58,173 - session_2017-10-24T13_22_32_0 - INFO - hypotheses reranking had no effect
2017-10-24 13:22:58,173 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 13:22:58,178 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: selectHypothesis
-- BEGIN TIS changes --
- tis.latest_moves: OpenQueue([#, ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
+ tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next step')])
- tis.score: 1.0
?              ^
+ tis.score: 1.2
?              ^
-- END TIS changes --
2017-10-24 13:22:58,178 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 13:22:58,185 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.passive_mode: True
?                   ^^^
+ tis.passive_mode: False
?                   ^^^^
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next step'), #])
- tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.speaker: USR
?                        + ^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
?            ^^
- tis.shared.pm: {}
-- END TIS changes --
2017-10-24 13:22:58,185 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 13:22:58,185 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 13:22:58,189 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 13:22:58,189 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 13:22:58,190 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 13:22:58,193 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: backupSharedUsr
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 13:22:58,193 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 13:22:58,193 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 13:22:58,193 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 13:22:58,193 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 13:22:58,194 - session_2017-10-24T13_22_32_0 - INFO - BEGIN integrate_moves
2017-10-24 13:22:58,194 - session_2017-10-24T13_22_32_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next step'), #])
2017-10-24 13:22:58,194 - session_2017-10-24T13_22_32_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 13:22:58,194 - session_2017-10-24T13_22_32_0 - INFO - init_shift: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next step'), #])
2017-10-24 13:22:58,194 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrate
2017-10-24 13:22:58,198 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: integrateUsrRequest
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.nim: OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next step'), #])
+ tis.private.nim: OpenQueue([#])
- tis.private.plan: Stack([findout(?X.goal(X))])
+ tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
?                          ++++++++++++++++
- tis.shared.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
+ tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                             +++++++++++++++++++++
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next step')}
-- END TIS changes --
2017-10-24 13:22:58,199 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 13:22:58,199 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 13:22:58,201 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: downdateISSUES3
-- BEGIN TIS changes --
- tis.shared.goals: stackset([perform(go_to_next), resolve_user(?X.goal(X)), perform(top)])
?                                                  --------------------------
+ tis.shared.goals: stackset([perform(go_to_next), perform(top)])
-- END TIS changes --
2017-10-24 13:22:58,201 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 13:22:58,202 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:58,205 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: findActionPlan
-- BEGIN TIS changes --
- tis.private.plan: Stack([do(go_to_next), findout(?X.goal(X))])
+ tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
-- END TIS changes --
2017-10-24 13:22:58,205 - session_2017-10-24T13_22_32_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 13:22:58,205 - session_2017-10-24T13_22_32_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 13:22:58,205 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 13:22:58,205 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_action
2017-10-24 13:22:58,206 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_reject
2017-10-24 13:22:58,206 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:accommodate
2017-10-24 13:22:58,206 - session_2017-10-24T13_22_32_0 - INFO - breaking out of accommodate
2017-10-24 13:22:58,206 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_reject
2017-10-24 13:22:58,206 - session_2017-10-24T13_22_32_0 - INFO - END integrate_moves
2017-10-24 13:22:58,206 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:58,209 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: exec_dev_perform
-- BEGIN TIS changes --
- tis.device_outputs: Stack([])
+ tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos))])
- tis.private.bel: {}
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.plan: Stack([dev_perform(go_to_next, RecipehelpDevice, {preconfirm=None, postconfirm=True})])
+ tis.private.plan: Stack([])
-- END TIS changes --
2017-10-24 13:22:58,209 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:58,209 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:58,209 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:58,209 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_qud
2017-10-24 13:22:58,212 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: downdateQUD
-- BEGIN TIS changes --
- tis.shared.qud: stackset([?X.goal(X)])
?                           ----------
+ tis.shared.qud: stackset([])
-- END TIS changes --
2017-10-24 13:22:58,212 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 13:22:58,212 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:58,212 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:58,212 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 13:22:58,212 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:enable_timeout
2017-10-24 13:22:58,213 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule posts Event(SELECTED_RECOGNITION, go to next step, sender=DmeModule, reason=None)
2017-10-24 13:22:58,213 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule posts Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 13:22:58,213 - session_2017-10-24T13_22_32_0 - INFO - running ISU module: select
2017-10-24 13:22:58,214 - session_2017-10-24T13_22_32_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f91ac177e50>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f91a9a5f910>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508844178.16
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next step'), #])}, sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next step')])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next step'), #])}
tis.latest_speaker: USR
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
tis.private.tmp.sys.bel: {}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(top)])
tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next step
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next step')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 5.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 13:22:58,215 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:backupSharedSys
2017-10-24 13:22:58,218 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: backupSharedSys
-- BEGIN TIS changes --
- tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:reraise:perform(top)))])
- tis.private.tmp.sys.bel: {}
+ tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
- tis.private.tmp.sys.goals: stackset([perform(top)])
+ tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
?                                              +++++++++++++++++++++
- tis.private.tmp.sys.plan: Stack([findout(?X.goal(X))])
?                                  -------------------
+ tis.private.tmp.sys.plan: Stack([])
-- END TIS changes --
2017-10-24 13:22:58,218 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_icm
2017-10-24 13:22:58,221 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: selectIcmOther
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
?                                       ++++++++++++++++++++++
- tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
?                                 --------------------------------
+ tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
-- END TIS changes --
2017-10-24 13:22:58,222 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_move
2017-10-24 13:22:58,224 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: selectReport
-- BEGIN TIS changes --
- tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos)])
+ tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
- tis.private.agenda: OpenQueue([#, device_report(DeviceResultProposition(go_to_next, [], True, None))])
+ tis.private.agenda: OpenQueue([#])
-- END TIS changes --
2017-10-24 13:22:58,224 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_icm
2017-10-24 13:22:58,224 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_move
2017-10-24 13:22:58,224 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:clearContext
2017-10-24 13:22:58,227 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: clearContext
-- BEGIN TIS changes --
-- END TIS changes --
2017-10-24 13:22:58,227 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:setGUIContext
2017-10-24 13:22:58,227 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:set_timeout
2017-10-24 13:22:58,229 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: setShortTimeout
-- BEGIN TIS changes --
- tis.timeout.duration: 5.0
?                       ^
+ tis.timeout.duration: 1.0
?                       ^
-- END TIS changes --
2017-10-24 13:22:58,230 - session_2017-10-24T13_22_32_0 - INFO - DmeModule posts SYSTEM_MOVES_SELECTED with moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 13:22:58,230 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next step'), #])}, sender=TurnManager, reason=None))
2017-10-24 13:22:58,230 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(SELECTED_RECOGNITION, go to next step, sender=DmeModule, reason=None))
2017-10-24 13:22:58,230 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(SELECTED_RECOGNITION, go to next step, sender=DmeModule, reason=None)
2017-10-24 13:22:58,230 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": "go to next step", "_sender": "DmeModule", "_reason": null, "event_type": "SELECTED_RECOGNITION"}
2017-10-24 13:22:58,231 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:58,231 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(FACTS, [], sender=DmeModule, reason=None))
2017-10-24 13:22:58,231 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(FACTS, [], sender=DmeModule, reason=None)
2017-10-24 13:22:58,232 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": [], "_sender": "DmeModule", "_reason": null, "event_type": "FACTS"}
2017-10-24 13:22:58,232 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:58,233 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next step'), #])}, sender=TurnManager, reason=None)))
2017-10-24 13:22:58,233 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager handles Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=DmeModule, reason=Event(INTERPRETATION, {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next step'), #])}, sender=TurnManager, reason=None))
2017-10-24 13:22:58,233 - session_2017-10-24T13_22_32_0 - INFO - TurnManager.enter_state(SYSTEM_TURN, echoing System moves selected) (previous state was IDLE)
2017-10-24 13:22:58,233 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 13:22:58,234 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES_SELECTED, {cogload_level: LOW, current_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), top_perform_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, facts_being_grounded: [], current_plan: Stack([]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 13:22:58,234 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 13:22:58,235 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 13:22:58,235 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 13:22:58,235 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 13:22:58,235 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 13:22:58,235 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule: Generating utterance part from move ICMMove(icm:acc*pos)
2017-10-24 13:22:58,235 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule: Move ICMMove(icm:acc*pos) generated as ''
2017-10-24 13:22:58,235 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule: Generating utterance part from move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 13:22:58,236 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule: Move report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp') generated as u'Went to next'
2017-10-24 13:22:58,236 - session_2017-10-24T13_22_32_0 - DEBUG - GenerateModule posts Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None)
2017-10-24 13:22:58,237 - session_2017-10-24T13_22_32_0 - DEBUG - IndependentGuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 13:22:58,238 - session_2017-10-24T13_22_32_0 - DEBUG - IndependentGuiBackend posts Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 13:22:58,238 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend handles Event(SYSTEM_MOVES_SELECTED, {current_plan: Stack([]), bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}, cogload_level: LOW, facts_being_grounded: [], top_perform_goal: perform(go_to_next), device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)]), next_utterance: NextUtterance(moves=OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))]), context={}, alts=[], plan_item=None, default_value=None), previous_goal: None, current_goal: perform(go_to_next), moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')]), com: {}, cogload_strategy: None}, sender=TurnManager, reason=None)
2017-10-24 13:22:58,239 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend triggered by SYSTEM_MOVES_SELECTED
2017-10-24 13:22:58,239 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend triggered by moves OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')])
2017-10-24 13:22:58,239 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move(move=ICMMove(icm:acc*pos), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 13:22:58,239 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move finished, result is ICMMove(icm:acc*pos)
2017-10-24 13:22:58,239 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move(move=report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp'), facts={device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)})
2017-10-24 13:22:58,239 - session_2017-10-24T13_22_32_0 - DEBUG - OutputPlanner._plan_move finished, result is report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp')
2017-10-24 13:22:58,240 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend generated message [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f91a9a771b8>, <tdm.tdm_gui_protocol.Popup instance at 0x7f91a92207e8>]
2017-10-24 13:22:58,240 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend posts Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f91a9a771b8>, <tdm.tdm_gui_protocol.Popup instance at 0x7f91a92207e8>], sender=GuiBackend, reason=None)
2017-10-24 13:22:58,240 - session_2017-10-24T13_22_32_0 - DEBUG - GuiBackend posted event
2017-10-24 13:22:58,240 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None))
2017-10-24 13:22:58,240 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_UTTERANCE_TO_SPEAK, [, Went to next], sender=GenerateModule, reason=None)
2017-10-24 13:22:58,240 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": ["", "Went to next"], "_sender": "GenerateModule", "_reason": null, "event_type": "SYSTEM_UTTERANCE_TO_SPEAK"}
2017-10-24 13:22:58,241 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:58,241 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None))
2017-10-24 13:22:58,241 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(GUI.POPUP, {options: [], title: Went to next}, sender=IndependentGuiBackend, reason=None)
2017-10-24 13:22:58,241 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": {"options": [], "title": "Went to next"}, "_sender": "IndependentGuiBackend", "_reason": null, "event_type": "GUI.POPUP"}
2017-10-24 13:22:58,242 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:58,242 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f91a9a771b8>, <tdm.tdm_gui_protocol.Popup instance at 0x7f91a92207e8>], sender=GuiBackend, reason=None))
2017-10-24 13:22:58,242 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(MESSAGE_TO_GUI, [<tdm.tdm_gui_protocol.DeviceResult instance at 0x7f91a9a771b8>, <tdm.tdm_gui_protocol.Popup instance at 0x7f91a92207e8>], sender=GuiBackend, reason=None)
2017-10-24 13:22:58,242 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend is sending event {"content": [{"29687f5934314b7ff2716cd9f6c1a5c9.DeviceResult": {"action": "go_to_next", "result": true, "arguments": {}, "failure_reason": null}}, {"29687f5934314b7ff2716cd9f6c1a5c9.Popup": {"elements": [], "title": "Went to next"}}], "_sender": "GuiBackend", "_reason": null, "event_type": "MESSAGE_TO_GUI"}
2017-10-24 13:22:58,243 - session_2017-10-24T13_22_32_0 - DEBUG - Sent.
2017-10-24 13:22:58,243 - session_2017-10-24T13_22_32_0 - DEBUG - Backend.handle_event_from_external_queue()
2017-10-24 13:22:58,267 - session_2017-10-24T13_22_32_0 - DEBUG - Backend communication: Backend received event {"content": ["", "Went to next"], "_sender": "TextOutputComponent", "_reason": null, "event_type": "SYSTEM_UTTERANCE_REALIZED"}
2017-10-24 13:22:58,268 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_external_event(...)
2017-10-24 13:22:58,269 - session_2017-10-24T13_22_32_0 - DEBUG - Backend._handle_event(Event(SYSTEM_UTTERANCE_REALIZED, [, Went to next], sender=TextOutputComponent, reason=None))
2017-10-24 13:22:58,269 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager handles Event(SYSTEM_UTTERANCE_REALIZED, [, Went to next], sender=TextOutputComponent, reason=None)
2017-10-24 13:22:58,269 - session_2017-10-24T13_22_32_0 - INFO - TurnManager.enter_state(IDLE, SYS done speaking) (previous state was SYSTEM_TURN)
2017-10-24 13:22:58,269 - session_2017-10-24T13_22_32_0 - DEBUG - TurnManager posts Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 13:22:58,269 - session_2017-10-24T13_22_32_0 - DEBUG - EventDispatcher: dispatching event Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 13:22:58,269 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule handles Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
2017-10-24 13:22:58,269 - session_2017-10-24T13_22_32_0 - INFO - running ISU module: update (Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None))
2017-10-24 13:22:58,271 - session_2017-10-24T13_22_32_0 - DEBUG - <-<-<-<-<-<-<-IS->->->->->->>
TIS:
tis._ddd_manager: <tdm.ddd_manager.DddManager object at 0x7f91ac177e50>
tis._logged_tis_format: diff
tis._semantic_logic: <tdm.lib.semantic_logic.SemanticLogic object at 0x7f91a9a5f910>
tis.active_ddd: Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})
tis.cogload_level: LOW
tis.cogload_management: False
tis.cogload_strategy: None
tis.conf_prediction_threshold.acknowledge: 0.8
tis.conf_prediction_threshold.check: 0.6
tis.conf_prediction_threshold.normal.acknowledge: 0.9
tis.conf_prediction_threshold.normal.check: 0.6
tis.conf_prediction_threshold.normal.trust: 1.01
tis.conf_prediction_threshold.trust: 1.0
tis.confidence_profiles.normal.acknowledge: 0.15
tis.confidence_profiles.normal.check: 0.1
tis.confidence_profiles.normal.trust: 0.3
tis.confidence_profiles.relaxed.acknowledge: 0.35
tis.confidence_profiles.relaxed.check: 0.4
tis.confidence_profiles.relaxed.trust: 0.4
tis.confidence_profiles.strict.acknowledge: 0.7
tis.confidence_profiles.strict.check: 0.4
tis.confidence_profiles.strict.trust: 0.8
tis.current_time: 1508844178.27
tis.ddds: [Ddd(u'recipehelp', u'RecipehelpOntology', u'RecipehelpDomain', {'eng': GfGrammar(u'recipehelp', 'eng')})]
tis.device_manager: Device Manager: ['RecipehelpDevice']
tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
tis.high_cogload_onset_time: None
tis.input_event: Event(SYSTEM_MOVES, [, Went to next], sender=TurnManager, reason=None)
tis.language_code: eng
tis.latest_moves: OpenQueue([#, ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)])
tis.latest_moves_amb: {OpenQueue([Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next step'), #])}
tis.latest_speaker: SYS
tis.logged_tis_format: diff
tis.next_utterance.alts: []
tis.next_utterance.context: {}
tis.next_utterance.default_value: None
tis.next_utterance.moves: OpenQueue([#, ICMMove(icm:acc*pos), report(DeviceResultProposition(go_to_next, [], True, None))])
tis.next_utterance.plan_item: None
tis.passive_mode: False
tis.private.agenda: OpenQueue([#])
tis.private.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.issues_being_accommodated: {}
tis.private.nim: OpenQueue([#])
tis.private.plan: Stack([])
tis.private.tmp.sys.agenda: OpenQueue([#, emit_icm(ICMMove(icm:acc*pos)), device_report(DeviceResultProposition(go_to_next, [], True, None))])
tis.private.tmp.sys.bel: {device_activity_terminated(go_to_next), DeviceResultProposition(go_to_next, [], True, None)}
tis.private.tmp.sys.com: {}
tis.private.tmp.sys.goals: stackset([perform(go_to_next), perform(top)])
tis.private.tmp.sys.plan: Stack([])
tis.private.tmp.sys.qud: stackset([])
tis.private.tmp.usr.agenda: OpenQueue([#])
tis.private.tmp.usr.bel: {}
tis.private.tmp.usr.com: {}
tis.private.tmp.usr.goals: stackset([resolve_user(?X.goal(X)), perform(top)])
tis.private.tmp.usr.plan: Stack([findout(?X.goal(X))])
tis.private.tmp.usr.qud: stackset([?X.goal(X)])
tis.program_state: RUN
tis.recent_commitments: {}
tis.recognized_utterance: go to next step
tis.repeat_questions: False
tis.score: 1.2
tis.shared.com: {}
tis.shared.goals: stackset([perform(go_to_next), perform(top)])
tis.shared.lu.moves: {}
tis.shared.lu.speaker: USR
tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next step')}
tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
tis.shared.previous_goal: None
tis.shared.qud: stackset([])
tis.sys_turns: 0
tis.timeout.duration: 1.0
tis.timeout.enabled: False
<-<-<-<-<-<-<-END->->->->->->>

2017-10-24 13:22:58,271 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:filterReadings
2017-10-24 13:22:58,271 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:selectHypothesis
2017-10-24 13:22:58,271 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:getLatestMoves
2017-10-24 13:22:58,277 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: getLatestMoves
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([#])
+ tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.speaker: USR
?                        - ^
+ tis.shared.lu.speaker: SYS
?                         ^^
+ tis.shared.lu.turn_cont: {}
- tis.shared.lu.turn_cont: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next step')}
?            ^^^^^^^^^^^^
+ tis.shared.pm: {Move(request(go_to_next), ddd_name=u'recipehelp', speaker=USR, score=1.0, weighted_score=1.2, modality=speech, utterance=u'go to next step')}
?            ^^
- tis.shared.pm: {ICMMove(icm:reraise:perform(top), speaker=SYS, score=1.0), Move(ask(?X.goal(X)), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 13:22:58,278 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:switch_ddd
2017-10-24 13:22:58,278 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:clearDeviceOutput
2017-10-24 13:22:58,280 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: clearDeviceOutput
-- BEGIN TIS changes --
- tis.device_outputs: Stack([DeviceResultProposition(go_to_next, [], True, None)])
+ tis.device_outputs: Stack([])
-- END TIS changes --
2017-10-24 13:22:58,280 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrateDeviceAction
2017-10-24 13:22:58,280 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:backupSharedUsr
2017-10-24 13:22:58,281 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:noFollowupToActionConf
2017-10-24 13:22:58,281 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:irrelevantFollowup
2017-10-24 13:22:58,281 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:noFollowupToUndQ
2017-10-24 13:22:58,281 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdateClarification
2017-10-24 13:22:58,281 - session_2017-10-24T13_22_32_0 - INFO - BEGIN integrate_moves
2017-10-24 13:22:58,281 - session_2017-10-24T13_22_32_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 13:22:58,281 - session_2017-10-24T13_22_32_0 - INFO - BEGIN try_move_integratation_without_accommodation
2017-10-24 13:22:58,281 - session_2017-10-24T13_22_32_0 - INFO - init_shift: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
2017-10-24 13:22:58,281 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrate
2017-10-24 13:22:58,286 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: integrateOtherICM
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
?                             ----------------------------------------------
+ tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
- tis.shared.lu.turn_cont: {}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
-- END TIS changes --
2017-10-24 13:22:58,286 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 13:22:58,286 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 13:22:58,286 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 13:22:58,287 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:58,287 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:integrate
2017-10-24 13:22:58,289 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: integrateReport
-- BEGIN TIS changes --
- tis.private.nim: OpenQueue([report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech), #])
+ tis.private.nim: OpenQueue([#])
- tis.shared.com: {}
+ tis.shared.com: {device_activity_terminated(go_to_next)}
- tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0)}
+ tis.shared.lu.turn_cont: {ICMMove(icm:acc*pos, speaker=SYS, score=1.0), report(DeviceResultProposition(go_to_next, [], True, None), ddd_name=u'recipehelp', speaker=SYS, score=1.0, weighted_score=1.0, modality=speech)}
-- END TIS changes --
2017-10-24 13:22:58,289 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:integrateSysAnswer
2017-10-24 13:22:58,289 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:downdate_goals
2017-10-24 13:22:58,293 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: downdatePerformOrHandle
-- BEGIN TIS changes --
- tis.private.plan: Stack([])
+ tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
- tis.shared.goals: stackset([perform(go_to_next), perform(top)])
?                                     ---------------------
+ tis.shared.goals: stackset([perform(top)])
- tis.shared.previous_goal: None
?                           ^
+ tis.shared.previous_goal: perform(go_to_next)
?                           ^^^^ +++++++++  +++
-- END TIS changes --
2017-10-24 13:22:58,293 - session_2017-10-24T13_22_32_0 - DEBUG - Testing preconds for rule:removeFindout
2017-10-24 13:22:58,293 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:58,293 - session_2017-10-24T13_22_32_0 - INFO - breaking out: nim fully shifted: OpenQueue([#])
2017-10-24 13:22:58,293 - session_2017-10-24T13_22_32_0 - INFO - END try_move_integratation_without_accommodation
2017-10-24 13:22:58,293 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:removeYesNo
2017-10-24 13:22:58,293 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_action
2017-10-24 13:22:58,293 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_reject
2017-10-24 13:22:58,293 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:accommodate
2017-10-24 13:22:58,294 - session_2017-10-24T13_22_32_0 - INFO - breaking out of accommodate
2017-10-24 13:22:58,294 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:select_reject
2017-10-24 13:22:58,294 - session_2017-10-24T13_22_32_0 - INFO - END integrate_moves
2017-10-24 13:22:58,294 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:58,298 - session_2017-10-24T13_22_32_0 - DEBUG - Applied rule: exec_jumpto
-- BEGIN TIS changes --
- tis.private.agenda: OpenQueue([#])
+ tis.private.agenda: OpenQueue([#, emit_icm(ICMMove(icm:loadplan))])
- tis.private.plan: Stack([jumpto(resolve(?X.say_step(X)))])
+ tis.private.plan: Stack([device_query(?X.say_step(X)), findout(?X.done(X)), forget(done)])
- tis.shared.goals: stackset([perform(top)])
+ tis.shared.goals: stackset([resolve(?X.say_step(X)), perform(top)])
?                             +++++++++++++++++++++++++
-- END TIS changes --
2017-10-24 13:22:58,298 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:load_plan
2017-10-24 13:22:58,298 - session_2017-10-24T13_22_32_0 - DEBUG - rulegroup:exec_plan
2017-10-24 13:22:58,299 - session_2017-10-24T13_22_32_0 - ERROR - exception in DmeModule
Traceback (most recent call last):
  File "/usr/lib64/python2.7/site-packages/tdm/lib/module.py", line 59, in process_event
    handler()
  File "/usr/lib64/python2.7/site-packages/tdm/dme_module.py", line 82, in handle_system_moves
    self.run_update_and_set_ddd_when_needed()
  File "/usr/lib64/python2.7/site-packages/tdm/dme_module.py", line 63, in run_update_and_set_ddd_when_needed
    self.run_update()
  File "/usr/lib64/python2.7/site-packages/tdm/dme_module.py", line 107, in run_update
    self.update_module.run(self.tis())
  File "tdm/update.py", line 166, in tdm.update.UpdateModule.run (tdm/update.c:8834)
  File "/usr/lib64/python2.7/site-packages/tdm/maharani/maharanilib.py", line 425, in repeatGroupSequence
    if self._apply(ruleGroup, identifier, tis):
  File "/usr/lib64/python2.7/site-packages/tdm/maharani/maharanilib.py", line 436, in _apply
    if self.applyRule(rule, tis):
  File "/usr/lib64/python2.7/site-packages/tdm/maharani/maharanilib.py", line 364, in applyRule
    rule.applyEffects(self._ddd_manager)
  File "/usr/lib64/python2.7/site-packages/tdm/maharani/maharanilib.py", line 278, in applyEffects
    apply(self.effects, arguments)
  File "tdm/update.py", line 2011, in tdm.update.exec_dev_query.effects (tdm/update.c:82618)
  File "/usr/lib64/python2.7/site-packages/tdm/device_handler.py", line 225, in query
    results = self.query_all(question, commitments)
  File "/usr/lib64/python2.7/site-packages/tdm/device_handler.py", line 152, in query_all
    result_descriptions = apply(query.perform, arguments)
  File "device.py", line 46, in perform
IndexError: list index out of range
2017-10-24 13:22:58,315 - session_2017-10-24T13_22_32_0 - DEBUG - DmeModule posts Event(BACKEND_ERROR, None, sender=DmeModule, reason=None)
